{
  "version": 3,
  "sources": ["../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuMutex.ts", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuDefine.ts", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuUtils.ts", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuIconCheck.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuIconRight.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuItem.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuSeparator.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextSubMenu.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextSubMenuWrapper.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenu.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuGroup.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/ContextMenuInstance.ts", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/MenuBarIconMenu.vue", "../../.pnpm/vsv-context-menu@1.4.2/node_modules/vsv-context-menu/library/MenuBar.vue"],
  "sourcesContent": ["import type { ContextMenuInstance } from \"./ContextMenuDefine\";\n\nlet currentOpenedContextMenu : ContextMenuInstance|null = null;\n\n\nexport function checkOpenedContextMenu() : boolean {\n  return currentOpenedContextMenu !== null;\n}\nexport function addOpenedContextMenu(inst: ContextMenuInstance) : void {\n  if (currentOpenedContextMenu)\n    closeContextMenu();\n  currentOpenedContextMenu = inst;\n}\nexport function removeOpenedContextMenu(inst: ContextMenuInstance) : void {\n  if (inst === currentOpenedContextMenu)\n    currentOpenedContextMenu = null;\n}  \n/**\n * Close the currently open menu\n */\nexport function closeContextMenu() : void {\n  if (currentOpenedContextMenu) {\n    currentOpenedContextMenu.closeMenu();\n    currentOpenedContextMenu = null;\n  }\n}\n", "import type { Ref, SVGAttributes, TransitionProps, VNode } from \"vue\";\n\n/**\n * Default config\n */\nexport const MenuConstOptions = {\n  defaultDirection: 'br',\n  defaultMinWidth: 100,\n  defaultMaxWidth: 600,\n  defaultZindex: 100,\n  defaultZoom: 1,\n  defaultAdjustPadding: {\n    x: 0,\n    y: 10.\n  },\n}\n\n/**\n * ContextMenu Component ref interface,\n * You can use `(this.$refs.myMenu as ContextMenuInstance)` or `const mymenu = ref<ContextMenuInstance>()`\n */\nexport interface ContextMenuInstance {\n  /**\n   * Close this menu.\n   * @param fromItem The last clicked menu item, will pass to `MenuOptions.onClose` callback, if user does not click any item, can be `undefined`.\n   */\n  closeMenu(fromItem?: MenuItem|undefined): void;\n  /**\n   * Check if the menu is currently closed.\n   */\n  isClosed(): boolean;\n  /**\n   * Get current Menu root instance.\n   * @returns Return ContextSubMenuInstance of root, return undefined if menu is not showing.\n   */\n  getMenuRef(): ContextSubMenuInstance|undefined;\n  /**\n   * Get root menu size.\n   * @returns Return root menu size in pixel, return all zero if menu is not showing.\n   */\n  getMenuDimensions(): { width: number, height: number };\n}\n\n/**\n * Define that Submenu holder component exposed props\n * \n * Can get by `ContextMenuInstance.getMenuRef`.\n */\nexport interface ContextSubMenuInstance \n{\n  /**\n   * Get Root element of this submenu\n   */\n  getSubmenuRoot: () => HTMLElement | undefined;\n  /**\n   * Get Inner container element of this submenu\n   */\n  getMenu: () => HTMLElement | undefined;\n  /**\n   * Get child menu item by array index, Only after the parent submenu is displayed can the child items be retrieved.\n   * @param index Array index \n   * @returns You can obtain control instance `MenuItemContext according to the index to control menu items.\n   */\n  getChildItem: (index: number) => MenuItemContext | undefined;\n  /**\n   * Get submenu root element size.\n   * @returns Return root menu size in pixel, return all zero if menu is not showing.\n   */\n  getMenuDimensions(): { width: number, height: number };\n  /**\n   * Get submenu current scroll value (same as element.scrollTop)\n   * @returns \n   */\n  getScrollValue: () => number,\n  /**\n   * Set submenu current scroll value (same as element.scrollTop)\n   * @returns \n   */\n  setScrollValue: (v: number) => void,\n  /**\n   * Get submenu max scroll height (same as element.scrollHeight)\n   * @returns \n   */\n  getScrollHeight: () => number,\n  /**\n   * Get max submenu height\n   * @returns \n   */\n  getMaxHeight: () => number,\n  /**\n   * Get submenu current position (Relative to the parent item)\n   * @returns \n   */\n  getPosition: () => { x: number, y: number },\n  /**\n   * Set submenu current position (Relative to the parent item)\n   * @returns \n   */\n  setPosition: (x: number, y: number) => void;\n}\n\n/**\n * Ref define of ContextMenuGroup\n */\nexport interface ContextMenuGroupRef\n{\n  /**\n   * Get ContextSubMenuInstance of this group\n   */\n  getSubMenuRef(): ContextSubMenuInstance;\n  /**\n   * Get MenuItemContext of this item.\n   */\n  getMenuItemRef(): ContextSubMenuInstance;\n}\n\n/**\n * The internal info context for menu item\n */\nexport interface MenuItemContext {\n  /**\n   * Get current showing submenu instance.\n   * @returns Return ContextSubMenuInstance of current submenu, return undefined if menu is not showing.\n   */\n  getSubMenuInstance: () => ContextSubMenuInstance|undefined;\n  /**\n   * Show submenu of this item.\n   * @returns \n   */\n  showSubMenu: () => boolean,\n  /**\n   * Force hide submenu of this item.\n   */\n  hideSubMenu: () => void,\n  /**\n   * Get html Element of this item.\n   */\n  getElement: () => HTMLElement|undefined,\n  /**\n   * Check is this item disabled or hidden.\n   * @returns \n   */\n  isDisabledOrHidden: () => boolean,\n\n  focus: () => void,\n  blur: () => void,\n  click: (e: MouseEvent|KeyboardEvent) => void,\n}\n\nexport type MenuPopDirection = 'br'|'b'|'bl'|'tr'|'t'|'tl'|'l'|'r';\nexport type MenuChildren = MenuItem[];\n\n\nexport interface MenuOptions {\n  /**\n   * The items for this menu.\n   */\n  items\t?:\tMenuItem[];\n  /**\n   * Menu display x position.\n   */\n  x: number;\n  /**\n   * Menu display y position.\n   */\n  y: number;\n  /**\n  * X-coordinate offset of submenu and parent menu.\n  */\n  xOffset\t?: number;\n  /**\n  * Y-coordinate offset of submenu and parent menu.\n  */\n  yOffset ?: number;\n  /**\n   * Set the mian menu pop-up direction relative to coordinates.\n   *\n   * Default is `'br'`, if `adjustPosition` is true then the menu will determine\n   * the pop-up direction based on its distance from the screen edge.\n   *\n   * @default 'br'\n   */\n  direction ?: MenuPopDirection,\n  /**\n   * The z-index of this menu.\n   */\n  zIndex ?: number;\n  /**\n   * The zoom of this menu.\n   */\n  zoom ?: number;\n  /**\n   * Custom menu class.\n   */\n  customClass\t?:\tstring;\n  /**\n   * Set whether users can use the mouse scroll wheel to scroll through long menus in the menu area.\n   *\n   * @default false\n   */\n  mouseScroll ?: boolean;\n  /**\n   * Determine whether the up/down buttons in the menu item require space holder.\n   * The purpose of this variable is because some menu themes add blank padding above and below the menu,\n   * which are just enough to place up/down buttons.\n   * If there is no blank padding in your custom menu theme, you can set this field to provide blank space for up/down buttons to prevent obscuring menu items.\n   *\n   * @default false\n   */\n  updownButtonSpaceholder?: boolean;\n  /**\n   * Theme for this menu. Default is 'default'\n   *\n   * |theme|explain|example image|\n   * |--|--|--|\n   * |`default`|Default theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-default.jpg)|\n   * |`default dark`|Default theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-default-dark.jpg)|\n   * |`flat`|Simple flat theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-flat.jpg)|\n   * |`flat dark`|Simple flat theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-flat-dark.jpg)|\n   * |`win10`|Win10 like theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-win10.jpg)|\n   * |`win10 dark`|Win10 like theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-win10-dark.jpg)|\n   * |`mac`|Mac like theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-mac.jpg)|\n   * |`mac dark`|Mac like theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-mac-dark.jpg)|\n   *\n   * You can write new theme in your own css,\n   * customize your theme by overriding the default styles, for example:\n   * ```scss\n   * .mx-context-menu.my-theme-name {\n      & {\n        //Here can override css vars\n        --mx-menu-background: #ececec;\n        --mx-menu-hover-background: #0165e1;\n      }\n\n      //Customize the style of the menu here\n      padding: 8px 0;\n      box-shadow: 0px 5px 7px 1px var(--mx-menu-shadow-color);\n      border: 1px solid var(--mx-menu-border-color);\n\n      //Customize the style of the menu item\n      .mx-context-menu-item {\n        border-radius: 5px;\n        margin: 0 6px;\n        padding: 3px 6px;\n      }\n    }\n   * ```\n   */\n  theme\t?: string;\n  /**\n   * If your element in menu item has this className, click it will ignore event.\n   */\n  ignoreClickClassName?: string,\n  /**\n   * Set should close menu when the user click on other places.\n   *\n   * @default true\n   */\n  clickCloseOnOutside ?: boolean;\n  /**\n   * If your element in menu item has this className, click it will ignore event and close hole menu.\n   */\n  clickCloseClassName?: string,\n  /**\n   * Custom icon library font class name. (global)\n   *\n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass ?:\tstring;\n  /**\n   * The Vue Transition props used when menu show or hide.\n   * @default undefined\n   */\n  menuTransitionProps ?: TransitionProps;\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (global)\n   *\n   * Default is true.\n   *\n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth ?: boolean;\n  /**\n   * Set whether the user can use keyboard keys to control the current menu.\n   *\n   * Default: true\n   *\n   * The control logic is consistent with the Windows right-click menu:\n   * * Escape : Close current menu\n   * * Enter : Click current menu item\n   * * ArrowDown : Select the down menu item\n   * * ArrowUp : Select the up menu item\n   * * ArrowLeft : Back previous submenu\n   * * ArrowRight : Open current menu item submenu\n   * * Home : Select the first menu item\n   * * End : Select the last menu item\n   */\n  keyboardControl ?: boolean;\n  /**\n   * Maximum width of main menu (in pixels)\n   */\n  maxWidth ?: number;\n  /**\n   * Minimum width of main menu (pixels)\n   */\n  minWidth ?: number;\n  /**\n   * Close when user scroll mouse ? Default is true.\n   */\n  closeWhenScroll ?: boolean;\n  /**\n   * Padding for submenu position adjust. Default is `{ x：0, y: 10 }`.\n   */\n  adjustPadding?: { x: number, y: number }|number,\n  /**\n   * By default, the menu will automatically adjust its position to prevent it overflow the container.\n   *\n   * If you allow menu overflow containers, you can set this to false.\n   *\n   * Default is true.\n   */\n  adjustPosition?: boolean,\n  /**\n   * Return the mounted node for MenuRoot.\n   *\n   * Note: After you change the mount node, the menu display position may be incorrect.\n   *\n   * * The MenuOptions.x is the distance from the menu to the left edge of the container (container should `position: relative;`);\n   * * The MenuOptions.y is the distance from the menu to the top edge of the container (container should `position: relative;`);;\n   *\n   * So, you need to change the x and y values you passed in to ensure that the display position is correct.\n   *\n   * You may need to use `ContextMenu.transformMenuPosition` to transform the menu display position:\n   *\n   * ```\n   * function onContextMenu(e: MouseEvent) {\n      //MyContainerElement is the MenuRoot\n      const scaledPosition = ContextMenu.transformMenuPosition(e.target as HTMLElement, e.offsetX, e.offsetY, MyContainerElement);\n      menuData.x = scaledPosition.x;\n      menuData.y = scaledPosition.y;\n      //show menu\n      ContextMenu.showContextMenu(menuData);\n    }\n   * ```\n   */\n  getContainer ?: HTMLElement | (() => HTMLElement);\n\n  /**\n   * This event emit when this menu is closing. (Usually used in function mode)\n   * @param lastClickItem The last clicked menu item, if user does not click any item, it is `undefined`. This param only valid in function mode.\n   */\n  onClose ?: ((lastClickItem: MenuItem|undefined) => void) | undefined;\n  /**\n   * When `clickCloseOnOutside` is set to `false`, and user click on other places will emit this event.\n   */\n  onClickOnOutside ?: (e: MouseEvent) => void;\n  /**\n   * Event for MenuBar component\n   */\n  onKeyFocusMoveLeft ?:  (() => void) | undefined;\n  /**\n   * Event for MenuBar component\n   */\n  onKeyFocusMoveRight ?:  (() => void) | undefined;\n}\nexport interface MenuItem {\n  /**\n   * The label of this menu item.\n   *\n   * Can be a callback. Use `h` to render custom content.\n   *\n   * ```js\n   * {\n   *   label: h('div', {\n   *     style: {\n   *       fontSize: '20px',\n   *       color: '#f98',\n   *     }\n   *   }, \"Item with custom render\"),\n   * },\n   * ```\n   */\n  label ?: string|VNode|((label: string) => VNode),\n  /**\n   * The icon for this menu item.\n   */\n  icon ?: string|VNode|((icon: string) => VNode),\n  /**\n   * Custom icon library font class name.\n   *\n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass ?: string,\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n   *\n   * Default is inherit from `MenuOptions.preserveIconWidth` .\n   *\n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth ?: boolean;\n  /**\n   * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n   */\n  svgIcon ?: string,\n  /**\n   * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n   */\n  svgProps ?: SVGAttributes,\n  /**\n   * Disable menu item?\n   */\n  disabled ?: boolean,\n  /**\n   * Hide menu item?\n   */\n  hidden ?: boolean,\n  /**\n   * Is this menu item checked?\n   *\n   * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n   */\n  checked ?: boolean,\n  /**\n   * Shortcut key text display on the right.\n   *\n   * The shortcut keys here are only for display. You need to handle the key events by yourself.\n   */\n  shortcut ?: string|string,\n  /**\n   * Set the submenu pop-up direction relative to coordinates.\n   *\n   * Default is inherted from `MenuOptions.direction`, if `adjustSubMenuPosition` is true then the submenu will determine\n   * the pop-up direction based on its distance from the screen edge.\n   *\n   */\n  direction ?: MenuPopDirection,\n  /**\n   * By default, the submenu will automatically adjust its position to prevent it overflow the container.\n   *\n   * If you allow menu overflow containers, you can set this to false.\n   *\n   * Default is inherit from `MenuOptions.adjustPosition`.\n   */\n  adjustSubMenuPosition ?: boolean,\n  /**\n   * When there are subitems in this item, is it allowed to trigger its own click event? Default is false\n   */\n  clickableWhenHasChildren ?: boolean,\n  /**\n   * Should close menu when Click this menu item ?\n   */\n  clickClose ?: boolean,\n  /**\n   * Is this menu item separated from the menu item?\n   *\n   * * `true` or `'down'`: Separator is show below menu.\n   * * `'up'`: Separator is show above menu.\n   * * `'self'`: Mark this item is a Separator.\n   * * `false`: No Separator.\n   */\n  divided ?: boolean|'up'|'down'|'self',\n  /**\n   * Custom css class for submenu\n   */\n  customClass ?: string,\n  /**\n   * Submenu maximum width (in pixels).\n   */\n  maxWidth ?: number|string,\n  /**\n   * Submenu minimum width (in pixels).\n   */\n  minWidth ?: number|string,\n  /**\n   * Menu item click event handler.\n   *\n   * @param e The current event of `click` or `keydown` (when user use keyboard press this menu)\n   */\n  onClick ?: (e?: MouseEvent|KeyboardEvent) => void,\n  /**\n   * This event emit when submenu of this item is closing.\n   */\n  onSubMenuClose ?: ((itemInstance: MenuItemContext) => void) | undefined;\n  /**\n   * This event emit when submenu of this item is showing.\n   */\n  onSubMenuOpen ?: ((itemInstance: MenuItemContext) => void) | undefined;\n  /**\n   * A custom render callback that allows you to customize the rendering\n   *  of the current item.\n   */\n  customRender ?: VNode|((item: MenuItem) => VNode),\n  /**\n   * Child menu items (Valid in function mode).\n   */\n  children ?: MenuChildren,\n}\n\nexport interface ContextMenuPositionData {\n  x: number;\n  y: number;\n}\n\nexport declare interface MenuItemRenderData extends Omit<MenuItem, 'children'|'customRender'|'onClick'> {\n  /**\n   * Global theme\n   */\n  theme: 'light'|'dark',\n  /**\n   * This value indicates whether the current menu submenu is open\n   */\n  isOpen: boolean,\n  /**\n   * This value indicates whether the current menu has submenus\n   */\n  hasChildren: boolean,\n  /**\n   * Click event callback of custom element, which is used for menu internal event\n   */\n  onClick: (e: MouseEvent) => void,\n  /**\n   * MouseEnter event callback of custom element, which is used for menu internal event\n   */\n  onMouseEnter: (e: MouseEvent) => void,\n}\n", "import { defineComponent, toRefs } from \"vue\";\nimport type { VNode } from \"vue\";\nimport type { MenuOptions } from \"./ContextMenuDefine\";\nimport { MenuConstOptions } from \"./ContextMenuDefine\";\n\n/**\n * Get absolute y position of HTMLElement\n * @param e Element\n * @param stopNode Specify the node for recursive termination, default to body\n * @returns \n */\nexport function getTop(e: HTMLElement, stopNode?: HTMLElement): number {\n  let offset = e.offsetTop;\n  if (e.offsetParent != null && e.offsetParent != stopNode) {\n    offset -= e.offsetParent.scrollTop;\n    offset += getTop(e.offsetParent as HTMLElement, stopNode);\n  }\n  return offset;\n}\n/**\n * Get absolute x position of HTMLElement\n * @param e Element\n * @param stopNode Specify the node for recursive termination, default to body\n * @returns \n */\nexport function getLeft(e: HTMLElement, stopNode?: HTMLElement): number {\n  let offset = e.offsetLeft;\n  if (e.offsetParent != null && e.offsetParent != stopNode) {\n    offset -= e.offsetParent.scrollLeft;\n    offset += getLeft(e.offsetParent as HTMLElement, stopNode);\n  }\n  return offset;\n}\n\n/**\n * If your `body` element is in a scaled state (e.g. `transform: scale(0.5)`), \n * this may lead to the wrong position of the menu display. \n * You can use this function to transform the menu display position:\n * \n * ```ts\n * \n  import ContextMenu from 'vsv-context-menu'\n\n  function onContextMenu(e: MouseEvent) {\n    const scaledPosition = ContextMenu.transformMenuPosition(e.target as HTMLElement, e.offsetX, e.offsetY);\n    //Full code of menuData is in `/examples/views/InScaledBody.vue`\n    menuData.x = scaledPosition.x;\n    menuData.y = scaledPosition.y;\n    //show menu\n    ContextMenu.showContextMenu(menuData);\n  }\n  * ```\n  * @param e Current click element\n  * @param offsetX MouseEvent.offsetX\n  * @param offsetY MouseEvent.offsetY\n  */\nexport function transformMenuPosition(e: HTMLElement, offsetX: number, offsetY: number, container?: HTMLElement): {\n  x: number,\n  y: number,\n} {\n  return {\n    x: getLeft(e, container) + offsetX,\n    y: getTop(e, container) + offsetY,\n  };\n}\n\nconst DEFAULT_CONTAINER_ID = 'mx-menu-default-container';\nconst GEN_CONTAINER_ID = 'mx-menu-container-';\nlet containerId = 0;\n\nexport function removeContainer(container: HTMLElement) : void {\n  container.parentNode?.removeChild(container);\n}\nexport function genContainer(options: MenuOptions) : {\n  eleId: string,\n  container: HTMLElement,\n  isNew: boolean,\n} {\n  const { getContainer, zIndex } = options;\n\n  if (getContainer) {\n    const container = typeof getContainer === 'function' ? getContainer() : getContainer;\n    if (container) {\n      let eleId = container.getAttribute('id');\n      if (!eleId) {\n        eleId = GEN_CONTAINER_ID + (containerId++);\n        container.setAttribute('id', eleId);\n      }\n      return {\n        eleId,\n        container,\n        isNew: false,\n      };\n    }\n  }\n\n  let container = document.getElementById(DEFAULT_CONTAINER_ID);\n  if (!container) {\n    container = document.createElement('div');\n    container.setAttribute('id', DEFAULT_CONTAINER_ID);\n    container.setAttribute('class', 'mx-menu-ghost-host mx-fullscreen');\n    document.body.appendChild(container);\n  }\n  container.style.zIndex = zIndex?.toString() || MenuConstOptions.defaultZindex.toString();\n  return {\n    eleId: DEFAULT_CONTAINER_ID,\n    container,\n    isNew: true,\n  };\n}\n\n/**\n * Number to px string\n * @param value \n * @returns \n */\nexport function solveNumberOrStringSize(value: string|number) : string {\n  return typeof value === 'number' ? `${value}px` : value;\n}\n\n/**\n * Render a VNode\n */\nexport const VNodeRender = defineComponent({\n  props: {\n    /**\n     * Can be VNode or (data: unknown) => VNode\n     */\n    vnode: {\n      type: null,\n    },\n    /**\n     * If vnode is a callback, this data will be passed to the callback first parameter.\n     * @default null\n     */\n    data: {\n      type: null,\n      default: null,\n    },\n  },\n  setup(props) {\n    const { vnode, data } = toRefs(props);\n    return () => typeof vnode.value === 'function' ? (vnode.value as unknown as (data: unknown) => VNode)(data.value) : vnode.value as unknown as VNode;\n  },\n})", "<template>\n  <svg class=\"mx-checked-mark\" aria-hidden=\"true\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M129.3,428.6L52,512l345,372.5l575-620.8l-69.5-75L400.4,718.2L129.3,428.6z\"></path>\n  </svg>\n</template>", "<template>\n  <svg class=\"mx-right-arrow\" aria-hidden=\"true\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M307.018 49.445c11.517 0 23.032 4.394 31.819 13.18L756.404 480.18c8.439 8.438 13.181 19.885 13.181 31.82s-4.741 23.38-13.181 31.82L338.838 961.376c-17.574 17.573-46.065 17.573-63.64-0.001-17.573-17.573-17.573-46.065 0.001-63.64L660.944 512 275.198 126.265c-17.574-17.573-17.574-46.066-0.001-63.64C283.985 53.839 295.501 49.445 307.018 49.445z\"></path>\n  </svg>\n</template>", "<template>\n  <div v-if=\"!hidden\" class=\"mx-context-menu-item-wrapper\" ref=\"menuItemRef\" data-type=\"ContextMenuItem\">\n    <!--Custom render-->\n    <VNodeRender v-if=\"globalHasSlot('itemRender')\" :vnode=\"() => globalRenderSlot('itemRender', getItemDataForChildren())\" />\n    <VNodeRender v-else-if=\"customRender\" :vnode=\"customRender\" :data=\"getItemDataForChildren()\" />\n    <!--Default item-->\n    <div \n      v-else\n      :class=\"[\n        'mx-context-menu-item',\n        (disabled ? 'disabled' : ''),\n        (keyBoardFocusMenu ? 'keyboard-focus' : ''),\n        (customClass ? (' ' + customClass) : ''),\n        (showSubMenu ? 'open' : ''),\n      ]\"\n      @click=\"onClick\"\n      @mouseenter=\"onMouseEnter\"\n    >\n      <slot>\n        <div class=\"mx-item-row\">\n          <div :class=\"[\n            'mx-icon-placeholder',\n            preserveIconWidth ? 'preserve-width': '',\n          ]\">\n            <slot name=\"icon\">\n              <VNodeRender v-if=\"globalHasSlot('itemIconRender')\" :vnode=\"() => globalRenderSlot('itemIconRender', getItemDataForChildren())\" />\n              <svg v-else-if=\"typeof svgIcon === 'string' && svgIcon\" class=\"icon svg\" v-bind=\"svgProps\">\n                <use :xlink:href=\"svgIcon\"></use>\n              </svg>\n              <VNodeRender v-else-if=\"(typeof icon !== 'string')\" :vnode=\"icon\" :data=\"icon\" />\n              <i v-else-if=\"typeof icon === 'string' && icon !== ''\" :class=\"icon + ' icon '+ iconFontClass + ' ' + options.iconFontClass\"></i>\n            </slot>\n            <slot v-if=\"checked\" name=\"check\">\n              <VNodeRender v-if=\"globalHasSlot('itemCheckRender')\" :vnode=\"() => globalRenderSlot('itemCheckRender', getItemDataForChildren())\" />\n              <ContextMenuIconCheck />\n            </slot>\n          </div>\n          <slot name=\"label\">\n            <VNodeRender v-if=\"globalHasSlot('itemLabelRender')\" :vnode=\"() => globalRenderSlot('itemLabelRender', getItemDataForChildren())\" />\n            <span class=\"label\" v-else-if=\"typeof label === 'string'\">{{ label }}</span>\n            <VNodeRender v-else :vnode=\"label\" :data=\"label\" />\n          </slot>\n        </div>\n        <div class=\"mx-item-row\">\n          <slot v-if=\"shortcut\" name=\"shortcut\">\n            <VNodeRender v-if=\"globalHasSlot('itemShortcutRender')\" :vnode=\"() => globalRenderSlot('itemShortcutRender', getItemDataForChildren())\" />\n            <span class=\"mx-shortcut\">{{ shortcut }}</span>\n          </slot>\n          <slot v-if=\"showRightArrow\" name=\"rightArrow\">\n            <VNodeRender v-if=\"globalHasSlot('itemRightArrowRender')\" :vnode=\"() => globalRenderSlot('itemRightArrowRender', getItemDataForChildren())\" />\n            <ContextMenuIconRight />\n          </slot>\n        </div>\n      </slot>\n    </div>\n    \n    <!--Sub menu render-->\n    <Transition v-if=\"options.menuTransitionProps\" v-bind=\"options.menuTransitionProps\">\n      <slot v-if=\"showSubMenu\" name=\"submenu\"></slot>\n    </Transition>\n    <slot v-else-if=\"showSubMenu\" name=\"submenu\"></slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, nextTick, onBeforeUnmount, onMounted, type PropType, ref, type SVGAttributes, toRefs, type TransitionProps, type Ref, computed, provide } from 'vue'\nimport type { SubMenuParentContext } from './ContextSubMenu.vue'\nimport type { GlobalHasSlot, GlobalRenderSlot } from './ContextMenu.vue'\nimport type { MenuItem, MenuItemContext, MenuOptions } from './ContextMenuDefine'\nimport { VNodeRender } from './ContextMenuUtils'\nimport ContextMenuIconCheck from './ContextMenuIconCheck.vue'\nimport ContextMenuIconRight from './ContextMenuIconRight.vue'\n\n/**\n * Menu Item\n */\n\nconst props = defineProps({\n  /**\n   * Is this menu disabled? \n   */\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Is this menu hidden? \n   */\n  hidden: {\n    type: Boolean,\n    default: false\n  },\n  customRender: {\n    type: Function,\n    default: null\n  },\n  /**\n   * Custom css class for submenu\n   */\n  customClass: {\n    type: String,\n    default: ''\n  },\n  clickHandler: {\n    type: Function as PropType<(e: MouseEvent|KeyboardEvent) => void>,\n    default: null\n  },\n  /**\n   * Menu label\n   */\n  label: {\n    type: [String, Object, Function],\n    default: ''\n  },\n  /**\n   * Menu icon (for icon class)\n   */\n  icon: {\n    type: [String, Object, Function],\n    default: ''\n  },\n  /**\n   * Custom icon library font class name.\n   * \n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass: {\n    type: String,\n    default: 'iconfont'\n  },\n  /**\n   * Is this menu item checked?\n   * \n   * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n   */\n  checked: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Shortcut key text display on the right.\n   * \n   * The shortcut keys here are only for display. You need to handle the key events by yourself.\n   */\n  shortcut: {\n    type: String,\n    default: ''\n  },\n  /**\n   * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n   */\n  svgIcon: {\n    type: String,\n    default: ''\n  },\n  /**\n   * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n   */\n  svgProps: {\n    type: Object as PropType<SVGAttributes>,\n    default: null\n  },\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n   * \n   * Default is true .\n   * \n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * Show right arrow on this menu?\n   */\n  showRightArrow: {\n    type: Boolean,\n    default: false\n  },\n  hasChildren: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Should close menu when Click this menu item ?\n   */\n  clickClose: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * When there are subitems in this item, is it allowed to trigger its own click event? Default is false\n   */\n  clickableWhenHasChildren: {\n    type: Boolean,\n    default: false\n  },\n  rawMenuItem: {\n    type: Object as PropType<MenuItem>,\n    default: undefined\n  },\n});\nconst emit = defineEmits([\n  'click',\n  'subMenuOpen',\n  'subMenuClose',\n])\n\nconst { \n  clickHandler, clickClose, clickableWhenHasChildren, disabled, hidden,\n  label, icon, iconFontClass,\n  showRightArrow, shortcut,\n  hasChildren,\n} = toRefs(props);\nconst showSubMenu = ref(false);\nconst keyBoardFocusMenu = ref(false);\n\nconst menuItemRef = ref<HTMLElement>();\n\nconst options = inject('globalOptions') as Ref<MenuOptions>;\nconst globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\nconst globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\nconst globalCloseMenu = inject('globalCloseMenu') as (fromItem: MenuItem|undefined) => void;\n\nconst menuContext = inject('menuContext') as SubMenuParentContext;\n\n//Instance Contet for keyboadr control\nconst menuItemInstance : MenuItemContext = {\n  getSubMenuInstance: () => undefined,\n  showSubMenu: () => {\n    if (showSubMenu.value) {\n      //Mark current item\n      menuContext.markActiveMenuItem(menuItemInstance, true);\n      return true;\n    } else if (hasChildren.value) {\n      onMouseEnter();\n      return true;\n    }\n    return false;\n  },\n  hideSubMenu: () => {\n    //closeSubMenu();\n    menuContext.closeOtherSubMenu();\n  },\n  isDisabledOrHidden: () => disabled.value || hidden.value,\n  getElement: () => menuItemRef.value,\n  focus: () => keyBoardFocusMenu.value = true,\n  blur: () => keyBoardFocusMenu.value = false,\n  click: onClick,\n}\n\nprovide(\"menuItemInstance\", menuItemInstance);\n\nonMounted(() => {\n  if (menuContext.isMenuItemDataCollectedFlag()) {\n    //当前菜单条目是在整体加载完成后才显示的，此时菜单顺序已经无法知道，\n    //所以这里需要在父级元素中查找得出当前菜单的位置。\n    //\n    //The current menu item is displayed after the overall loading is completed. \n    //At this time, the menu order cannot be known, so here we need to \n    //find the position of the current menu in the parent element.\n    nextTick(() => {\n      let index = 0;\n      const parentEl = menuContext.getElement();\n      if (parentEl) {\n        let indexCounting = 0;\n        for (let i = 0; i < parentEl.children.length; i++) {\n          const el = parentEl.children[i];\n          if (el.getAttribute('data-type') === 'ContextMenuItem') {\n            if (el === menuItemRef.value) {\n              index = indexCounting;\n              break;\n            }\n            indexCounting++;\n          }\n        }\n      }\n      //Insert to pos\n      menuContext.addChildMenuItem(menuItemInstance, index);\n    });\n  } else\n    menuContext.addChildMenuItem(menuItemInstance);\n});\nonBeforeUnmount(() => {\n  menuContext.removeChildMenuItem(menuItemInstance);\n});\n\n//Click handler\nfunction onClick(e: MouseEvent|KeyboardEvent) {\n  //Ignore clicking when disabled\n  if (disabled.value)\n    return;\n  //Ignore clicking when click on some special elements\n  if (e) {\n    const currentTarget = e.target as HTMLElement;\n    if (currentTarget.classList.contains('mx-context-no-clickable'))\n      return;\n    if (options.value.ignoreClickClassName && currentTarget.classList.contains(options.value.ignoreClickClassName))\n      return;\n    if (options.value.clickCloseClassName && currentTarget.classList.contains(options.value.clickCloseClassName)) {\n      e.stopPropagation();\n      globalCloseMenu(props.rawMenuItem);\n      return;\n    }\n  }\n  //Has submenu?\n  if (hasChildren.value) {\n    if (clickableWhenHasChildren.value) {\n      if (typeof clickHandler.value === 'function')\n        clickHandler.value(e);\n      emit('click', e);\n    }\n    else if (!showSubMenu.value)\n      onMouseEnter();\n  } else {\n    //Call hander from options\n    if (typeof clickHandler.value === 'function') \n      clickHandler.value(e);\n    emit('click', e);\n    if (clickClose.value) {\n      //emit close\n      globalCloseMenu(props.rawMenuItem);\n    }\n  }\n}\n//MouseEnter handler: show item submenu\nfunction onMouseEnter(e?: MouseEvent) {\n  //Clear keyBoard focus style\n  keyBoardFocusMenu.value = false;\n\n  //等待一个延时，以防止用户过快移动鼠标导致菜单隐藏\n  //Wait for a delay to prevent the menu from being hidden due to the user moving the mouse too fast\n  if (!menuContext.checkCloseOtherSubMenuTimeOut())\n    menuContext.closeOtherSubMenu();\n\n  if (!disabled.value) {\n    //Mark current item\n    menuContext.markActiveMenuItem(menuItemInstance);\n\n    if (hasChildren.value) {\n      if (!e)\n        menuContext.markThisOpenedByKeyBoard();\n      //Open sub menu\n      menuContext.addOpenedSubMenu(closeSubMenu);\n      showSubMenu.value = true;\n      nextTick(() => emit('subMenuOpen', menuItemInstance));\n    }\n  }\n}\nfunction closeSubMenu() \n{\n  keyBoardFocusMenu.value = false;\n  showSubMenu.value = false;\n  emit('subMenuClose', menuItemInstance);\n}\n//Data for custom render\nfunction getItemDataForChildren() {\n  return {\n    disabled: disabled.value,\n    label: label.value,\n    icon: icon.value,\n    iconFontClass: iconFontClass.value,\n    showRightArrow: showRightArrow.value,\n    clickClose: clickClose.value,\n    clickableWhenHasChildren: clickableWhenHasChildren.value,\n    shortcut: shortcut.value,\n    theme: options.value.theme,\n    isOpen: showSubMenu,\n    hasChildren: hasChildren,\n    onClick,\n    onMouseEnter,\n    closeMenu: globalCloseMenu,\n  }\n}\n\ndefineExpose(menuItemInstance);\n</script>\n\n<style>\n</style>\n", "<template>\n  <VNodeRender v-if=\"globalHasSlot('separatorRender')\" :vnode=\"() => globalRenderSlot('separatorRender', {})\" />\n  <div v-else class=\"mx-context-menu-item-sperator mx-context-no-clickable\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject } from 'vue'\nimport { VNodeRender } from './ContextMenuUtils';\nimport type { GlobalHasSlot, GlobalRenderSlot } from './ContextSubMenuWrapper.vue';\n\nexport default defineComponent({\n  name: 'ContextMenuSperator',\n  components: {\n    VNodeRender\n  },\n  setup() {\n      \n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n\n    return {\n      globalHasSlot,\n      globalRenderSlot,\n    };\n  },\n})\n</script>", "<template>\n  <div\n    ref=\"submenuRoot\"\n    :class=\"[\n      'mx-context-menu',\n      (options.customClass ? options.customClass : ''),\n      (options.theme ?? '')\n    ]\"\n    :style=\"{\n      maxWidth: (maxWidth ? solveNumberOrStringSize(maxWidth) : `${constOptions.defaultMaxWidth}px`),\n      minWidth: minWidth ? solveNumberOrStringSize(minWidth) : `${constOptions.defaultMinWidth}px`,\n      maxHeight: overflow && maxHeight > 0 ? `${maxHeight}px` : undefined,\n      zIndex: zIndex,\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n    }\"\n    data-type=\"ContextSubMenu\"\n    @click=\"onSubMenuBodyClick\"\n    @wheel=\"onMouseWhell\"\n  >\n    <!--Child menu items-->\n    <div\n      :class=\"[ 'mx-context-menu-items' ]\"\n      ref=\"menu\"\n      :style=\"{\n        top: `${scrollValue}px`,\n      }\"\n    >\n      <slot>\n        <div v-if=\"overflow && options.updownButtonSpaceholder\" class=\"mx-context-menu-updown placeholder\"></div>\n        <template v-for=\"(item, i) in items\" :key=\"i\" >\n          <ContextMenuSeparator v-if=\"item.hidden !== true && item.divided === 'up'\" />\n          <ContextMenuSeparator v-if=\"item.hidden !== true && item.divided === 'self'\" />\n          <!--Menu Item-->\n          <ContextMenuItem\n            v-else\n            :clickHandler=\"item.onClick ? (e) => item.onClick!(e) : undefined\"\n            :disabled=\"item.disabled\"\n            :hidden=\"item.hidden\"\n            :icon=\"item.icon\"\n            :iconFontClass=\"item.iconFontClass\"\n            :svgIcon=\"item.svgIcon\"\n            :svgProps=\"item.svgProps\"\n            :label=\"item.label\"\n            :customRender=\"(item.customRender as Function)\"\n            :customClass=\"item.customClass\"\n            :checked=\"item.checked\"\n            :shortcut=\"item.shortcut\"\n            :clickClose=\"item.clickClose\"\n            :clickableWhenHasChildren=\"item.clickableWhenHasChildren\"\n            :preserveIconWidth=\"item.preserveIconWidth !== undefined ? item.preserveIconWidth : options.preserveIconWidth\"\n            :showRightArrow=\"item.children && item.children.length > 0\"\n            :hasChildren=\"item.children && item.children.length > 0\"\n            :rawMenuItem=\"item\"\n            @sub-menu-open=\"(v: any) => item.onSubMenuOpen?.(v)\"\n            @sub-menu-close=\"(v: any) => item.onSubMenuClose?.(v)\"\n          >\n            <template v-if=\"item.children && item.children.length > 0\" #submenu>\n              <!--Sub menu-->\n              <ContextSubMenu\n                :items=\"item.children\"\n                :maxWidth=\"item.maxWidth\"\n                :minWidth=\"item.minWidth\"\n                :adjustPosition=\"item.adjustSubMenuPosition !== undefined ? item.adjustSubMenuPosition : options.adjustPosition\"\n                :direction=\"item.direction !== undefined ? item.direction : options.direction\"\n              />\n            </template>\n          </ContextMenuItem>\n          <!--Separator-->\n          <!--Custom render-->\n          <ContextMenuSeparator v-if=\"item.hidden !== true && (item.divided === 'down' || item.divided === true)\" />\n        </template>\n        <div v-if=\"overflow && options.updownButtonSpaceholder\" class=\"mx-context-menu-updown placeholder\"></div>\n      </slot>\n    </div>\n\n    <!--Scroll button host-->\n    <div\n      class=\"mx-context-menu-scroll\"\n      ref=\"scroll\"\n    >\n      <!--Updown scroll button-->\n      <div\n        v-show=\"overflow\"\n        ref=\"upScrollButton\"\n        :class=\"'mx-context-menu-updown mx-context-no-clickable up' + (overflow && scrollValue < 0 ? '' : ' disabled')\"\n        @click=\"onScroll(false)\"\n        @wheel=\"onMouseWhellMx\"\n      >\n        <ContextMenuIconRight />\n      </div>\n      <div\n        v-show=\"overflow\"\n        :class=\"'mx-context-menu-updown mx-context-no-clickable down' + (overflow && scrollValue > -scrollHeight ? '' : ' disabled')\"\n        @click=\"onScroll(true)\"\n        @wheel=\"onMouseWhellMx\"\n      >\n        <ContextMenuIconRight />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, nextTick, onMounted, type PropType, provide, ref, toRefs, type Ref, onBeforeUnmount } from 'vue'\nimport type { MenuOptions, MenuItem, ContextMenuPositionData, MenuPopDirection, MenuItemContext, ContextSubMenuInstance } from './ContextMenuDefine'\nimport type { GlobalHasSlot, GlobalRenderSlot } from './ContextMenu.vue'\nimport { MenuConstOptions } from './ContextMenuDefine'\nimport { getLeft, getTop, solveNumberOrStringSize } from './ContextMenuUtils'\nimport ContextMenuItem from './ContextMenuItem.vue'\nimport ContextMenuSeparator from './ContextMenuSeparator.vue'\nimport ContextMenuIconRight from './ContextMenuIconRight.vue'\n\n\n//The internal info context for submenu instance\nexport interface SubMenuContext {\n  isTopLevel: () => boolean;\n  closeSelfAndActiveParent: () => boolean,\n  openCurrentItemSubMenu: () => boolean,\n  closeCurrentSubMenu: () => void,\n  moveCurrentItemFirst: () => void,\n  moveCurrentItemLast: () => void,\n  moveCurrentItemDown: () => void,\n  moveCurrentItemUp: () => void,\n  focusCurrentItem: () => void,\n  triggerCurrentItemClick: (e: KeyboardEvent|MouseEvent) => void,\n}\n\n//The internal info context for submenu\nexport interface SubMenuParentContext {\n  //Props\n  container: HTMLElement;\n  zIndex: number;\n  adjustPadding: { x: number, y: number },\n\n  //Position control\n  getParentWidth: () => number;\n  getParentHeight: () => number;\n  getParentX: () => number;\n  getParentY: () => number;\n  getParentAbsX: () => number;\n  getParentAbsY: () => number;\n  getPositon: () => [number,number];\n  getZoom: () => number;\n\n  //SubMenu mutex\n  addOpenedSubMenu: (closeFn: () => void) => void;\n  closeOtherSubMenu: () => void;\n  closeOtherSubMenuWithTimeOut: () => void;\n  checkCloseOtherSubMenuTimeOut: () => boolean;\n\n  //Item control\n  addChildMenuItem: (item: MenuItemContext, index?: number) => void;\n  removeChildMenuItem: (item: MenuItemContext) => void;\n  markActiveMenuItem: (item: MenuItemContext, updateState?: boolean) => void;\n  markThisOpenedByKeyBoard: () => void;\n  isOpenedByKeyBoardFlag: () => boolean;\n  isMenuItemDataCollectedFlag: () => boolean;\n\n  //Other\n  getSubMenuInstanceContext: () => SubMenuContext|null;\n  getParentContext: () => SubMenuParentContext|null;\n  getElement: () => HTMLElement|null;\n}\n\n/**\n * Submenu container\n */\nexport default defineComponent({\n  name: 'ContextSubMenu',\n  components: {\n    ContextMenuItem,\n    ContextMenuSeparator,\n    ContextMenuIconRight\n  },\n  props: {\n    /**\n     * Items from options\n     */\n    items: {\n      type: Object as PropType<Array<MenuItem>>,\n      default: null\n    },\n    /**\n     * Max width for this submenu\n     */\n    maxWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Min width for this submenu\n     */\n    minWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Specifies should submenu adjust it position\n     * when the menu exceeds the screen. The default is true\n     */\n    adjustPosition: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Menu direction\n     */\n    direction: {\n      type: String as PropType<MenuPopDirection>,\n      default: 'br',\n    },\n  },\n  setup(props) {\n\n    //#region Injects\n\n    const parentContext = inject('menuContext') as SubMenuParentContext;\n    const options = inject('globalOptions') as Ref<MenuOptions>;\n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n\n    //#endregion\n\n    const { zIndex, getParentWidth, getParentHeight, getZoom } = parentContext;\n    const { adjustPosition } = toRefs(props);\n\n    const submenuRoot = ref<HTMLElement>();\n    const menu = ref<HTMLElement>();\n    const scroll = ref<HTMLElement>();\n    const upScrollButton = ref<HTMLElement>();\n    const openedSubMenuClose = [] as (() => void)[];\n\n    //#region Keyboard control context\n\n    const globalSetCurrentSubMenu = inject('globalSetCurrentSubMenu') as (menu: SubMenuContext|null) => void;\n\n    const menuItems = [] as MenuItemContext[];\n    let currentItem = null as MenuItemContext|null;\n    let leaveTimeout = 0;\n\n    function blurCurrentMenu() {\n      if (currentItem)\n        currentItem.blur();\n    }\n\n    function setAndFocusNotDisableItem(isDown: boolean, startIndex?: number) {\n      if (isDown) {\n        for(let i = startIndex !== undefined ? startIndex : 0; i < menuItems.length; i++) {\n          if (!menuItems[i].isDisabledOrHidden()) {\n            setAndFocusCurrentMenu(i);\n            break;\n          }\n        }\n      } else {\n        for(let i = startIndex !== undefined ? startIndex : (menuItems.length - 1); i >= 0; i--) {\n          if (!menuItems[i].isDisabledOrHidden()) {\n            setAndFocusCurrentMenu(i);\n            break;\n          }\n        }\n      }\n    }\n    function setAndFocusCurrentMenu(index?: number) {\n      if (currentItem)\n        blurCurrentMenu();\n      if (index !== undefined)\n        currentItem = menuItems[Math.max(0, Math.min(index, menuItems.length - 1))];\n      if (!currentItem)\n        return;\n\n      //Focus item\n      currentItem.focus();\n\n      //Scroll to current item\n      if (overflow.value) {\n        const element = currentItem.getElement();\n        if (element) {\n          scrollValue.value = Math.min(Math.max(-scrollHeight.value, -element.offsetTop - element.offsetHeight + maxHeight.value), 0);\n        }\n      }\n    }\n    function onSubMenuBodyClick() {\n      //Mouse click can set current focused submenu\n      globalSetCurrentSubMenu(thisMenuInsContext);\n    }\n\n    const thisMenuInsContext : SubMenuContext = {\n      isTopLevel: () => parentContext.getParentContext() === null,\n      closeSelfAndActiveParent: () => {\n        const parent = thisMenuContext.getParentContext();\n        if (parent) {\n          parent.closeOtherSubMenu();\n          const conext = parent.getSubMenuInstanceContext()\n          if (conext) {\n            conext.focusCurrentItem();\n            return true;\n          }\n        }\n        return false;\n      },\n      closeCurrentSubMenu: () => thisMenuContext.getParentContext()?.closeOtherSubMenu(),\n      moveCurrentItemFirst: () => setAndFocusNotDisableItem(true),\n      moveCurrentItemLast: () => setAndFocusNotDisableItem(false),\n      moveCurrentItemDown: () => setAndFocusNotDisableItem(true, (currentItem ? (menuItems.indexOf(currentItem) + 1) : 0)),\n      moveCurrentItemUp: () => setAndFocusNotDisableItem(false, (currentItem ? (menuItems.indexOf(currentItem) - 1) : 0)),\n      focusCurrentItem: () => setAndFocusCurrentMenu(),\n      openCurrentItemSubMenu: () => {\n        if (currentItem)\n          return currentItem?.showSubMenu()\n        return false;\n      },\n      triggerCurrentItemClick: (e) => currentItem?.click(e),\n    };\n\n    let isOpenedByKeyBoardFlag = false;\n    let isMenuItemDataCollectedFlag = false;\n\n    //#endregion\n\n    //#region Menu control context\n\n    //provide menuContext for child use\n    const thisMenuContext : SubMenuParentContext = {\n      zIndex: zIndex + 1,\n      container: parentContext.container,\n      adjustPadding: options.value.adjustPadding as { x: number, y: number } || MenuConstOptions.defaultAdjustPadding,\n      getParentWidth: () => menu.value?.offsetWidth || 0,\n      getParentHeight: () => menu.value?.offsetHeight || 0,\n      getParentX: () => position.value.x,\n      getParentY: () => position.value.y,\n      getParentAbsX: () => menu.value ? getLeft(menu.value, parentContext.container) : 0,\n      getParentAbsY: () => menu.value ? getTop(menu.value, parentContext.container) : 0,\n      getPositon: () => [0,0],\n      getZoom: () => options.value.zoom||MenuConstOptions.defaultZoom,\n      addOpenedSubMenu(closeFn: () => void) {\n        openedSubMenuClose.push(closeFn);\n      },\n      closeOtherSubMenu() {\n        openedSubMenuClose.forEach(k => k());\n        openedSubMenuClose.splice(0, openedSubMenuClose.length);\n        globalSetCurrentSubMenu(thisMenuInsContext);\n      },\n      checkCloseOtherSubMenuTimeOut() {\n        if (leaveTimeout) {\n          clearTimeout(leaveTimeout);\n          leaveTimeout = 0;\n          return true;\n        }\n        return false;\n      },\n      closeOtherSubMenuWithTimeOut() {\n        leaveTimeout = setTimeout(() => {\n          leaveTimeout = 0;\n          this.closeOtherSubMenu();\n        }, 200) as unknown as number; //Add a delay, the user will not hide the menu when moving too fast\n      },\n      addChildMenuItem: (item: MenuItemContext, index?: number) => {\n        if (index === undefined)\n          menuItems.push(item);\n        else\n          menuItems.splice(index, 0, item);\n        //item.getSubMenuInstance = () => {\n        //  return subMenuRefs.value[menuItems.indexOf(item)]?.value;\n        //}\n      },\n      removeChildMenuItem: (item: MenuItemContext) => {\n        menuItems.splice(menuItems.indexOf(item), 1);\n        item.getSubMenuInstance = () => undefined;\n      },\n      markActiveMenuItem: (item: MenuItemContext, updateState = false) => {\n        blurCurrentMenu();\n        currentItem = item;\n        if (updateState)\n          setAndFocusCurrentMenu();\n      },\n      markThisOpenedByKeyBoard: () => {\n        isOpenedByKeyBoardFlag = true;\n      },\n      isOpenedByKeyBoardFlag: () => {\n        if (isOpenedByKeyBoardFlag) {\n          isOpenedByKeyBoardFlag = false;\n          return true;\n        }\n        return false;\n      },\n      isMenuItemDataCollectedFlag: () => isMenuItemDataCollectedFlag,\n      getElement: () => menu.value || null,\n      getParentContext: () => parentContext,\n      getSubMenuInstanceContext: () => thisMenuInsContext,\n    };\n    provide('menuContext', thisMenuContext);\n\n    //#endregion\n\n    //#region expose user use context\n\n    const exposeContext : ContextSubMenuInstance = {\n      getChildItem: (index: number) => menuItems[index],\n      getMenuDimensions: () => {\n        if (submenuRoot.value) {\n          return {\n            width: submenuRoot.value.offsetWidth,\n            height: submenuRoot.value.offsetHeight,\n          };\n        }\n        return { width: 0, height: 0 };\n      },\n      getSubmenuRoot: () => submenuRoot.value,\n      getMenu: () => menu.value,\n      getScrollValue: () => scrollValue.value,\n      setScrollValue: (v: number) => scrollValue.value = v,\n      getScrollHeight: () => scrollHeight.value,\n      getMaxHeight: () => maxHeight.value,\n      getPosition: () => position.value,\n      setPosition: (x: number, y: number) => { \n        position.value.x = x;\n        position.value.y = y;\n      },\n    };\n    \n    //#endregion\n\n    //#region set parent item context\n\n    const menuItemInstance = inject<MenuItemContext|undefined>('menuItemInstance', undefined);\n    if (menuItemInstance)\n      menuItemInstance.getSubMenuInstance = () => exposeContext;\n\n    //#endregion\n\n    const scrollValue = ref(0);\n    const scrollHeight = ref(0);\n\n    //Scroll the items\n    function onScroll(down : boolean) {\n      if (down)\n        scrollValue.value = Math.min(Math.max(scrollValue.value - 50, -scrollHeight.value), 0);\n      else\n        scrollValue.value = Math.min(scrollValue.value + 50, 0);\n    }\n\n    function onMouseWhellMx(e: WheelEvent) {\n      e.preventDefault();\n      e.stopPropagation();\n      onScroll (e.deltaY > 0);\n    }\n    function onMouseWhell(e: WheelEvent) {\n      if (options.value.mouseScroll) {\n        e.preventDefault();\n        e.stopPropagation();\n        onScroll (e.deltaY > 0);\n      }\n    }\n\n    const overflow = ref(false);\n    const position = ref({ x: 0, y: 0 } as ContextMenuPositionData)\n    const maxHeight = ref(0);\n\n    onMounted(() => {\n      const pos = parentContext.getPositon();\n      position.value = {\n        x: (pos[0] ?? options.value.xOffset ?? 0) / getZoom(),\n        y: (pos[1] ?? options.value.yOffset ?? 0) / getZoom(),\n      };\n\n      //Mark current item submenu is open\n      globalSetCurrentSubMenu(thisMenuInsContext);\n\n      nextTick(() => {\n        const menuEl = menu.value;\n\n        //adjust submenu position\n        if (menuEl && scroll.value) {\n\n          const { container } = parentContext;\n\n          const parentWidth = getParentWidth?.() ?? 0;\n          const parentHeight = getParentHeight?.() ?? 0;\n\n          const fillPaddingX = typeof parentContext.adjustPadding === 'number' ? parentContext.adjustPadding : (parentContext.adjustPadding?.x ?? 0);\n          const fillPaddingYAlways = typeof parentContext.adjustPadding === 'number' ? parentContext.adjustPadding : (parentContext.adjustPadding?.y ?? 0);\n          const fillPaddingY = parentHeight > 0 ? fillPaddingYAlways : 0;\n\n          const windowHeight = document.documentElement.scrollHeight / getZoom();\n          const windowWidth = document.documentElement.scrollWidth / getZoom();\n\n          const avliableWidth = Math.min(windowWidth, container.offsetWidth);\n          const avliableHeight = Math.min(windowHeight, container.offsetHeight);\n\n          let absX = getLeft(menuEl, container),\n            absY = getTop(menuEl, container);\n\n          //set x positon\n          if (props.direction.includes('l')) {\n            position.value.x -= menuEl.offsetWidth + fillPaddingX; //left\n          }\n          else if (props.direction.includes('r')) {\n            position.value.x += parentWidth + fillPaddingX; //right\n          }\n          else {\n            position.value.x += parentWidth / 2;\n            position.value.x -= (menuEl.offsetWidth + fillPaddingX) / 2; //center\n          }\n\n          //set y positon\n          if (props.direction.includes('t')) {\n            position.value.y -= (menuEl.offsetHeight + fillPaddingYAlways * 2) / getZoom(); //top\n          }\n          else if (props.direction.includes('b')) {\n            position.value.y -= fillPaddingYAlways / getZoom();  //bottom\n          }\n          else {\n            position.value.y += (parentHeight / 2) / getZoom();\n            position.value.y -= ((menuEl.offsetHeight + fillPaddingYAlways) / 2) / getZoom(); //center\n          }\n\n          //Overflow adjust\n          if (adjustPosition.value) {\n            nextTick(() => {\n              absX = getLeft(menuEl, container);\n              absY = getTop(menuEl, container);\n\n              const xOverflow = (absX + menuEl.offsetWidth) - (avliableWidth);\n              const yOverflow = (absY + menuEl.offsetHeight + fillPaddingY * 2) - (avliableHeight);\n\n              overflow.value = yOverflow > 0;\n              scrollHeight.value = menuEl.offsetHeight - avliableHeight + fillPaddingY * 2 /* Padding */;\n\n              if (xOverflow > 0) {//X overflow\n                const ox = parentWidth + menuEl.offsetWidth - fillPaddingX;\n                const maxSubWidth = absX;\n                if (ox > maxSubWidth)\n                  position.value.x -= maxSubWidth;\n                else\n                  position.value.x -= ox;\n              }\n\n              if (overflow.value) { //Y overflow\n                const oy = yOverflow;\n                const maxSubHeight = absY;\n                if (oy > maxSubHeight)\n                  position.value.y -= maxSubHeight - fillPaddingY;\n                else\n                  position.value.y -= oy - fillPaddingY;\n                maxHeight.value = (avliableHeight - fillPaddingY * 2);\n              } else {\n                maxHeight.value = 0;\n              }\n            });\n          }\n        }\n\n        //Focus this submenu\n        menuEl?.focus({\n          preventScroll: true\n        });\n\n        //Is this submenu opened by keyboard? If yes then select first item\n        if (parentContext.isOpenedByKeyBoardFlag())\n          setAndFocusNotDisableItem(true);\n\n        isMenuItemDataCollectedFlag = true;\n      });\n    });\n    onBeforeUnmount(() => {\n      if (menuItemInstance)\n        menuItemInstance.getSubMenuInstance = () => undefined;\n    });\n\n    return {\n      submenuRoot,\n      menu,\n      scroll,\n      options,\n      zIndex,\n      constOptions: MenuConstOptions,\n      scrollValue,\n      upScrollButton,\n      overflow,\n      position,\n      scrollHeight,\n      maxHeight,\n      ...exposeContext,\n      globalHasSlot,\n      globalRenderSlot,\n      onScroll,\n      onSubMenuBodyClick,\n      onMouseWhell,\n      onMouseWhellMx,\n      solveNumberOrStringSize,\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n@use \"./ContextMenu.scss\" as *;\n</style>\n", "<template>\n  <div class=\"mx-menu-ghost-host\">\n    <Transition\n      v-if=\"options.menuTransitionProps\"\n      appear\n      v-bind=\"options.menuTransitionProps\"\n      @after-leave=\"emit('closeAnimFinished')\"\n    >\n      <ContextSubMenuConstructor\n        v-if=\"show\"\n        ref=\"submenuInstance\"\n        class=\"mx-menu-host\"\n        :items=\"options.items\"\n        :adjustPosition=\"options.adjustPosition\"\n        :maxWidth=\"options.maxWidth || MenuConstOptions.defaultMaxWidth\"\n        :minWidth=\"options.minWidth || MenuConstOptions.defaultMinWidth\"\n        :direction=\"(options.direction || MenuConstOptions.defaultDirection as MenuPopDirection)\"\n      >\n        <slot />\n      </ContextSubMenuConstructor>\n    </Transition>\n    <ContextSubMenuConstructor\n      v-else-if=\"show\"\n      ref=\"submenuInstance\"\n      class=\"mx-menu-host\"\n      :items=\"options.items\"\n      :adjustPosition=\"options.adjustPosition\"\n      :maxWidth=\"options.maxWidth || MenuConstOptions.defaultMaxWidth\"\n      :minWidth=\"options.minWidth || MenuConstOptions.defaultMinWidth\"\n      :direction=\"(options.direction || MenuConstOptions.defaultDirection as MenuPopDirection)\"\n    >\n      <slot />\n    </ContextSubMenuConstructor>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { h, onBeforeUnmount, onMounted, type PropType, provide, ref, renderSlot, toRefs, type VNode, watch, Transition, useSlots, type Ref } from 'vue'\nimport type { ContextMenuInstance, ContextSubMenuInstance, MenuItem, MenuOptions, MenuPopDirection } from './ContextMenuDefine'\nimport { MenuConstOptions } from './ContextMenuDefine'\nimport { addOpenedContextMenu, removeOpenedContextMenu } from './ContextMenuMutex';\nimport ContextSubMenuConstructor, { type SubMenuContext, type SubMenuParentContext } from './ContextSubMenu.vue';\n\n/**\n * Context menu component\n */\n\nexport type GlobalHasSlot = (name: string) => boolean;\nexport type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;\n\nconst props = defineProps({\n  /**\n   * Menu options\n   */\n  options: {\n    type: Object as PropType<MenuOptions>,\n    default: null\n  },\n  /**\n   * Show menu?\n   */\n  show: {\n    type: Object as PropType<Ref<boolean>>,\n    default: null\n  },\n  /**\n   * Current container, For calculation only\n   */\n  container: {\n    type: Object as PropType<HTMLElement>,\n    default: null\n  },\n  /**\n   * Make sure is user set the custom container.\n   */\n  isFullScreenContainer: {\n    type: Boolean,\n    default: true\n  },\n});\n\nconst emit = defineEmits([ 'close', 'closeAnimFinished' ]);\n\nconst slots = useSlots()\n\nconst submenuInstance = ref<ContextSubMenuInstance>();\n\nconst {\n  options,\n  show,\n  container,\n} = toRefs(props);\n\nonMounted(() => {\n  if (show.value)\n    openMenu();\n})\nonBeforeUnmount(() => {\n  removeBodyEvents();\n});\n\nwatch(show, (v: boolean) => {\n  if(v) {\n    openMenu();\n  } else {\n    removeOpenedContextMenu(instance);\n    removeBodyEvents();\n  }\n});\n\nconst instance : ContextMenuInstance = {\n  closeMenu,\n  isClosed,\n  getMenuRef: () => submenuInstance.value,\n  getMenuDimensions: () => submenuInstance.value?.getMenuDimensions() ?? { width: 0, height: 0 },\n};\nlet closed = false;\n\nfunction openMenu() {\n  installBodyEvents();\n  addOpenedContextMenu(instance);\n}\nfunction closeMenu(fromItem?: MenuItem|undefined) {\n  closed = true;\n  emit(\"close\", fromItem);\n  if (!options.value.menuTransitionProps)\n    emit('closeAnimFinished');\n  removeOpenedContextMenu(instance);\n}\nfunction isClosed() {\n  return closed;\n}\n\n\nfunction installBodyEvents() {\n  setTimeout(() => {\n    document.addEventListener(\"click\", onBodyClick, true);\n    document.addEventListener(\"contextmenu\", onBodyClick, true);\n    document.addEventListener(\"scroll\", onBodyScroll, true);\n    if (!props.isFullScreenContainer && container.value)\n      container.value.addEventListener(\"scroll\", onBodyScroll, true);\n    if (options.value.keyboardControl !== false)\n      document.addEventListener('keydown', onMenuKeyDown);\n  }, 50);\n}\nfunction removeBodyEvents() {\n  document.removeEventListener(\"contextmenu\", onBodyClick, true);\n  document.removeEventListener(\"click\", onBodyClick, true);\n  document.removeEventListener(\"scroll\", onBodyScroll, true);\n  if (!props.isFullScreenContainer && container.value)\n    container.value.removeEventListener(\"scroll\", onBodyScroll, true);\n  if (options.value.keyboardControl !== false)\n    document.removeEventListener('keydown', onMenuKeyDown);\n}\n\n//For keyboard event, remember which submenu is active\nconst currentOpenedMenu = ref<SubMenuContext|null>();\nprovide('globalSetCurrentSubMenu', (menu: SubMenuContext|null) => currentOpenedMenu.value = menu);\n\nfunction onMenuKeyDown(e: KeyboardEvent) {\n  let handled = true;\n  //Handle keyboard event\n  switch(e.key) {\n    case \"Escape\": {\n      if (currentOpenedMenu.value?.isTopLevel() === false) {\n        currentOpenedMenu.value?.closeCurrentSubMenu();\n      } else {\n        closeMenu();\n      }\n      break;\n    }\n    case \"ArrowDown\":\n      currentOpenedMenu.value?.moveCurrentItemDown();\n      break;\n    case \"ArrowUp\":\n      currentOpenedMenu.value?.moveCurrentItemUp();\n      break;\n    case \"Home\":\n      currentOpenedMenu.value?.moveCurrentItemFirst();\n      break;\n    case \"End\":\n      currentOpenedMenu.value?.moveCurrentItemLast();\n      break;\n    case \"ArrowLeft\": {\n      if (!currentOpenedMenu.value?.closeSelfAndActiveParent())\n        options.value.onKeyFocusMoveLeft?.();\n      break;\n    }\n    case \"ArrowRight\":\n      if (!currentOpenedMenu.value?.openCurrentItemSubMenu())\n        options.value.onKeyFocusMoveRight?.();\n      break;\n    case \"Enter\":\n      currentOpenedMenu.value?.triggerCurrentItemClick(e);\n      break;\n    default:\n      handled = false;\n      break;\n  }\n  if (handled && currentOpenedMenu.value) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\nfunction onBodyScroll() {\n  //close when docunment scroll\n  if (options.value.closeWhenScroll !== false)\n    closeMenu();\n}\nfunction onBodyClick(e: MouseEvent) {\n  checkTargetAndClose(e.target as HTMLElement, e);\n}\nfunction checkTargetAndClose(target: HTMLElement, e: MouseEvent) {\n  //Loop target , Check whether the currently clicked element belongs to the current menu.\n  // If yes, it will not be closed\n  while (target) {\n    if (target.classList && target.classList.contains('mx-menu-host'))\n      return;\n    target = target.parentNode as HTMLElement;\n  }\n  if (options.value.clickCloseOnOutside !== false) {\n    //Close menu\n    removeBodyEvents();\n    closeMenu();\n  } else {\n    options.value.onClickOnOutside?.(e);\n  }\n}\n\n//provide globalOptions for child use\nprovide('globalOptions', options);\nprovide('globalCloseMenu', closeMenu);\nprovide('globalIsFullScreenContainer', props.isFullScreenContainer);\n//check slot exists\nprovide('globalHasSlot', (name: string) => {\n  return slots[name] !== undefined;\n});\n//render slot\nprovide('globalRenderSlot', (name: string, params: Record<string, unknown>) => {\n  return renderSlot(slots, name, { ...params }, () => [ h('span', 'Render slot failed') ], false);\n});\n//provide menuContext for child use\nprovide('menuContext', {\n  zIndex: options.value.zIndex || MenuConstOptions.defaultZindex,\n  container: container.value as unknown as HTMLElement,\n  adjustPadding: { x: 0, y: 0 },\n  getParentAbsY: () => options.value.x,\n  getParentAbsX: () => options.value.y,\n  getZoom: () => options.value.zoom || MenuConstOptions.defaultZoom,\n  getParentX: () => 0,\n  getParentY: () => 0,\n  getParentWidth: () => 0,\n  getParentHeight: () => 0,\n  getPositon: () => [options.value.x,options.value.y],\n  closeOtherSubMenuWithTimeOut: () => {/* Do nothing */},\n  checkCloseOtherSubMenuTimeOut: () => false,\n  addOpenedSubMenu: () => {/* Do nothing */},\n  closeOtherSubMenu: () => {/* Do nothing */},\n  getParentContext: () => null,\n  getSubMenuInstanceContext: () => null,\n  getElement: () => null,\n  addChildMenuItem: () => {/* Do nothing */},\n  removeChildMenuItem: () => {/* Do nothing */},\n  markActiveMenuItem: () => {/* Do nothing */},\n  markThisOpenedByKeyBoard: () => {/* Do nothing */},\n  isOpenedByKeyBoardFlag: () => false,\n  isMenuItemDataCollectedFlag: () => false,\n} as SubMenuParentContext);\n\n//Expose instance function\ndefineExpose(instance);\n</script>\n\n<style>\n.mx-menu-ghost-host {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  top: 0;\n  overflow: hidden;\n  pointer-events: none;\n}\n.mx-menu-ghost-host.mx-fullscreen {\n  position: fixed;\n}\n</style>\n", "<script lang=\"ts\">\nimport { defineComponent, h, Teleport, toRefs, ref } from 'vue'\nimport type { PropType, VNode } from 'vue'\nimport type { ContextMenuInstance, MenuOptions } from './ContextMenuDefine'\nimport { genContainer } from \"./ContextMenuUtils\";\nimport ContextSubMenuWrapperConstructor from './ContextSubMenuWrapper.vue'\n\nexport type GlobalHasSlot = (name: string) => boolean;\nexport type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;\n\n/**\n * Context menu component\n */\nexport default defineComponent({\n  name: 'ContextMenu',\n  emits: [ 'update:show', 'close' ],\n  props: {\n    /**\n     * Menu options\n     */\n    options: {\n      type: Object as PropType<MenuOptions>,\n      default: null\n    },\n    /**\n     * Show menu?\n     */\n    show: {\n      type: Boolean,\n      default: false\n    },\n  },\n  setup(props, ctx) {\n\n    const {\n      options,\n      show,\n    } = toRefs(props);\n\n    const menuRef = ref<ContextMenuInstance | null>(null);\n\n    ctx.expose({\n      closeMenu: () => ctx.emit('update:show', false),\n      isClosed: () => !show.value,\n      getMenuRef: () => menuRef.value?.getMenuRef(),\n      getMenuDimensions: () => menuRef.value?.getMenuDimensions() ?? { width: 0, height: 0 },\n    });\n\n    return () => {  \n      const { isNew, container, eleId } = genContainer(options.value);\n      \n      return [\n        h(\n          Teleport,\n          { to: `#${eleId}` },\n          [\n            h(ContextSubMenuWrapperConstructor as unknown as string, {\n              ref: menuRef,\n              options: options,\n              show: show,\n              container: container,\n              isFullScreenContainer: !isNew,\n              onClose: (fromItem: undefined) => {\n                ctx.emit('update:show', false);\n                ctx.emit('close');\n                options.value.onClose?.(fromItem);\n              },\n            }, ctx.slots)\n          ]\n        )\n      ];\n    }\n  },\n})\n</script>\n", "<script lang=\"ts\">\nimport { defineComponent, h, inject, ref, toRefs } from 'vue'\nimport type { PropType, Ref, SVGAttributes } from 'vue'\nimport ContextSubMenuConstructor from './ContextSubMenu.vue';\nimport ContextMenuItemConstructor from './ContextMenuItem.vue';\nimport type { MenuOptions } from './ContextMenuDefine';\n\nexport default defineComponent({\n  name: 'ContextMenuGroup',\n  props: {\n     /**\n     * Is this menu disabled? \n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n     /**\n     * Is this menu hidden? \n     */\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Is this menu disabled? \n     */\n    clickHandler: {\n      type: Function as PropType<() => void>,\n      default: null\n    },\n    /**\n     * Menu label\n     */\n    label: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Menu icon (for icon class)\n     */\n    icon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Custom icon library font class name.\n     * \n     * Only for css font icon, If you use the svg icon, you do not need to use this.\n     */\n    iconFontClass: {\n      type: String,\n      default: 'iconfont'\n    },\n    /**\n     * Is this menu item checked?\n     * \n     * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n     */\n     checked: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Shortcut key text display on the right.\n     * \n     * The shortcut keys here are only for display. You need to handle the key events by yourself.\n     */\n    shortcut: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n     */\n    svgIcon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n     */\n    svgProps: {\n      type: Object as PropType<SVGAttributes>,\n      default: null\n    },\n    /**\n     * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n     * \n     * Default is true .\n     * \n     * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n     */\n    preserveIconWidth: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Show right arrow on this menu?\n     */\n    showRightArrow: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Should close menu when Click this menu item ?\n     */\n    clickClose: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * By default, the submenu will automatically adjust its position to prevent it overflow the container.\n     * \n     * If you allow menu overflow containers, you can set this to false.\n     * \n     * Default is inherit from `MenuOptions.adjustPosition`  .\n     */\n    adjustSubMenuPosition: {\n      type: Boolean,\n      default: undefined\n    },\n    /**\n     * Max width of submenu\n     */\n    maxWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Min width of submenu\n     */\n    minWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n  },\n  setup(props, ctx) {\n    \n    const options = inject('globalOptions') as Ref<MenuOptions>;\n    const { adjustSubMenuPosition, maxWidth, minWidth } = toRefs(props);\n    const adjustSubMenuPositionValue = typeof adjustSubMenuPosition.value !== 'undefined' ? adjustSubMenuPosition.value : options.value.adjustPosition;\n    \n    const subMenuRef = ref();\n    const itemRef = ref();\n\n    ctx.expose({\n      getSubMenuRef: () => subMenuRef.value,\n      getMenuItemRef: () => itemRef.value,\n    })\n\n    //Create Item\n    return () => h(ContextMenuItemConstructor, {\n      ...props,\n      ref: itemRef,\n      showRightArrow: true,\n      maxWidth: undefined,\n      minWidth: undefined,\n      adjustSubMenuPosition: undefined,\n      hasChildren: typeof ctx.slots.default !== undefined,\n    }, ctx.slots.default ? {\n      //Create SubMenu\n      submenu: () => h(ContextSubMenuConstructor, {\n        ref: subMenuRef,\n        maxWidth: maxWidth.value,\n        minWidth: minWidth.value,\n        adjustPosition: adjustSubMenuPositionValue,\n      }, {\n        default: ctx.slots.default,\n      })\n    } : undefined);\n  },\n})\n</script>", "import { h, ref, render } from \"vue\";\nimport type { App, Slot } from \"vue\";\nimport type { ContextMenuInstance } from \"./ContextMenuDefine\";\nimport type { MenuOptions } from \"./ContextMenuDefine\";\nimport { checkOpenedContextMenu, closeContextMenu } from \"./ContextMenuMutex\";\nimport { genContainer, transformMenuPosition } from \"./ContextMenuUtils\";\nimport ContextMenuConstructor from './ContextMenu.vue'\nimport ContextSubMenuWrapperConstructor from './ContextSubMenuWrapper.vue'\nimport ContextSubMenuConstructor from './ContextSubMenu.vue'\nimport ContextMenuItemConstructor from './ContextMenuItem.vue'\nimport ContextMenuGroupConstructor from './ContextMenuGroup.vue'\nimport ContextMenuSeparatorConstructor from './ContextMenuSeparator.vue'\n\nfunction initInstance(\n  options: MenuOptions, \n  container: HTMLElement, \n  isNew: boolean, \n  customSlots?: Record<string, Slot>,\n) {\n  const show = ref(true);\n  const vnode = h(ContextSubMenuWrapperConstructor, { \n    options: options,\n    show: show,\n    container: container,\n    isFullScreenContainer: !isNew,\n    onCloseAnimFinished: () => {\n      render(null, container);\n    },\n    onClose: (item: undefined) => {\n      options.onClose?.(item);\n      show.value = false;\n    },\n  }, customSlots);\n  render(vnode, container);\n  return vnode.component;\n}\n\n//Show global contextmenu\nfunction $contextmenu(options : MenuOptions, customSlots?: Record<string, Slot>) {\n  const container = genContainer(options);\n  const component = initInstance(options, container.container, container.isNew, customSlots);\n  return (component as unknown as Record<string, unknown>).exposed as ContextMenuInstance;\n}\n\nexport default {\n  /**\n   * For Vue install\n   * @param app \n   */\n  install(app: App<Element>) : void {\n    app.config.globalProperties.$contextmenu = $contextmenu;\n    app.component('ContextMenu', ContextMenuConstructor);\n    app.component('ContextMenuItem', ContextMenuItemConstructor);\n    app.component('ContextMenuGroup', ContextMenuGroupConstructor);\n    app.component('ContextMenuSperator', ContextMenuSeparatorConstructor);\n    app.component('ContextMenuSeparator', ContextMenuSeparatorConstructor);\n    app.component('ContextSubMenu', ContextSubMenuConstructor);\n  },\n  /**\n   * Show a ContextMenu in page, same as `this.$contextmenu`\n   * \n   * For example:\n   * \n   * ```ts\n   * onContextMenu(e : MouseEvent) {\n   *   //prevent the browser's default menu\n   *   e.preventDefault();\n   *   //show your menu\n   *   ContextMenu.showContextMenu({\n   *     x: e.x,\n   *     y: e.y,\n   *     items: [\n   *       { \n   *         label: \"A menu item\", \n   *         onClick: () => {\n   *           alert(\"You click a menu item\");\n   *         }\n   *       },\n   *       { \n   *         label: \"A submenu\", \n   *         children: [\n   *           { label: \"Item1\" },\n   *           { label: \"Item2\" },\n   *           { label: \"Item3\" },\n   *         ]\n   *       },\n   *     ]\n   *   }); \n   * }\n   * ```\n   * \n   * You can pass customSlots to custom rendering this menu.\n   * \n   * For example, custom rendering #itemRender and #separatorRender:\n   * ```ts\n   *   ContextMenu.showContextMenu({\n   *     ...\n   *   } as MenuOptions, {\n   *     //Use slot in function mode\n   *     itemRender: ({ disabled, label, icon, showRightArrow, onClick, onMouseEnter }) => [  h('div', { \n   *       class: 'my-menu-item'+(disabled?' disabled':''),\n   *       onMouseenter: onMouseEnter,\n   *       onClick: onClick,\n   *     }, [\n   *       icon ? h('img', { src: icon }) : h('div', { class: 'icon-place-holder' }),\n   *       h('span', label),\n   *       showRightArrow ? h('span', { class: 'right-arraw' }, '>>') : h('div'),\n   *     ]) ],\n   *     separatorRender: () => [ h('div', { class: 'my-menu-sperator' }) ]\n   *   })\n   * ```\n   * \n   * @param options The options of ContextMenu\n   * @param customSlots You can provide some custom slots to customize the rendering style of the menu. These slots are the same as the slots of component ContextMenu.\n   * @returns Menu instance \n   */\n  showContextMenu(options : MenuOptions, customSlots?: Record<string, Slot>) : ContextMenuInstance {\n    return $contextmenu(options, customSlots);\n  },\n  /**\n   * Get if there is a menu open now.\n   */\n  isAnyContextMenuOpen() {\n    return checkOpenedContextMenu();\n  },\n  /**\n   * Close the currently open menu\n   */\n  closeContextMenu,\n  //Tools\n  transformMenuPosition,\n}\n\n", "<template>\n  <svg class=\"mx-menu-bar-icon-menu\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\"><path d=\"M133.310936 296.552327l757.206115 0c19.781623 0 35.950949-16.169326 35.950949-35.950949 0-19.781623-15.997312-35.950949-35.950949-35.950949L133.310936 224.650428c-19.781623 0-35.950949 16.169326-35.950949 35.950949C97.359987 280.383 113.529313 296.552327 133.310936 296.552327z\"></path><path d=\"M890.51705 476.135058 133.310936 476.135058c-19.781623 0-35.950949 16.169326-35.950949 35.950949 0 19.781623 16.169326 35.950949 35.950949 35.950949l757.206115 0c19.781623 0 35.950949-16.169326 35.950949-35.950949C926.467999 492.304384 910.298673 476.135058 890.51705 476.135058z\"></path><path d=\"M890.51705 727.447673 133.310936 727.447673c-19.781623 0-35.950949 15.997312-35.950949 35.950949s16.169326 35.950949 35.950949 35.950949l757.206115 0c19.781623 0 35.950949-15.997312 35.950949-35.950949S910.298673 727.447673 890.51705 727.447673z\"></path></svg>\n</template>", "<template>\n  <div \n    :class=\"[ \n      'mx-menu-bar',\n      options.theme ?? '',\n      options.mini ? 'mini' : '',\n    ]\"\n    @focus=\"onFocus\"\n    @blur=\"onBlur\"\n  >\n    <slot name=\"prefix\" />\n    \n    <div \n      v-if=\"options.mini\"\n      ref=\"menuBarContent\"\n      class=\"mx-menu-bar-content\"\n    >\n      <div \n        class=\"mx-menu-bar-item\"\n        @click=\"onItemClick(0, null)\"\n      >\n        <MenuBarIconMenu />\n      </div>\n    </div>\n    <div \n      v-else\n      ref=\"menuBarContent\"\n      class=\"mx-menu-bar-content\"\n    >\n      <div \n        v-for=\"(item, key) in menuItems\" \n        :key=\"key\"\n        :class=\"[\n          'mx-menu-bar-item',\n          item == menuActive ? 'active' : '',\n        ]\"\n        @click=\"onItemClick(key, item as MenuItem)\"\n        @mouseenter=\"onItemEnter(key, item as MenuItem)\"\n      >\n        {{ item.label }}\n      </div>\n    </div>\n    <slot name=\"suffix\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n/**\n * Menu bar component\n */\nimport { ref, type PropType, onMounted, watch } from 'vue';\nimport type { MenuBarOptions } from './MenuBar';\nimport type { ContextMenuInstance, MenuItem } from './ContextMenuDefine';\nimport { getTop, getLeft } from './ContextMenuUtils';\nimport ContextMenu from './ContextMenuInstance';\nimport MenuBarIconMenu from './MenuBarIconMenu.vue';\n\nconst props = defineProps({\n  /**\n   * Menu options\n   */\n  options: {\n    type: Object as PropType<MenuBarOptions>,\n    default: null\n  }\n});\n\nconst menuBarContent = ref<HTMLDivElement>();\nconst menuBarActive = ref(false);\nconst menuItems = ref<MenuItem[]>([]);\nconst menuActive = ref<MenuItem|null>(null);\n\nfunction onFocus() {\n  menuBarActive.value = true;\n}\nfunction onBlur() {\n  menuBarActive.value = false;\n}\n\nonMounted(() => {\n  (menuItems.value as MenuItem[]) = props.options.items || [];\n});\nwatch(() => props.options, () => {\n  (menuItems.value as MenuItem[]) = props.options.items || [];\n});\n\nlet currentMenu : ContextMenuInstance|null = null;\nlet currentMenuIndex = -1;\n\nfunction showNextSubMenu() {\n  if (currentMenuIndex < menuItems.value.length - 1)\n    currentMenuIndex++;\n  else \n    currentMenuIndex = 0;\n  showSubMenu(currentMenuIndex, menuItems.value[currentMenuIndex] as MenuItem);\n}\nfunction showPrevSubMenu() {\n  if (currentMenuIndex > 0)\n    currentMenuIndex--;\n  else \n    currentMenuIndex = menuItems.value.length - 1;\n  showSubMenu(currentMenuIndex, menuItems.value[currentMenuIndex] as MenuItem);\n}\nfunction getMenuShowPos(ele: HTMLElement) {\n  const showDirection = props.options.barPopDirection ?? 'bl';\n  let x = 0; \n  let y = 0;\n  if (showDirection.startsWith('b'))\n    y = getTop(ele) + ele.offsetHeight;\n  else if (showDirection.startsWith('t'))\n    y = getTop(ele);\n  else \n    y = getTop(ele) + ele.offsetHeight / 2;\n\n  if (showDirection.endsWith('l'))\n    x = getLeft(ele);\n  else if (showDirection.startsWith('r'))\n    x = getLeft(ele) + ele.offsetWidth;\n  else \n    x = getLeft(ele) + ele.offsetWidth / 2;\n\n  return { x, y }\n}\nfunction showSubMenu(index: number, item: MenuItem) {\n  currentMenuIndex = index;\n  if (!item.children)\n    return;\n  if (currentMenu) {\n    currentMenu.closeMenu();\n    currentMenu = null;\n    menuBarActive.value = true;\n  }\n  (menuActive.value as MenuItem) = item;\n  const ele = menuBarContent.value?.children[index] as HTMLElement;\n  if (ele) {\n    const { x, y } = getMenuShowPos(ele);\n\n    currentMenu = ContextMenu.showContextMenu({\n      ...props.options,\n      items: item.children,\n      x,\n      y,\n      onKeyFocusMoveLeft() {\n        showPrevSubMenu();\n      },\n      onKeyFocusMoveRight() {\n        showNextSubMenu();\n      },\n      onClose() {\n        if (menuActive.value == item) {\n          menuBarActive.value = false;\n          menuActive.value = null;\n        }\n      },\n    });\n  }\n}\nfunction showAllSubMenu() {\n  currentMenuIndex = 0;\n  const ele = menuBarContent.value as HTMLElement;\n  if (ele) {\n    const { x, y } = getMenuShowPos(ele);\n    currentMenu = ContextMenu.showContextMenu({\n      ...props.options,\n      x,\n      y,\n    });\n  }\n}\n\nfunction onItemClick(index: number, item: MenuItem|null) {\n  if (item) {\n    menuBarActive.value = true;\n    showSubMenu(index, item);\n    if (\n      item.onClick && (\n      (item.clickableWhenHasChildren === true && item.children && item.children.length > 0)\n      || !item.children || item.children.length === 0)\n    )\n      item.onClick();\n  } else {\n    showAllSubMenu();\n  }\n}\nfunction onItemEnter(index: number, item: MenuItem) {\n  if (menuBarActive.value) {\n    showSubMenu(index, item);\n  }\n}\n\n</script>\n\n<style lang=\"scss\">\n@use './MenuBar.scss' as *;\n</style>"],
  "mappings": "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",
  "names": ["currentOpenedContextMenu", "checkOpenedContextMenu", "addOpenedContextMenu", "inst", "closeContextMenu", "removeOpenedContextMenu", "MenuConstOptions", "getTop", "e", "stopNode", "offset", "getLeft", "transformMenuPosition", "offsetX", "offsetY", "container", "DEFAULT_CONTAINER_ID", "GEN_CONTAINER_ID", "containerId", "genContainer", "options", "getContainer", "zIndex", "eleId", "solveNumberOrStringSize", "value", "VNodeRender", "defineComponent", "props", "vnode", "data", "toRefs", "_hoisted_1", "_hoisted_3", "_cache", "__props", "emit", "__emit", "clickHandler", "clickClose", "clickableWhenHasChildren", "disabled", "hidden", "label", "icon", "iconFontClass", "showRightArrow", "shortcut", "hasChildren", "showSubMenu", "ref", "keyBoardFocusMenu", "menuItemRef", "inject", "globalHasSlot", "globalRenderSlot", "globalCloseMenu", "menuContext", "menuItemInstance", "onMouseEnter", "onClick", "provide", "onMounted", "nextTick", "index", "parentEl", "indexCounting", "i", "el", "onBeforeUnmount", "currentTarget", "closeSubMenu", "getItemDataForChildren", "__expose", "_sfc_main$6", "_component_VNodeRender", "_resolveComponent", "_ctx", "_openBlock", "_createElementBlock", "_sfc_main$5", "ContextMenuItem", "ContextMenuSeparator", "ContextMenuIconRight", "parentContext", "getParentWidth", "getParentHeight", "getZoom", "adjustPosition", "submenuRoot", "menu", "scroll", "upScrollButton", "openedSubMenuClose", "globalSetCurrentSubMenu", "menuItems", "currentItem", "leaveTimeout", "blurCurrentMenu", "setAndFocusNotDisableItem", "isDown", "startIndex", "setAndFocusCurrentMenu", "overflow", "element", "scrollValue", "scrollHeight", "maxHeight", "onSubMenuBodyClick", "thisMenuInsContext", "parent", "thisMenuContext", "conext", "_a", "isOpenedByKeyBoardFlag", "isMenuItemDataCollectedFlag", "position", "closeFn", "k", "item", "updateState", "exposeContext", "v", "x", "y", "onScroll", "down", "onMouseWhellMx", "onMouseWhell", "pos", "menuEl", "parentWidth", "parentHeight", "fillPaddingX", "fillPaddingYAlways", "_b", "fillPaddingY", "windowHeight", "windowWidth", "avliableWidth", "avliableHeight", "absX", "absY", "xOverflow", "yOverflow", "ox", "maxSubWidth", "oy", "maxSubHeight", "_hoisted_2", "minWidth", "args", "_createElementVNode", "_normalizeClass", "_createCommentVNode", "_Fragment", "_renderList", "_createBlock", "_component_ContextMenuSeparator", "_component_ContextMenuItem", "_createSlots", "_withCtx", "_createVNode", "_component_ContextSubMenu", "_withDirectives", "$event", "_vShow", "slots", "useSlots", "submenuInstance", "show", "openMenu", "removeBodyEvents", "watch", "instance", "closeMenu", "isClosed", "closed", "installBodyEvents", "fromItem", "onBodyClick", "onBodyScroll", "onMenuKeyDown", "currentOpenedMenu", "handled", "_c", "_d", "_e", "_f", "_g", "_i", "_h", "_j", "_l", "_k", "_m", "checkTargetAndClose", "target", "name", "params", "renderSlot", "h", "_sfc_main$3", "ctx", "menuRef", "isNew", "Teleport", "ContextSubMenuWrapperConstructor", "_sfc_main$2", "adjustSubMenuPosition", "maxWidth", "adjustSubMenuPositionValue", "subMenuRef", "itemRef", "ContextMenuItemConstructor", "ContextSubMenuConstructor", "initInstance", "customSlots", "render", "$contextmenu", "Inst", "app", "ContextMenuConstructor", "ContextMenuGroupConstructor", "ContextMenuSeparatorConstructor", "_hoisted_5", "menuBarContent", "menuBarActive", "menuActive", "onFocus", "onBlur", "currentMenu", "currentMenuIndex", "showNextSubMenu", "showPrevSubMenu", "getMenuShowPos", "ele", "showDirection", "ContextMenu", "showAllSubMenu", "onItemClick", "onItemEnter"]
}

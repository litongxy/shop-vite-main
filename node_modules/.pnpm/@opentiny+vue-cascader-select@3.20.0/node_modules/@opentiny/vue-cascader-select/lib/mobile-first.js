import { renderless as renderless$1, api as api$1 } from '@opentiny/vue-renderless/cascader-select/vue';
import { defineComponent, $prefix, $props, setup, props } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/cascader-select/column';
import { openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, Fragment, renderList, toDisplayString, createCommentVNode, resolveComponent, createVNode, withCtx, renderSlot, withModifiers, createTextVNode } from 'vue';
import ActionSheet from '@opentiny/vue-action-sheet';
import Button from '@opentiny/vue-button';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var classes = {
  "header-item": "cursor-pointer px-4 flex items-center justify-center min-w-[50px] h-full text-sm",
  "picker-column": "flex relative before:content-[''] before:absolute before:top-1/2 before:h-[var(--lineHeight)] before:w-full before:border-t before:border-b before:border-color-bg-3 before:scale-90 before:-translate-y-1/2",
  "picker-columnitem": "flex-1 h-full relative",
  "picker-bar": "flex h-12 items-center justify-between",
  "col-list": "relative block w-full h-full overflow-hidden text-center scrolling-touch",
  "col-roller": "absolute block top-1/2 w-full z1 -translate-y-1/2 [transform-style:preserve-3d] h-[var(--lineHeight)]",
  "col-roller-item": "block [backface-visibility:hidden] absolute top-0 w-full h-9 leading-9 text-color-text-primary truncate",
  "col-item-tile": "block text-center w-full truncate",
  "col-roller-mask": "absolute w-full h-full block [background-image:linear-gradient(180deg,rgba(255,255,255,0.9),rgba(255,255,255,0.4)),linear-gradient(0deg,rgba(255,255,255,0.9),rgba(255,255,255,0.4))] [background-position:top,bottom] bg-no-repeat z-1"
};
var _sfc_main$1 = defineComponent({
  name: $prefix + "CascaderSelectColumn",
  props: _extends({}, $props, {
    // 当前选中项
    value: [String, Number],
    defaultValue: [String, Number],
    columnsType: String,
    column: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    // 是否开启3D效果
    threeDimensional: {
      type: Boolean,
      default: true
    },
    swipeDuration: {
      type: [Number, String],
      default: 1e3
    },
    visibleOptionNum: {
      type: [Number, String],
      default: 7
    },
    optionHeight: {
      type: [Number, String],
      default: 36
    },
    fieldNames: {
      type: Object,
      default: function _default2() {
        return {};
      }
    },
    disabled: Boolean,
    visible: Boolean,
    textColor: {
      type: Object,
      default: function _default3() {
        return {};
      }
    }
  }),
  emits: ["click", "change"],
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      classes,
      mono: true
    });
  }
});
function _sfc_render$1(_ctx, _cache, $props2, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-cascader-picker__list",
      class: normalizeClass(_ctx.gcls("col-list")),
      onTouchstart: _cache[1] || (_cache[1] = function() {
        return _ctx.onTouchStart && _ctx.onTouchStart.apply(_ctx, arguments);
      }),
      onTouchmove: _cache[2] || (_cache[2] = function() {
        return _ctx.onTouchMove && _ctx.onTouchMove.apply(_ctx, arguments);
      }),
      onTouchend: _cache[3] || (_cache[3] = function() {
        return _ctx.onTouchEnd && _ctx.onTouchEnd.apply(_ctx, arguments);
      })
    },
    [createElementVNode(
      "div",
      {
        ref: "roller",
        "data-tag": "tiny-cascader-picker-roller",
        class: normalizeClass(_ctx.gcls("col-roller")),
        style: normalizeStyle(_ctx.threeDimensional ? _ctx.state.touchRollerStyle : _ctx.state.touchTileStyle),
        onTransitionend: _cache[0] || (_cache[0] = function() {
          return _ctx.stopMomentum && _ctx.stopMomentum.apply(_ctx, arguments);
        })
      },
      [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.column, function(item, index) {
          var _ctx$m, _ctx$m2, _ctx$m3, _ctx$m4;
          return openBlock(), createElementBlock("div", {
            key: item[_ctx.fieldNames.value] || index
          }, [item && item[_ctx.fieldNames.text] && _ctx.threeDimensional ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              "data-tag": "tiny-cascader-picker-roller-item",
              class: normalizeClass(_ctx.m(_ctx.gcls("col-roller-item"), {
                "invisible opacity-0": _ctx.isHidden(index + 1)
              }, {
                "text-color-brand": item === _ctx.column[_ctx.state.currIndex - 1]
              }, {
                "text-color-icon-disabled": item === _ctx.column[_ctx.state.currIndex - 1] && _ctx.disabled
              })),
              style: normalizeStyle(_ctx.setRollerStyle(index + 1))
            },
            toDisplayString(item[_ctx.fieldNames.text]),
            7
            /* TEXT, CLASS, STYLE */
          )) : createCommentVNode("v-if", true), item && item[_ctx.fieldNames.text] && !_ctx.threeDimensional ? (openBlock(), createElementBlock(
            "div",
            {
              key: 1,
              "data-tag": "tiny-cascader-picker-roller-item-tile",
              class: normalizeClass(_ctx.m(_ctx.gcls("col-item-tile"), _ctx.textColor.default || "text-color-text-primary", (_ctx$m = {}, _ctx$m[_ctx.textColor.third || "text-color-icon-placeholder"] = _ctx.OptionStyle(item, _ctx.column, 2), _ctx$m), (_ctx$m2 = {}, _ctx$m2[_ctx.textColor.second || "text-color-icon-secondary"] = _ctx.OptionStyle(item, _ctx.column, 1), _ctx$m2), (_ctx$m3 = {}, _ctx$m3[_ctx.textColor.first || "text-color-icon-focus"] = _ctx.OptionStyle(item, _ctx.column, 0), _ctx$m3), (_ctx$m4 = {}, _ctx$m4[_ctx.textColor.disabled || "text-color-icon-disabled"] = _ctx.OptionStyle(item, _ctx.column, 0) && _ctx.disabled, _ctx$m4))),
              style: normalizeStyle({
                height: _ctx.pxCheck(_ctx.optionHeight),
                lineHeight: _ctx.pxCheck(_ctx.optionHeight)
              })
            },
            toDisplayString(item[_ctx.fieldNames.text]),
            7
            /* TEXT, CLASS, STYLE */
          )) : createCommentVNode("v-if", true)]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))],
      38
      /* CLASS, STYLE, NEED_HYDRATION */
    ), createElementVNode(
      "div",
      {
        "data-tag": "tiny-cascader-picker-roller-mask",
        class: normalizeClass(_ctx.gcls("col-roller-mask")),
        style: normalizeStyle(_ctx.state.maskStyles)
      },
      null,
      6
      /* CLASS, STYLE */
    )],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var PickerColumn = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
var _sfc_main = defineComponent({
  components: {
    PickerColumn,
    TinyActionSheet: ActionSheet,
    TinyButton: Button
  },
  emits: ["cancel", "change", "confirm", "update:modelValue", "update:visible"],
  props: [].concat(props, ["modelValue", "options", "threeDimensional", "swipeDuration", "visibleOptionNum", "optionHeight", "fieldNames", "visible", "valueType", "valueField", "textField", "childrenField", "disabled", "textColor", "lockScroll", "customClass", "panelCustomClass", "type", "defaultValue"]),
  setup: function setup2(props2, context) {
    return setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1,
      classes
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-mobile-cascader-select"
};
var _hoisted_2 = {
  "data-tag": "tiny-cascader-select-picker",
  class: "relative text-sm"
};
var _hoisted_3 = {
  class: "w-full h-11 mt-4 flex justify-center items-center",
  "data-tag": "tiny-mobile-cascader-select-button"
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_picker_column = resolveComponent("picker-column");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_action_sheet, {
    "custom-class": _ctx.m("rounded-t-lg bg-color-bg-1", _ctx.customClass),
    "lock-scroll": _ctx.lockScroll,
    visible: _ctx.state.actionSheetVisible,
    "onUpdate:visible": _cache[1] || (_cache[1] = function($event) {
      return _ctx.state.actionSheetVisible = $event;
    })
  }, {
    "header-left": withCtx(function() {
      return [renderSlot(_ctx.$slots, "header-left")];
    }),
    default: withCtx(function() {
      return [createElementVNode("div", {
        "data-tag": "tiny-mobile-cascader-select-body",
        class: "w-full h-max rounded-t-lg bg-color-bg-1 select-none overflow-hidden",
        onClick: _cache[0] || (_cache[0] = withModifiers(function() {
        }, ["stop"]))
      }, [createElementVNode(
        "div",
        {
          "data-tag": "tiny-mobile-cascader-select-selectpanel",
          ref: "selectPanel",
          class: normalizeClass(_ctx.m("w-full h-max grid", _ctx.panelCustomClass))
        },
        [createElementVNode("div", _hoisted_2, [renderSlot(_ctx.$slots, "top"), createElementVNode(
          "div",
          {
            "data-tag": "tiny-cascader-picker__column",
            class: normalizeClass(_ctx.gcls("picker-column")),
            style: normalizeStyle(_ctx.columnStyle)
          },
          [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(_ctx.columnsList, function(column, columnIndex) {
              return openBlock(), createElementBlock(
                "div",
                {
                  key: columnIndex,
                  "data-tag": "tiny-cascader-picker__columnitem",
                  class: normalizeClass(_ctx.gcls("picker-columnitem"))
                },
                [columnIndex > 0 ? renderSlot(_ctx.$slots, "split", {
                  key: 0
                }) : createCommentVNode("v-if", true), createVNode(_component_picker_column, {
                  ref_for: true,
                  ref: "swipeRef",
                  column,
                  disabled: _ctx.isDisabled,
                  "text-color": _ctx.textColor,
                  "columns-type": _ctx.columnsType,
                  "field-names": _ctx.columnFieldNames,
                  value: _ctx.defaultValues[columnIndex],
                  "default-value": _ctx.defaultValue[columnIndex],
                  "three-dimensional": _ctx.threeDimensional,
                  "swipe-duration": _ctx.swipeDuration,
                  "visible-option-num": _ctx.visibleOptionNum,
                  "option-height": _ctx.optionHeight,
                  visible: _ctx.state.actionSheetVisible,
                  onChange: function onChange(option) {
                    _ctx.changeHandler(columnIndex, option);
                  }
                }, null, 8, ["column", "disabled", "text-color", "columns-type", "field-names", "value", "default-value", "three-dimensional", "swipe-duration", "visible-option-num", "option-height", "visible", "onChange"])],
                2
                /* CLASS */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))],
          6
          /* CLASS, STYLE */
        ), renderSlot(_ctx.$slots, "default")])],
        2
        /* CLASS */
      ), createElementVNode("div", _hoisted_3, [createVNode(_component_tiny_button, {
        type: "primary",
        size: "large",
        "custom-class": _ctx.m("h-10 sm:h-10 w-full sm:w-auto mx-4 sm:mx-0 flex justify-center items-center", _ctx.isDisabled ? "bg-color-icon-disabled" : "bg-color-icon-focus"),
        disabled: _ctx.isDisabled,
        onClick: _ctx.confirm
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.button.confirm")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["custom-class", "disabled", "onClick"])])])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["custom-class", "lock-scroll", "visible"])]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

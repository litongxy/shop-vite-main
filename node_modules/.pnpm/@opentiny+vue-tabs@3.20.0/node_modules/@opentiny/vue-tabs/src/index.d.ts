export declare const $constants: {
    TAB_ITEM: string;
};
export declare const tabsProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            TAB_ITEM: string;
        };
    };
    tabStyle: StringConstructor;
    activeName: StringConstructor;
    withClose: BooleanConstructor;
    withAdd: BooleanConstructor;
    size: StringConstructor;
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {};
    editable: BooleanConstructor;
    position: {
        type: StringConstructor;
        default: string;
    };
    beforeLeave: FunctionConstructor;
    stretch: BooleanConstructor;
    showMoreTabs: BooleanConstructor;
    swipeable: {
        type: BooleanConstructor;
        default: boolean;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    dropConfig: {
        type: ObjectConstructor;
        default: () => null;
    };
    separator: BooleanConstructor;
    showExpandTabs: BooleanConstructor;
    expandTabsTitle: StringConstructor;
    expandTabsMode: StringConstructor;
    tooltipConfig: (StringConstructor | ObjectConstructor)[];
    optimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    beforeClose: FunctionConstructor;
    overflowTitle: BooleanConstructor;
    titleWidth: StringConstructor;
    moreShowAll: BooleanConstructor;
    panelMaxHeight: StringConstructor;
    panelWidth: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            TAB_ITEM: string;
        };
    };
    tabStyle: StringConstructor;
    activeName: StringConstructor;
    withClose: BooleanConstructor;
    withAdd: BooleanConstructor;
    size: StringConstructor;
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {};
    editable: BooleanConstructor;
    position: {
        type: StringConstructor;
        default: string;
    };
    beforeLeave: FunctionConstructor;
    stretch: BooleanConstructor;
    showMoreTabs: BooleanConstructor;
    swipeable: {
        type: BooleanConstructor;
        default: boolean;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    dropConfig: {
        type: ObjectConstructor;
        default: () => null;
    };
    separator: BooleanConstructor;
    showExpandTabs: BooleanConstructor;
    expandTabsTitle: StringConstructor;
    expandTabsMode: StringConstructor;
    tooltipConfig: (StringConstructor | ObjectConstructor)[];
    optimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    beforeClose: FunctionConstructor;
    overflowTitle: BooleanConstructor;
    titleWidth: StringConstructor;
    moreShowAll: BooleanConstructor;
    panelMaxHeight: StringConstructor;
    panelWidth: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            TAB_ITEM: string;
        };
    };
    tabStyle: StringConstructor;
    activeName: StringConstructor;
    withClose: BooleanConstructor;
    withAdd: BooleanConstructor;
    size: StringConstructor;
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {};
    editable: BooleanConstructor;
    position: {
        type: StringConstructor;
        default: string;
    };
    beforeLeave: FunctionConstructor;
    stretch: BooleanConstructor;
    showMoreTabs: BooleanConstructor;
    swipeable: {
        type: BooleanConstructor;
        default: boolean;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    dropConfig: {
        type: ObjectConstructor;
        default: () => null;
    };
    separator: BooleanConstructor;
    showExpandTabs: BooleanConstructor;
    expandTabsTitle: StringConstructor;
    expandTabsMode: StringConstructor;
    tooltipConfig: (StringConstructor | ObjectConstructor)[];
    optimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    beforeClose: FunctionConstructor;
    overflowTitle: BooleanConstructor;
    titleWidth: StringConstructor;
    moreShowAll: BooleanConstructor;
    panelMaxHeight: StringConstructor;
    panelWidth: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    position: string;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    popperAppendToBody: boolean;
    activeColor: string;
    editable: boolean;
    separator: boolean;
    withClose: boolean;
    withAdd: boolean;
    stretch: boolean;
    showMoreTabs: boolean;
    swipeable: boolean;
    dropConfig: Record<string, any>;
    showExpandTabs: boolean;
    optimized: boolean;
    overflowTitle: boolean;
    moreShowAll: boolean;
}, {}>;
export default _default;

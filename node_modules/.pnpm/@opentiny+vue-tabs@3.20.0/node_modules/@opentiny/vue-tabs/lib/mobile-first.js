import { createVNode, resolveComponent, openBlock, createBlock, withCtx, createElementVNode, renderSlot } from 'vue';
import { renderless as renderless$4, api as api$4 } from '@opentiny/vue-renderless/tabs-mf/vue';
import { defineComponent, $props, setup, h, props, hooks, $prefix, isVue2, KeepAlive } from '@opentiny/vue-common';
import Carousel from '@opentiny/vue-carousel';
import { renderless as renderless$2, api as api$2 } from '@opentiny/vue-renderless/tabs-mf/vue-bar';
import { IconClose, IconPopup, IconPlus } from '@opentiny/vue-icon';
import Dropdown from '@opentiny/vue-dropdown';
import DropdownMenu from '@opentiny/vue-dropdown-menu';
import DropdownItem from '@opentiny/vue-dropdown-item';
import { renderless as renderless$1, api as api$1 } from '@opentiny/vue-renderless/tabs-mf/vue-nav';
import { renderless, api } from '@opentiny/vue-renderless/tabs-mf/vue-nav-item';
import { renderless as renderless$3, api as api$3 } from '@opentiny/vue-renderless/tabs-mf/vue-swipe';
import CarouselItem from '@opentiny/vue-carousel-item';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var _sfc_main$5 = defineComponent({
  props: _extends({}, $props, {
    title: String,
    name: String,
    selected: Boolean,
    navItem: Object
  }),
  components: {
    IconClose: IconClose()
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      mono: true
    });
  },
  render: function render() {
    var state = this.state, handleNavItemClick = this.handleNavItemClick, selected = this.selected, title = this.title, handleNavItemClose = this.handleNavItemClose, navItem = this.navItem;
    var settingClick = function settingClick2(e) {
      return e.stopPropagation();
    };
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-nav-item"
      },
      class: ["w-max h-11 sm:h-10 inline-flex flex-col justify-center group", "first:ml-3 last:mr-3 hover:cursor-pointer sm:first:pl-0 sm:last:pr-0 sm:first:ml-0 sm:last:mr-0", state.separator ? "mx-3.5 [&:last-of-type>div>span:last-of-type]:hidden [&:not(:last-of-type)]:mr-px" : "mx-3"],
      on: {
        click: handleNavItemClick
      }
    }, [h("span", {
      class: ["text-base sm:text-sm leading-6 sm:leading-5.5 group-hover:text-color-brand", state.tabSize === "large" ? "min-w-[theme(spacing.8)]" : "min-w-[theme(spacing.7)]", selected ? "text-color-brand font-bold" : "text-color-text-primary"],
      style: state.tabSize === "large" ? "font-size: 1rem" : ""
    }, [navItem.slotTitle ? navItem.slotTitle(navItem) : h("span", {}, title), navItem.slotSetting || state.withClose ? h("span", {
      class: ["pl-2 inline-flex translate-y-0.5 text-xs fill-color-icon-primary", "hover:fill-color-icon-hover focus:fill-color-icon-focus", navItem.slotSetting ? "-translate-y-0.5" : ""],
      on: {
        click: navItem.slotSetting ? settingClick : handleNavItemClose
      }
    }, [navItem.slotSetting ? navItem.slotSetting(navItem) : h(IconClose())]) : null, state.separator ? h("span", {
      attrs: {
        "data-tag": "tiny-tab-nav-item-separator"
      },
      class: "relative left-3.5 inline-flex bg-color-border-separator w-px h-3"
    }) : null])]);
  }
});
var _sfc_main$4 = defineComponent({
  props: _extends({}, $props, {
    customClass: {
      type: String,
      default: ""
    }
  }),
  setup: function setup2(props2, context) {
    return setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1,
      mono: true
    });
  },
  render: function render2() {
    var state = this.state, customClass = this.customClass, m = this.m;
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-nav"
      },
      class: m("relative", customClass)
    }, [].concat(state.navItems.map(function(item) {
      return typeof item.visible === "undefined" || item.visible ? h(_sfc_main$5, {
        key: item.name,
        props: {
          title: item.title,
          name: item.name,
          selected: item.selected,
          navItem: item
        }
      }) : null;
    }), [h("div", {
      class: m("absolute bg-color-brand transition-all duration-300 z-20 rounded-full bottom-px h-px py-px box-content", {
        "hidden": !state.currentNav
      }),
      style: {
        width: state.currentWidth + "px",
        left: state.currentPosition + "px"
      }
    })]));
  }
});
var _sfc_main$3 = defineComponent({
  props: [].concat(props),
  setup: function setup3(props2, context) {
    return setup({
      props: props2,
      context,
      renderless: renderless$2,
      api: api$2,
      mono: true
    });
  },
  render: function render3() {
    var state = this.state, handleClickDropdownItem = this.handleClickDropdownItem, key = this.key, emitAdd = this.emitAdd;
    var tabNavClass = state.moreList.length > 0 ? "w-max inline-block" : "w-full inline-flex justify-around sm:w-max sm:inline-block";
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-bar"
      },
      class: "w-full h-11 sm:h-10 overflow-hidden relative"
    }, [h("div", {
      ref: "scroll",
      class: ["scrollbar-size-0 w-full overflow-x-auto whitespace-nowrap", "before:block before:absolute before:w-0 before:h-11 sm:before:h-10", "after:block after:absolute after:top-0 after:right-0 after:w-0 after:h-11 sm:after:h-10", "before:shadow-[1px_-10px_4px_4px_rgba(0,0,0,0.08)] after:shadow-[-1px_-10_4px_4px_rgba(0,0,0,0.08)]", !state.moreLeft && !state.moreRight ? "before:hidden after:hidden" : "", !state.moreLeft ? "before:hidden" : "", !state.moreRight ? "after:hidden" : ""]
    }, [h(_sfc_main$4, {
      ref: "tabNav",
      props: {
        customClass: tabNavClass
      },
      style: "margin-right:" + state.navPaddingRight + "px"
    })]), h("div", {
      class: [state.separator ? "sm:invisible" : "invisible sm:visible absolute w-full h-px bottom-px bg-color-border-separator z-10"]
    }), h("div", {
      ref: "tabMore",
      attrs: {
        "data-tag": "tiny-tab-more"
      },
      class: ['inline-flex w-max h-11 sm:h-10 absolute top-0 right-0 z-20 bg-color-bg-1 before:content-[""] before:block before:absolute before:bg-color-border-separator before:h-px before:w-full before:bottom-px', state.moreRight ? "shadow-[-1px_-10px_4px_4px_rgba(0,0,0,0.08)]" : ""]
    }, [state.moreList.length ? h("div", {
      class: "hidden sm:inline-block w-11 h-11 sm:h-10 text-sm cursor-pointer"
    }, [h("span", {
      class: "inline-flex w-full h-full flex-col justify-center items-center"
    }, [h(Dropdown, {
      on: {
        "item-click": handleClickDropdownItem
      },
      props: {
        showIcon: false
      }
    }, [h("span", {}, [h(IconPopup(), {
      class: "fill-color-icon-focus text-base"
    })]), h(DropdownMenu, {
      slot: "dropdown",
      props: {
        popperClass: "max-h-[theme(spacing.80)] overflow-x-hidden overflow-y-auto"
      }
    }, state.moreOptions.map(function(opt) {
      return h(DropdownItem, {
        key: key(opt),
        props: {
          itemData: opt.name
        }
      }, [opt.slotTitle ? opt.slotTitle() : opt.title]);
    }))])])]) : null, state.withAdd ? h("div", {
      attrs: {
        "data-tag": "tiny-tab-add"
      },
      class: "hidden sm:inline-block w-11 h-11 sm:h-10 text-sm cursor-pointer",
      on: {
        click: emitAdd
      }
    }, [h("span", {
      class: "inline-flex w-full h-full flex-col justify-center items-center"
    }, [h(IconPlus(), {
      class: "fill-color-icon-primary hover:fill-color-icon-focus"
    })])]) : null, state.slotCustom ? h("div", {
      attrs: {
        "data-tag": "tiny-tab-custom"
      },
      class: "hidden sm:inline-block w-max h-11 sm:h-10 text-sm"
    }, [h("span", {
      class: "inline-flex w-max h-full flex-col justify-center"
    }, [state.slotCustom()])]) : null])]);
  }
});
var _sfc_main$2 = defineComponent({
  props: _extends({}, $props, {
    item: {
      type: Object,
      required: true
    }
  }),
  provide: function provide() {
    return {
      TabStatus: hooks.toRef(this.item, "selected")
    };
  },
  setup: function setup4(props2) {
    if (props2.item) {
      props2.item.rendered = true;
    }
  },
  render: function render4() {
    var slots = "$scopedSlots" in this ? this.$scopedSlots : this.$slots;
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-panel"
      }
    }, typeof slots.default === "function" && slots.default());
  }
});
var _sfc_main$1 = defineComponent({
  name: $prefix + "TabSwipe",
  components: {
    TinyCarouselItem: CarouselItem
  },
  props: _extends({}, $props, {
    stopThreshold: {
      type: Number,
      default: 10
    }
  }),
  setup: function setup5(props2, context) {
    return setup({
      props: props2,
      context,
      renderless: renderless$3,
      api: api$3,
      mono: true
    });
  }
});
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_tiny_carousel_item = resolveComponent("tiny-carousel-item");
  return openBlock(), createBlock(_component_tiny_carousel_item, {
    "data-tag": "tiny-tab-swipe",
    class: "w-full !h-fit"
  }, {
    default: withCtx(function() {
      return [createElementVNode(
        "div",
        {
          ref: "touchContainer",
          "data-tiny-touch-simulate-container": "",
          class: "w-full overflow-auto scrollbar-size-0",
          onTouchstartPassive: _cache[0] || (_cache[0] = function() {
            return _ctx.onTouchstart && _ctx.onTouchstart.apply(_ctx, arguments);
          }),
          onTouchmovePassive: _cache[1] || (_cache[1] = function() {
            return _ctx.onTouchmove && _ctx.onTouchmove.apply(_ctx, arguments);
          })
        },
        [renderSlot(_ctx.$slots, "default")],
        544
        /* NEED_HYDRATION, NEED_PATCH */
      )];
    }),
    _: 3
    /* FORWARDED */
  });
}
var TabSwipe = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render]]);
var _sfc_main = /* @__PURE__ */ defineComponent({
  props: [].concat(props, ["activeName", "modelValue", "size", "withClose", "withAdd", "beforeLeave", "separator", "optimized", "beforeClose", "swipeable"]),
  emits: ["update:activeName", "update:modelValue", "click", "edit", "close"],
  components: {
    TabBar: _sfc_main$3
  },
  setup: function setup6(props2, context) {
    return setup({
      props: props2,
      context,
      renderless: renderless$4,
      api: api$4
    });
  },
  render: function render5() {
    var state = this.state, slots = this.slots, optimized = this.optimized, modelValue = this.modelValue, beforeCarouselSwipe = this.beforeCarouselSwipe;
    var runFnuc = function runFnuc2(fn) {
      return typeof fn === "function" && fn() || "";
    };
    var hiddens = createVNode("div", {
      "data-tag": "tiny-tabs-hidden",
      "class": "hidden"
    }, [runFnuc(slots.default)]);
    var tabPanel = [];
    var tabWrapper;
    if (optimized) {
      var defaultSlot, vnodes;
      if (state.currentItem) {
        defaultSlot = isVue2 ? state.currentItem.vm.$scopedSlots.default : state.currentItem.slotDefault;
      }
      vnodes = [];
      state.items.forEach(function(item) {
        if (item !== state.currentItem) {
          return;
        }
        vnodes.push(isVue2 ? h(_sfc_main$2, {
          props: {
            item
          },
          key: state.currentItem.name,
          scopedSlots: {
            default: function _default() {
              return runFnuc(defaultSlot);
            }
          }
        }) : h(_sfc_main$2, {
          props: {
            item
          },
          key: state.currentItem.name
        }, function() {
          return runFnuc(defaultSlot);
        }));
      });
      tabPanel.push(isVue2 ? createVNode(KeepAlive, null, [vnodes]) : h(KeepAlive, {}, function() {
        return vnodes;
      }));
    } else {
      state.items.forEach(function(item, i) {
        if (item.lazy && item !== state.currentItem && !item.rendered) {
          return;
        }
        var itemDefSlot = isVue2 ? item.vm.$scopedSlots.default : item.slotDefault;
        var props2 = {
          style: {
            display: item === state.currentItem || state.swipeable ? "block" : "none"
          },
          attrs: {
            "data-tag": "tiny-tab-panel"
          },
          class: "w-full",
          props: {
            item
          },
          key: item.name
        };
        var tabItem = isVue2 ? h(_sfc_main$2, _extends({
          scopedSlots: {
            default: function _default() {
              return runFnuc(itemDefSlot);
            }
          }
        }, props2)) : h(_sfc_main$2, props2, function() {
          return runFnuc(itemDefSlot);
        });
        var tabSwipe;
        if (state.swipeable) {
          tabSwipe = isVue2 ? h(TabSwipe, {
            ref: "tabSwipe" + i,
            scopedSlots: {
              default: function _default() {
                return [tabItem];
              }
            }
          }) : h(TabSwipe, {
            ref: "tabSwipe" + i
          }, function() {
            return [tabItem];
          });
        }
        tabPanel.push(state.swipeable ? tabSwipe : tabItem);
      });
      if (state.swipeable) {
        var initialIndex = 0;
        if (state.items.length > 0 && modelValue) {
          initialIndex = state.items.map(function(item) {
            return item.name;
          }).indexOf(modelValue);
        }
        tabWrapper = h(Carousel, {
          ref: "swipe",
          props: {
            loop: false,
            swipeable: true,
            lite: true,
            initialIndex,
            beforeSwipe: beforeCarouselSwipe,
            height: state.maxTabSwipeHeight + "px"
          },
          class: '!rounded-none [&_>[data-tag="tiny-carousel-block"]]:!rounded-none'
        }, tabPanel);
      }
    }
    return createVNode("div", {
      "data-tag": "tiny-tabs"
    }, [hiddens, createVNode(resolveComponent("tab-bar"), {
      "ref": "tabbar"
    }, null), state.swipeable ? tabWrapper : tabPanel]);
  }
});

export { _sfc_main as default };

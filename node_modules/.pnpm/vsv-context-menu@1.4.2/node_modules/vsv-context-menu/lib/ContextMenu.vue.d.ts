import { PropType, VNode } from 'vue';
import { MenuOptions } from './ContextMenuDefine';

export type GlobalHasSlot = (name: string) => boolean;
export type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;
/**
 * Context menu component
 */
declare const _default: import('vue').DefineComponent<{
    /**
     * Menu options
     */
    options: {
        type: PropType<MenuOptions>;
        default: null;
    };
    /**
     * Show menu?
     */
    show: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, ("close" | "update:show")[], "close" | "update:show", import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    /**
     * Menu options
     */
    options: {
        type: PropType<MenuOptions>;
        default: null;
    };
    /**
     * Show menu?
     */
    show: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    onClose?: ((...args: any[]) => any) | undefined;
    "onUpdate:show"?: ((...args: any[]) => any) | undefined;
}, {
    options: MenuOptions;
    show: boolean;
}, {}>;
export default _default;

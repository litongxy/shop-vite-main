{"version":3,"file":"vue3-context-menu.es.js","sources":["../library/ContextMenuMutex.ts","../library/ContextMenuDefine.ts","../library/ContextMenuUtils.ts","../library/ContextMenuIconCheck.vue","../library/ContextMenuIconRight.vue","../library/ContextMenuItem.vue","../library/ContextMenuSeparator.vue","../library/ContextSubMenu.vue","../library/ContextSubMenuWrapper.vue","../library/ContextMenu.vue","../library/ContextMenuGroup.vue","../library/ContextMenuInstance.ts","../library/MenuBarIconMenu.vue","../library/MenuBar.vue"],"sourcesContent":["import type { ContextMenuInstance } from \"./ContextMenuDefine\";\n\nlet currentOpenedContextMenu : ContextMenuInstance|null = null;\n\n\nexport function checkOpenedContextMenu() : boolean {\n  return currentOpenedContextMenu !== null;\n}\nexport function addOpenedContextMenu(inst: ContextMenuInstance) : void {\n  if (currentOpenedContextMenu)\n    closeContextMenu();\n  currentOpenedContextMenu = inst;\n}\nexport function removeOpenedContextMenu(inst: ContextMenuInstance) : void {\n  if (inst === currentOpenedContextMenu)\n    currentOpenedContextMenu = null;\n}  \n/**\n * Close the currently open menu\n */\nexport function closeContextMenu() : void {\n  if (currentOpenedContextMenu) {\n    currentOpenedContextMenu.closeMenu();\n    currentOpenedContextMenu = null;\n  }\n}\n","import type { Ref, SVGAttributes, TransitionProps, VNode } from \"vue\";\n\n/**\n * Default config\n */\nexport const MenuConstOptions = {\n  defaultDirection: 'br',\n  defaultMinWidth: 100,\n  defaultMaxWidth: 600,\n  defaultZindex: 100,\n  defaultZoom: 1,\n  defaultAdjustPadding: {\n    x: 0,\n    y: 10.\n  },\n}\n\n/**\n * ContextMenu Component ref interface,\n * You can use `(this.$refs.myMenu as ContextMenuInstance)` or `const mymenu = ref<ContextMenuInstance>()`\n */\nexport interface ContextMenuInstance {\n  /**\n   * Close this menu.\n   * @param fromItem The last clicked menu item, will pass to `MenuOptions.onClose` callback, if user does not click any item, can be `undefined`.\n   */\n  closeMenu(fromItem?: MenuItem|undefined): void;\n  /**\n   * Check if the menu is currently closed.\n   */\n  isClosed(): boolean;\n  /**\n   * Get current Menu root instance.\n   * @returns Return ContextSubMenuInstance of root, return undefined if menu is not showing.\n   */\n  getMenuRef(): ContextSubMenuInstance|undefined;\n  /**\n   * Get root menu size.\n   * @returns Return root menu size in pixel, return all zero if menu is not showing.\n   */\n  getMenuDimensions(): { width: number, height: number };\n}\n\n/**\n * Define that Submenu holder component exposed props\n * \n * Can get by `ContextMenuInstance.getMenuRef`.\n */\nexport interface ContextSubMenuInstance \n{\n  /**\n   * Get Root element of this submenu\n   */\n  getSubmenuRoot: () => HTMLElement | undefined;\n  /**\n   * Get Inner container element of this submenu\n   */\n  getMenu: () => HTMLElement | undefined;\n  /**\n   * Get child menu item by array index, Only after the parent submenu is displayed can the child items be retrieved.\n   * @param index Array index \n   * @returns You can obtain control instance `MenuItemContext according to the index to control menu items.\n   */\n  getChildItem: (index: number) => MenuItemContext | undefined;\n  /**\n   * Get submenu root element size.\n   * @returns Return root menu size in pixel, return all zero if menu is not showing.\n   */\n  getMenuDimensions(): { width: number, height: number };\n  /**\n   * Get submenu current scroll value (same as element.scrollTop)\n   * @returns \n   */\n  getScrollValue: () => number,\n  /**\n   * Set submenu current scroll value (same as element.scrollTop)\n   * @returns \n   */\n  setScrollValue: (v: number) => void,\n  /**\n   * Get submenu max scroll height (same as element.scrollHeight)\n   * @returns \n   */\n  getScrollHeight: () => number,\n  /**\n   * Get max submenu height\n   * @returns \n   */\n  getMaxHeight: () => number,\n  /**\n   * Get submenu current position (Relative to the parent item)\n   * @returns \n   */\n  getPosition: () => { x: number, y: number },\n  /**\n   * Set submenu current position (Relative to the parent item)\n   * @returns \n   */\n  setPosition: (x: number, y: number) => void;\n}\n\n/**\n * Ref define of ContextMenuGroup\n */\nexport interface ContextMenuGroupRef\n{\n  /**\n   * Get ContextSubMenuInstance of this group\n   */\n  getSubMenuRef(): ContextSubMenuInstance;\n  /**\n   * Get MenuItemContext of this item.\n   */\n  getMenuItemRef(): ContextSubMenuInstance;\n}\n\n/**\n * The internal info context for menu item\n */\nexport interface MenuItemContext {\n  /**\n   * Get current showing submenu instance.\n   * @returns Return ContextSubMenuInstance of current submenu, return undefined if menu is not showing.\n   */\n  getSubMenuInstance: () => ContextSubMenuInstance|undefined;\n  /**\n   * Show submenu of this item.\n   * @returns \n   */\n  showSubMenu: () => boolean,\n  /**\n   * Force hide submenu of this item.\n   */\n  hideSubMenu: () => void,\n  /**\n   * Get html Element of this item.\n   */\n  getElement: () => HTMLElement|undefined,\n  /**\n   * Check is this item disabled or hidden.\n   * @returns \n   */\n  isDisabledOrHidden: () => boolean,\n\n  focus: () => void,\n  blur: () => void,\n  click: (e: MouseEvent|KeyboardEvent) => void,\n}\n\nexport type MenuPopDirection = 'br'|'b'|'bl'|'tr'|'t'|'tl'|'l'|'r';\nexport type MenuChildren = MenuItem[];\n\n\nexport interface MenuOptions {\n  /**\n   * The items for this menu.\n   */\n  items\t?:\tMenuItem[];\n  /**\n   * Menu display x position.\n   */\n  x: number;\n  /**\n   * Menu display y position.\n   */\n  y: number;\n  /**\n  * X-coordinate offset of submenu and parent menu.\n  */\n  xOffset\t?: number;\n  /**\n  * Y-coordinate offset of submenu and parent menu.\n  */\n  yOffset ?: number;\n  /**\n   * Set the mian menu pop-up direction relative to coordinates.\n   *\n   * Default is `'br'`, if `adjustPosition` is true then the menu will determine\n   * the pop-up direction based on its distance from the screen edge.\n   *\n   * @default 'br'\n   */\n  direction ?: MenuPopDirection,\n  /**\n   * The z-index of this menu.\n   */\n  zIndex ?: number;\n  /**\n   * The zoom of this menu.\n   */\n  zoom ?: number;\n  /**\n   * Custom menu class.\n   */\n  customClass\t?:\tstring;\n  /**\n   * Set whether users can use the mouse scroll wheel to scroll through long menus in the menu area.\n   *\n   * @default false\n   */\n  mouseScroll ?: boolean;\n  /**\n   * Determine whether the up/down buttons in the menu item require space holder.\n   * The purpose of this variable is because some menu themes add blank padding above and below the menu,\n   * which are just enough to place up/down buttons.\n   * If there is no blank padding in your custom menu theme, you can set this field to provide blank space for up/down buttons to prevent obscuring menu items.\n   *\n   * @default false\n   */\n  updownButtonSpaceholder?: boolean;\n  /**\n   * Theme for this menu. Default is 'default'\n   *\n   * |theme|explain|example image|\n   * |--|--|--|\n   * |`default`|Default theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-default.jpg)|\n   * |`default dark`|Default theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-default-dark.jpg)|\n   * |`flat`|Simple flat theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-flat.jpg)|\n   * |`flat dark`|Simple flat theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-flat-dark.jpg)|\n   * |`win10`|Win10 like theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-win10.jpg)|\n   * |`win10 dark`|Win10 like theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-win10-dark.jpg)|\n   * |`mac`|Mac like theme|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-mac.jpg)|\n   * |`mac dark`|Mac like theme with dark|![example-default-dark.jpg](https://raw.githubusercontent.com/imengyu/vue3-context-menu/main/screenshot/example-mac-dark.jpg)|\n   *\n   * You can write new theme in your own css,\n   * customize your theme by overriding the default styles, for example:\n   * ```scss\n   * .mx-context-menu.my-theme-name {\n      & {\n        //Here can override css vars\n        --mx-menu-background: #ececec;\n        --mx-menu-hover-background: #0165e1;\n      }\n\n      //Customize the style of the menu here\n      padding: 8px 0;\n      box-shadow: 0px 5px 7px 1px var(--mx-menu-shadow-color);\n      border: 1px solid var(--mx-menu-border-color);\n\n      //Customize the style of the menu item\n      .mx-context-menu-item {\n        border-radius: 5px;\n        margin: 0 6px;\n        padding: 3px 6px;\n      }\n    }\n   * ```\n   */\n  theme\t?: string;\n  /**\n   * If your element in menu item has this className, click it will ignore event.\n   */\n  ignoreClickClassName?: string,\n  /**\n   * Set should close menu when the user click on other places.\n   *\n   * @default true\n   */\n  clickCloseOnOutside ?: boolean;\n  /**\n   * If your element in menu item has this className, click it will ignore event and close hole menu.\n   */\n  clickCloseClassName?: string,\n  /**\n   * Custom icon library font class name. (global)\n   *\n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass ?:\tstring;\n  /**\n   * The Vue Transition props used when menu show or hide.\n   * @default undefined\n   */\n  menuTransitionProps ?: TransitionProps;\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (global)\n   *\n   * Default is true.\n   *\n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth ?: boolean;\n  /**\n   * Set whether the user can use keyboard keys to control the current menu.\n   *\n   * Default: true\n   *\n   * The control logic is consistent with the Windows right-click menu:\n   * * Escape : Close current menu\n   * * Enter : Click current menu item\n   * * ArrowDown : Select the down menu item\n   * * ArrowUp : Select the up menu item\n   * * ArrowLeft : Back previous submenu\n   * * ArrowRight : Open current menu item submenu\n   * * Home : Select the first menu item\n   * * End : Select the last menu item\n   */\n  keyboardControl ?: boolean;\n  /**\n   * Maximum width of main menu (in pixels)\n   */\n  maxWidth ?: number;\n  /**\n   * Minimum width of main menu (pixels)\n   */\n  minWidth ?: number;\n  /**\n   * Close when user scroll mouse ? Default is true.\n   */\n  closeWhenScroll ?: boolean;\n  /**\n   * Padding for submenu position adjust. Default is `{ x：0, y: 10 }`.\n   */\n  adjustPadding?: { x: number, y: number }|number,\n  /**\n   * By default, the menu will automatically adjust its position to prevent it overflow the container.\n   *\n   * If you allow menu overflow containers, you can set this to false.\n   *\n   * Default is true.\n   */\n  adjustPosition?: boolean,\n  /**\n   * Return the mounted node for MenuRoot.\n   *\n   * Note: After you change the mount node, the menu display position may be incorrect.\n   *\n   * * The MenuOptions.x is the distance from the menu to the left edge of the container (container should `position: relative;`);\n   * * The MenuOptions.y is the distance from the menu to the top edge of the container (container should `position: relative;`);;\n   *\n   * So, you need to change the x and y values you passed in to ensure that the display position is correct.\n   *\n   * You may need to use `ContextMenu.transformMenuPosition` to transform the menu display position:\n   *\n   * ```\n   * function onContextMenu(e: MouseEvent) {\n      //MyContainerElement is the MenuRoot\n      const scaledPosition = ContextMenu.transformMenuPosition(e.target as HTMLElement, e.offsetX, e.offsetY, MyContainerElement);\n      menuData.x = scaledPosition.x;\n      menuData.y = scaledPosition.y;\n      //show menu\n      ContextMenu.showContextMenu(menuData);\n    }\n   * ```\n   */\n  getContainer ?: HTMLElement | (() => HTMLElement);\n\n  /**\n   * This event emit when this menu is closing. (Usually used in function mode)\n   * @param lastClickItem The last clicked menu item, if user does not click any item, it is `undefined`. This param only valid in function mode.\n   */\n  onClose ?: ((lastClickItem: MenuItem|undefined) => void) | undefined;\n  /**\n   * When `clickCloseOnOutside` is set to `false`, and user click on other places will emit this event.\n   */\n  onClickOnOutside ?: (e: MouseEvent) => void;\n  /**\n   * Event for MenuBar component\n   */\n  onKeyFocusMoveLeft ?:  (() => void) | undefined;\n  /**\n   * Event for MenuBar component\n   */\n  onKeyFocusMoveRight ?:  (() => void) | undefined;\n}\nexport interface MenuItem {\n  /**\n   * The label of this menu item.\n   *\n   * Can be a callback. Use `h` to render custom content.\n   *\n   * ```js\n   * {\n   *   label: h('div', {\n   *     style: {\n   *       fontSize: '20px',\n   *       color: '#f98',\n   *     }\n   *   }, \"Item with custom render\"),\n   * },\n   * ```\n   */\n  label ?: string|VNode|((label: string) => VNode),\n  /**\n   * The icon for this menu item.\n   */\n  icon ?: string|VNode|((icon: string) => VNode),\n  /**\n   * Custom icon library font class name.\n   *\n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass ?: string,\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n   *\n   * Default is inherit from `MenuOptions.preserveIconWidth` .\n   *\n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth ?: boolean;\n  /**\n   * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n   */\n  svgIcon ?: string,\n  /**\n   * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n   */\n  svgProps ?: SVGAttributes,\n  /**\n   * Disable menu item?\n   */\n  disabled ?: boolean,\n  /**\n   * Hide menu item?\n   */\n  hidden ?: boolean,\n  /**\n   * Is this menu item checked?\n   *\n   * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n   */\n  checked ?: boolean,\n  /**\n   * Shortcut key text display on the right.\n   *\n   * The shortcut keys here are only for display. You need to handle the key events by yourself.\n   */\n  shortcut ?: string|string,\n  /**\n   * Set the submenu pop-up direction relative to coordinates.\n   *\n   * Default is inherted from `MenuOptions.direction`, if `adjustSubMenuPosition` is true then the submenu will determine\n   * the pop-up direction based on its distance from the screen edge.\n   *\n   */\n  direction ?: MenuPopDirection,\n  /**\n   * By default, the submenu will automatically adjust its position to prevent it overflow the container.\n   *\n   * If you allow menu overflow containers, you can set this to false.\n   *\n   * Default is inherit from `MenuOptions.adjustPosition`.\n   */\n  adjustSubMenuPosition ?: boolean,\n  /**\n   * When there are subitems in this item, is it allowed to trigger its own click event? Default is false\n   */\n  clickableWhenHasChildren ?: boolean,\n  /**\n   * Should close menu when Click this menu item ?\n   */\n  clickClose ?: boolean,\n  /**\n   * Is this menu item separated from the menu item?\n   *\n   * * `true` or `'down'`: Separator is show below menu.\n   * * `'up'`: Separator is show above menu.\n   * * `'self'`: Mark this item is a Separator.\n   * * `false`: No Separator.\n   */\n  divided ?: boolean|'up'|'down'|'self',\n  /**\n   * Custom css class for submenu\n   */\n  customClass ?: string,\n  /**\n   * Submenu maximum width (in pixels).\n   */\n  maxWidth ?: number|string,\n  /**\n   * Submenu minimum width (in pixels).\n   */\n  minWidth ?: number|string,\n  /**\n   * Menu item click event handler.\n   *\n   * @param e The current event of `click` or `keydown` (when user use keyboard press this menu)\n   */\n  onClick ?: (e?: MouseEvent|KeyboardEvent) => void,\n  /**\n   * This event emit when submenu of this item is closing.\n   */\n  onSubMenuClose ?: ((itemInstance: MenuItemContext) => void) | undefined;\n  /**\n   * This event emit when submenu of this item is showing.\n   */\n  onSubMenuOpen ?: ((itemInstance: MenuItemContext) => void) | undefined;\n  /**\n   * A custom render callback that allows you to customize the rendering\n   *  of the current item.\n   */\n  customRender ?: VNode|((item: MenuItem) => VNode),\n  /**\n   * Child menu items (Valid in function mode).\n   */\n  children ?: MenuChildren,\n}\n\nexport interface ContextMenuPositionData {\n  x: number;\n  y: number;\n}\n\nexport declare interface MenuItemRenderData extends Omit<MenuItem, 'children'|'customRender'|'onClick'> {\n  /**\n   * Global theme\n   */\n  theme: 'light'|'dark',\n  /**\n   * This value indicates whether the current menu submenu is open\n   */\n  isOpen: boolean,\n  /**\n   * This value indicates whether the current menu has submenus\n   */\n  hasChildren: boolean,\n  /**\n   * Click event callback of custom element, which is used for menu internal event\n   */\n  onClick: (e: MouseEvent) => void,\n  /**\n   * MouseEnter event callback of custom element, which is used for menu internal event\n   */\n  onMouseEnter: (e: MouseEvent) => void,\n}\n","import { defineComponent, toRefs } from \"vue\";\nimport type { VNode } from \"vue\";\nimport type { MenuOptions } from \"./ContextMenuDefine\";\nimport { MenuConstOptions } from \"./ContextMenuDefine\";\n\n/**\n * Get absolute y position of HTMLElement\n * @param e Element\n * @param stopNode Specify the node for recursive termination, default to body\n * @returns \n */\nexport function getTop(e: HTMLElement, stopNode?: HTMLElement): number {\n  let offset = e.offsetTop;\n  if (e.offsetParent != null && e.offsetParent != stopNode) {\n    offset -= e.offsetParent.scrollTop;\n    offset += getTop(e.offsetParent as HTMLElement, stopNode);\n  }\n  return offset;\n}\n/**\n * Get absolute x position of HTMLElement\n * @param e Element\n * @param stopNode Specify the node for recursive termination, default to body\n * @returns \n */\nexport function getLeft(e: HTMLElement, stopNode?: HTMLElement): number {\n  let offset = e.offsetLeft;\n  if (e.offsetParent != null && e.offsetParent != stopNode) {\n    offset -= e.offsetParent.scrollLeft;\n    offset += getLeft(e.offsetParent as HTMLElement, stopNode);\n  }\n  return offset;\n}\n\n/**\n * If your `body` element is in a scaled state (e.g. `transform: scale(0.5)`), \n * this may lead to the wrong position of the menu display. \n * You can use this function to transform the menu display position:\n * \n * ```ts\n * \n  import ContextMenu from 'vsv-context-menu'\n\n  function onContextMenu(e: MouseEvent) {\n    const scaledPosition = ContextMenu.transformMenuPosition(e.target as HTMLElement, e.offsetX, e.offsetY);\n    //Full code of menuData is in `/examples/views/InScaledBody.vue`\n    menuData.x = scaledPosition.x;\n    menuData.y = scaledPosition.y;\n    //show menu\n    ContextMenu.showContextMenu(menuData);\n  }\n  * ```\n  * @param e Current click element\n  * @param offsetX MouseEvent.offsetX\n  * @param offsetY MouseEvent.offsetY\n  */\nexport function transformMenuPosition(e: HTMLElement, offsetX: number, offsetY: number, container?: HTMLElement): {\n  x: number,\n  y: number,\n} {\n  return {\n    x: getLeft(e, container) + offsetX,\n    y: getTop(e, container) + offsetY,\n  };\n}\n\nconst DEFAULT_CONTAINER_ID = 'mx-menu-default-container';\nconst GEN_CONTAINER_ID = 'mx-menu-container-';\nlet containerId = 0;\n\nexport function removeContainer(container: HTMLElement) : void {\n  container.parentNode?.removeChild(container);\n}\nexport function genContainer(options: MenuOptions) : {\n  eleId: string,\n  container: HTMLElement,\n  isNew: boolean,\n} {\n  const { getContainer, zIndex } = options;\n\n  if (getContainer) {\n    const container = typeof getContainer === 'function' ? getContainer() : getContainer;\n    if (container) {\n      let eleId = container.getAttribute('id');\n      if (!eleId) {\n        eleId = GEN_CONTAINER_ID + (containerId++);\n        container.setAttribute('id', eleId);\n      }\n      return {\n        eleId,\n        container,\n        isNew: false,\n      };\n    }\n  }\n\n  let container = document.getElementById(DEFAULT_CONTAINER_ID);\n  if (!container) {\n    container = document.createElement('div');\n    container.setAttribute('id', DEFAULT_CONTAINER_ID);\n    container.setAttribute('class', 'mx-menu-ghost-host mx-fullscreen');\n    document.body.appendChild(container);\n  }\n  container.style.zIndex = zIndex?.toString() || MenuConstOptions.defaultZindex.toString();\n  return {\n    eleId: DEFAULT_CONTAINER_ID,\n    container,\n    isNew: true,\n  };\n}\n\n/**\n * Number to px string\n * @param value \n * @returns \n */\nexport function solveNumberOrStringSize(value: string|number) : string {\n  return typeof value === 'number' ? `${value}px` : value;\n}\n\n/**\n * Render a VNode\n */\nexport const VNodeRender = defineComponent({\n  props: {\n    /**\n     * Can be VNode or (data: unknown) => VNode\n     */\n    vnode: {\n      type: null,\n    },\n    /**\n     * If vnode is a callback, this data will be passed to the callback first parameter.\n     * @default null\n     */\n    data: {\n      type: null,\n      default: null,\n    },\n  },\n  setup(props) {\n    const { vnode, data } = toRefs(props);\n    return () => typeof vnode.value === 'function' ? (vnode.value as unknown as (data: unknown) => VNode)(data.value) : vnode.value as unknown as VNode;\n  },\n})","<template>\n  <svg class=\"mx-checked-mark\" aria-hidden=\"true\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M129.3,428.6L52,512l345,372.5l575-620.8l-69.5-75L400.4,718.2L129.3,428.6z\"></path>\n  </svg>\n</template>","<template>\n  <svg class=\"mx-right-arrow\" aria-hidden=\"true\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M307.018 49.445c11.517 0 23.032 4.394 31.819 13.18L756.404 480.18c8.439 8.438 13.181 19.885 13.181 31.82s-4.741 23.38-13.181 31.82L338.838 961.376c-17.574 17.573-46.065 17.573-63.64-0.001-17.573-17.573-17.573-46.065 0.001-63.64L660.944 512 275.198 126.265c-17.574-17.573-17.574-46.066-0.001-63.64C283.985 53.839 295.501 49.445 307.018 49.445z\"></path>\n  </svg>\n</template>","<template>\n  <div v-if=\"!hidden\" class=\"mx-context-menu-item-wrapper\" ref=\"menuItemRef\" data-type=\"ContextMenuItem\">\n    <!--Custom render-->\n    <VNodeRender v-if=\"globalHasSlot('itemRender')\" :vnode=\"() => globalRenderSlot('itemRender', getItemDataForChildren())\" />\n    <VNodeRender v-else-if=\"customRender\" :vnode=\"customRender\" :data=\"getItemDataForChildren()\" />\n    <!--Default item-->\n    <div \n      v-else\n      :class=\"[\n        'mx-context-menu-item',\n        (disabled ? 'disabled' : ''),\n        (keyBoardFocusMenu ? 'keyboard-focus' : ''),\n        (customClass ? (' ' + customClass) : ''),\n        (showSubMenu ? 'open' : ''),\n      ]\"\n      @click=\"onClick\"\n      @mouseenter=\"onMouseEnter\"\n    >\n      <slot>\n        <div class=\"mx-item-row\">\n          <div :class=\"[\n            'mx-icon-placeholder',\n            preserveIconWidth ? 'preserve-width': '',\n          ]\">\n            <slot name=\"icon\">\n              <VNodeRender v-if=\"globalHasSlot('itemIconRender')\" :vnode=\"() => globalRenderSlot('itemIconRender', getItemDataForChildren())\" />\n              <svg v-else-if=\"typeof svgIcon === 'string' && svgIcon\" class=\"icon svg\" v-bind=\"svgProps\">\n                <use :xlink:href=\"svgIcon\"></use>\n              </svg>\n              <VNodeRender v-else-if=\"(typeof icon !== 'string')\" :vnode=\"icon\" :data=\"icon\" />\n              <i v-else-if=\"typeof icon === 'string' && icon !== ''\" :class=\"icon + ' icon '+ iconFontClass + ' ' + options.iconFontClass\"></i>\n            </slot>\n            <slot v-if=\"checked\" name=\"check\">\n              <VNodeRender v-if=\"globalHasSlot('itemCheckRender')\" :vnode=\"() => globalRenderSlot('itemCheckRender', getItemDataForChildren())\" />\n              <ContextMenuIconCheck />\n            </slot>\n          </div>\n          <slot name=\"label\">\n            <VNodeRender v-if=\"globalHasSlot('itemLabelRender')\" :vnode=\"() => globalRenderSlot('itemLabelRender', getItemDataForChildren())\" />\n            <span class=\"label\" v-else-if=\"typeof label === 'string'\">{{ label }}</span>\n            <VNodeRender v-else :vnode=\"label\" :data=\"label\" />\n          </slot>\n        </div>\n        <div class=\"mx-item-row\">\n          <slot v-if=\"shortcut\" name=\"shortcut\">\n            <VNodeRender v-if=\"globalHasSlot('itemShortcutRender')\" :vnode=\"() => globalRenderSlot('itemShortcutRender', getItemDataForChildren())\" />\n            <span class=\"mx-shortcut\">{{ shortcut }}</span>\n          </slot>\n          <slot v-if=\"showRightArrow\" name=\"rightArrow\">\n            <VNodeRender v-if=\"globalHasSlot('itemRightArrowRender')\" :vnode=\"() => globalRenderSlot('itemRightArrowRender', getItemDataForChildren())\" />\n            <ContextMenuIconRight />\n          </slot>\n        </div>\n      </slot>\n    </div>\n    \n    <!--Sub menu render-->\n    <Transition v-if=\"options.menuTransitionProps\" v-bind=\"options.menuTransitionProps\">\n      <slot v-if=\"showSubMenu\" name=\"submenu\"></slot>\n    </Transition>\n    <slot v-else-if=\"showSubMenu\" name=\"submenu\"></slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, nextTick, onBeforeUnmount, onMounted, type PropType, ref, type SVGAttributes, toRefs, type TransitionProps, type Ref, computed, provide } from 'vue'\nimport type { SubMenuParentContext } from './ContextSubMenu.vue'\nimport type { GlobalHasSlot, GlobalRenderSlot } from './ContextMenu.vue'\nimport type { MenuItem, MenuItemContext, MenuOptions } from './ContextMenuDefine'\nimport { VNodeRender } from './ContextMenuUtils'\nimport ContextMenuIconCheck from './ContextMenuIconCheck.vue'\nimport ContextMenuIconRight from './ContextMenuIconRight.vue'\n\n/**\n * Menu Item\n */\n\nconst props = defineProps({\n  /**\n   * Is this menu disabled? \n   */\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Is this menu hidden? \n   */\n  hidden: {\n    type: Boolean,\n    default: false\n  },\n  customRender: {\n    type: Function,\n    default: null\n  },\n  /**\n   * Custom css class for submenu\n   */\n  customClass: {\n    type: String,\n    default: ''\n  },\n  clickHandler: {\n    type: Function as PropType<(e: MouseEvent|KeyboardEvent) => void>,\n    default: null\n  },\n  /**\n   * Menu label\n   */\n  label: {\n    type: [String, Object, Function],\n    default: ''\n  },\n  /**\n   * Menu icon (for icon class)\n   */\n  icon: {\n    type: [String, Object, Function],\n    default: ''\n  },\n  /**\n   * Custom icon library font class name.\n   * \n   * Only for css font icon, If you use the svg icon, you do not need to use this.\n   */\n  iconFontClass: {\n    type: String,\n    default: 'iconfont'\n  },\n  /**\n   * Is this menu item checked?\n   * \n   * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n   */\n  checked: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Shortcut key text display on the right.\n   * \n   * The shortcut keys here are only for display. You need to handle the key events by yourself.\n   */\n  shortcut: {\n    type: String,\n    default: ''\n  },\n  /**\n   * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n   */\n  svgIcon: {\n    type: String,\n    default: ''\n  },\n  /**\n   * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n   */\n  svgProps: {\n    type: Object as PropType<SVGAttributes>,\n    default: null\n  },\n  /**\n   * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n   * \n   * Default is true .\n   * \n   * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n   */\n  preserveIconWidth: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * Show right arrow on this menu?\n   */\n  showRightArrow: {\n    type: Boolean,\n    default: false\n  },\n  hasChildren: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Should close menu when Click this menu item ?\n   */\n  clickClose: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * When there are subitems in this item, is it allowed to trigger its own click event? Default is false\n   */\n  clickableWhenHasChildren: {\n    type: Boolean,\n    default: false\n  },\n  rawMenuItem: {\n    type: Object as PropType<MenuItem>,\n    default: undefined\n  },\n});\nconst emit = defineEmits([\n  'click',\n  'subMenuOpen',\n  'subMenuClose',\n])\n\nconst { \n  clickHandler, clickClose, clickableWhenHasChildren, disabled, hidden,\n  label, icon, iconFontClass,\n  showRightArrow, shortcut,\n  hasChildren,\n} = toRefs(props);\nconst showSubMenu = ref(false);\nconst keyBoardFocusMenu = ref(false);\n\nconst menuItemRef = ref<HTMLElement>();\n\nconst options = inject('globalOptions') as Ref<MenuOptions>;\nconst globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\nconst globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\nconst globalCloseMenu = inject('globalCloseMenu') as (fromItem: MenuItem|undefined) => void;\n\nconst menuContext = inject('menuContext') as SubMenuParentContext;\n\n//Instance Contet for keyboadr control\nconst menuItemInstance : MenuItemContext = {\n  getSubMenuInstance: () => undefined,\n  showSubMenu: () => {\n    if (showSubMenu.value) {\n      //Mark current item\n      menuContext.markActiveMenuItem(menuItemInstance, true);\n      return true;\n    } else if (hasChildren.value) {\n      onMouseEnter();\n      return true;\n    }\n    return false;\n  },\n  hideSubMenu: () => {\n    //closeSubMenu();\n    menuContext.closeOtherSubMenu();\n  },\n  isDisabledOrHidden: () => disabled.value || hidden.value,\n  getElement: () => menuItemRef.value,\n  focus: () => keyBoardFocusMenu.value = true,\n  blur: () => keyBoardFocusMenu.value = false,\n  click: onClick,\n}\n\nprovide(\"menuItemInstance\", menuItemInstance);\n\nonMounted(() => {\n  if (menuContext.isMenuItemDataCollectedFlag()) {\n    //当前菜单条目是在整体加载完成后才显示的，此时菜单顺序已经无法知道，\n    //所以这里需要在父级元素中查找得出当前菜单的位置。\n    //\n    //The current menu item is displayed after the overall loading is completed. \n    //At this time, the menu order cannot be known, so here we need to \n    //find the position of the current menu in the parent element.\n    nextTick(() => {\n      let index = 0;\n      const parentEl = menuContext.getElement();\n      if (parentEl) {\n        let indexCounting = 0;\n        for (let i = 0; i < parentEl.children.length; i++) {\n          const el = parentEl.children[i];\n          if (el.getAttribute('data-type') === 'ContextMenuItem') {\n            if (el === menuItemRef.value) {\n              index = indexCounting;\n              break;\n            }\n            indexCounting++;\n          }\n        }\n      }\n      //Insert to pos\n      menuContext.addChildMenuItem(menuItemInstance, index);\n    });\n  } else\n    menuContext.addChildMenuItem(menuItemInstance);\n});\nonBeforeUnmount(() => {\n  menuContext.removeChildMenuItem(menuItemInstance);\n});\n\n//Click handler\nfunction onClick(e: MouseEvent|KeyboardEvent) {\n  //Ignore clicking when disabled\n  if (disabled.value)\n    return;\n  //Ignore clicking when click on some special elements\n  if (e) {\n    const currentTarget = e.target as HTMLElement;\n    if (currentTarget.classList.contains('mx-context-no-clickable'))\n      return;\n    if (options.value.ignoreClickClassName && currentTarget.classList.contains(options.value.ignoreClickClassName))\n      return;\n    if (options.value.clickCloseClassName && currentTarget.classList.contains(options.value.clickCloseClassName)) {\n      e.stopPropagation();\n      globalCloseMenu(props.rawMenuItem);\n      return;\n    }\n  }\n  //Has submenu?\n  if (hasChildren.value) {\n    if (clickableWhenHasChildren.value) {\n      if (typeof clickHandler.value === 'function')\n        clickHandler.value(e);\n      emit('click', e);\n    }\n    else if (!showSubMenu.value)\n      onMouseEnter();\n  } else {\n    //Call hander from options\n    if (typeof clickHandler.value === 'function') \n      clickHandler.value(e);\n    emit('click', e);\n    if (clickClose.value) {\n      //emit close\n      globalCloseMenu(props.rawMenuItem);\n    }\n  }\n}\n//MouseEnter handler: show item submenu\nfunction onMouseEnter(e?: MouseEvent) {\n  //Clear keyBoard focus style\n  keyBoardFocusMenu.value = false;\n\n  //等待一个延时，以防止用户过快移动鼠标导致菜单隐藏\n  //Wait for a delay to prevent the menu from being hidden due to the user moving the mouse too fast\n  if (!menuContext.checkCloseOtherSubMenuTimeOut())\n    menuContext.closeOtherSubMenu();\n\n  if (!disabled.value) {\n    //Mark current item\n    menuContext.markActiveMenuItem(menuItemInstance);\n\n    if (hasChildren.value) {\n      if (!e)\n        menuContext.markThisOpenedByKeyBoard();\n      //Open sub menu\n      menuContext.addOpenedSubMenu(closeSubMenu);\n      showSubMenu.value = true;\n      nextTick(() => emit('subMenuOpen', menuItemInstance));\n    }\n  }\n}\nfunction closeSubMenu() \n{\n  keyBoardFocusMenu.value = false;\n  showSubMenu.value = false;\n  emit('subMenuClose', menuItemInstance);\n}\n//Data for custom render\nfunction getItemDataForChildren() {\n  return {\n    disabled: disabled.value,\n    label: label.value,\n    icon: icon.value,\n    iconFontClass: iconFontClass.value,\n    showRightArrow: showRightArrow.value,\n    clickClose: clickClose.value,\n    clickableWhenHasChildren: clickableWhenHasChildren.value,\n    shortcut: shortcut.value,\n    theme: options.value.theme,\n    isOpen: showSubMenu,\n    hasChildren: hasChildren,\n    onClick,\n    onMouseEnter,\n    closeMenu: globalCloseMenu,\n  }\n}\n\ndefineExpose(menuItemInstance);\n</script>\n\n<style>\n</style>\n","<template>\n  <VNodeRender v-if=\"globalHasSlot('separatorRender')\" :vnode=\"() => globalRenderSlot('separatorRender', {})\" />\n  <div v-else class=\"mx-context-menu-item-sperator mx-context-no-clickable\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject } from 'vue'\nimport { VNodeRender } from './ContextMenuUtils';\nimport type { GlobalHasSlot, GlobalRenderSlot } from './ContextSubMenuWrapper.vue';\n\nexport default defineComponent({\n  name: 'ContextMenuSperator',\n  components: {\n    VNodeRender\n  },\n  setup() {\n      \n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n\n    return {\n      globalHasSlot,\n      globalRenderSlot,\n    };\n  },\n})\n</script>","<template>\n  <div\n    ref=\"submenuRoot\"\n    :class=\"[\n      'mx-context-menu',\n      (options.customClass ? options.customClass : ''),\n      (options.theme ?? '')\n    ]\"\n    :style=\"{\n      maxWidth: (maxWidth ? solveNumberOrStringSize(maxWidth) : `${constOptions.defaultMaxWidth}px`),\n      minWidth: minWidth ? solveNumberOrStringSize(minWidth) : `${constOptions.defaultMinWidth}px`,\n      maxHeight: overflow && maxHeight > 0 ? `${maxHeight}px` : undefined,\n      zIndex: zIndex,\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n    }\"\n    data-type=\"ContextSubMenu\"\n    @click=\"onSubMenuBodyClick\"\n    @wheel=\"onMouseWhell\"\n  >\n    <!--Child menu items-->\n    <div\n      :class=\"[ 'mx-context-menu-items' ]\"\n      ref=\"menu\"\n      :style=\"{\n        top: `${scrollValue}px`,\n      }\"\n    >\n      <slot>\n        <div v-if=\"overflow && options.updownButtonSpaceholder\" class=\"mx-context-menu-updown placeholder\"></div>\n        <template v-for=\"(item, i) in items\" :key=\"i\" >\n          <ContextMenuSeparator v-if=\"item.hidden !== true && item.divided === 'up'\" />\n          <ContextMenuSeparator v-if=\"item.hidden !== true && item.divided === 'self'\" />\n          <!--Menu Item-->\n          <ContextMenuItem\n            v-else\n            :clickHandler=\"item.onClick ? (e) => item.onClick!(e) : undefined\"\n            :disabled=\"item.disabled\"\n            :hidden=\"item.hidden\"\n            :icon=\"item.icon\"\n            :iconFontClass=\"item.iconFontClass\"\n            :svgIcon=\"item.svgIcon\"\n            :svgProps=\"item.svgProps\"\n            :label=\"item.label\"\n            :customRender=\"(item.customRender as Function)\"\n            :customClass=\"item.customClass\"\n            :checked=\"item.checked\"\n            :shortcut=\"item.shortcut\"\n            :clickClose=\"item.clickClose\"\n            :clickableWhenHasChildren=\"item.clickableWhenHasChildren\"\n            :preserveIconWidth=\"item.preserveIconWidth !== undefined ? item.preserveIconWidth : options.preserveIconWidth\"\n            :showRightArrow=\"item.children && item.children.length > 0\"\n            :hasChildren=\"item.children && item.children.length > 0\"\n            :rawMenuItem=\"item\"\n            @sub-menu-open=\"(v: any) => item.onSubMenuOpen?.(v)\"\n            @sub-menu-close=\"(v: any) => item.onSubMenuClose?.(v)\"\n          >\n            <template v-if=\"item.children && item.children.length > 0\" #submenu>\n              <!--Sub menu-->\n              <ContextSubMenu\n                :items=\"item.children\"\n                :maxWidth=\"item.maxWidth\"\n                :minWidth=\"item.minWidth\"\n                :adjustPosition=\"item.adjustSubMenuPosition !== undefined ? item.adjustSubMenuPosition : options.adjustPosition\"\n                :direction=\"item.direction !== undefined ? item.direction : options.direction\"\n              />\n            </template>\n          </ContextMenuItem>\n          <!--Separator-->\n          <!--Custom render-->\n          <ContextMenuSeparator v-if=\"item.hidden !== true && (item.divided === 'down' || item.divided === true)\" />\n        </template>\n        <div v-if=\"overflow && options.updownButtonSpaceholder\" class=\"mx-context-menu-updown placeholder\"></div>\n      </slot>\n    </div>\n\n    <!--Scroll button host-->\n    <div\n      class=\"mx-context-menu-scroll\"\n      ref=\"scroll\"\n    >\n      <!--Updown scroll button-->\n      <div\n        v-show=\"overflow\"\n        ref=\"upScrollButton\"\n        :class=\"'mx-context-menu-updown mx-context-no-clickable up' + (overflow && scrollValue < 0 ? '' : ' disabled')\"\n        @click=\"onScroll(false)\"\n        @wheel=\"onMouseWhellMx\"\n      >\n        <ContextMenuIconRight />\n      </div>\n      <div\n        v-show=\"overflow\"\n        :class=\"'mx-context-menu-updown mx-context-no-clickable down' + (overflow && scrollValue > -scrollHeight ? '' : ' disabled')\"\n        @click=\"onScroll(true)\"\n        @wheel=\"onMouseWhellMx\"\n      >\n        <ContextMenuIconRight />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, nextTick, onMounted, type PropType, provide, ref, toRefs, type Ref, onBeforeUnmount } from 'vue'\nimport type { MenuOptions, MenuItem, ContextMenuPositionData, MenuPopDirection, MenuItemContext, ContextSubMenuInstance } from './ContextMenuDefine'\nimport type { GlobalHasSlot, GlobalRenderSlot } from './ContextMenu.vue'\nimport { MenuConstOptions } from './ContextMenuDefine'\nimport { getLeft, getTop, solveNumberOrStringSize } from './ContextMenuUtils'\nimport ContextMenuItem from './ContextMenuItem.vue'\nimport ContextMenuSeparator from './ContextMenuSeparator.vue'\nimport ContextMenuIconRight from './ContextMenuIconRight.vue'\n\n\n//The internal info context for submenu instance\nexport interface SubMenuContext {\n  isTopLevel: () => boolean;\n  closeSelfAndActiveParent: () => boolean,\n  openCurrentItemSubMenu: () => boolean,\n  closeCurrentSubMenu: () => void,\n  moveCurrentItemFirst: () => void,\n  moveCurrentItemLast: () => void,\n  moveCurrentItemDown: () => void,\n  moveCurrentItemUp: () => void,\n  focusCurrentItem: () => void,\n  triggerCurrentItemClick: (e: KeyboardEvent|MouseEvent) => void,\n}\n\n//The internal info context for submenu\nexport interface SubMenuParentContext {\n  //Props\n  container: HTMLElement;\n  zIndex: number;\n  adjustPadding: { x: number, y: number },\n\n  //Position control\n  getParentWidth: () => number;\n  getParentHeight: () => number;\n  getParentX: () => number;\n  getParentY: () => number;\n  getParentAbsX: () => number;\n  getParentAbsY: () => number;\n  getPositon: () => [number,number];\n  getZoom: () => number;\n\n  //SubMenu mutex\n  addOpenedSubMenu: (closeFn: () => void) => void;\n  closeOtherSubMenu: () => void;\n  closeOtherSubMenuWithTimeOut: () => void;\n  checkCloseOtherSubMenuTimeOut: () => boolean;\n\n  //Item control\n  addChildMenuItem: (item: MenuItemContext, index?: number) => void;\n  removeChildMenuItem: (item: MenuItemContext) => void;\n  markActiveMenuItem: (item: MenuItemContext, updateState?: boolean) => void;\n  markThisOpenedByKeyBoard: () => void;\n  isOpenedByKeyBoardFlag: () => boolean;\n  isMenuItemDataCollectedFlag: () => boolean;\n\n  //Other\n  getSubMenuInstanceContext: () => SubMenuContext|null;\n  getParentContext: () => SubMenuParentContext|null;\n  getElement: () => HTMLElement|null;\n}\n\n/**\n * Submenu container\n */\nexport default defineComponent({\n  name: 'ContextSubMenu',\n  components: {\n    ContextMenuItem,\n    ContextMenuSeparator,\n    ContextMenuIconRight\n  },\n  props: {\n    /**\n     * Items from options\n     */\n    items: {\n      type: Object as PropType<Array<MenuItem>>,\n      default: null\n    },\n    /**\n     * Max width for this submenu\n     */\n    maxWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Min width for this submenu\n     */\n    minWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Specifies should submenu adjust it position\n     * when the menu exceeds the screen. The default is true\n     */\n    adjustPosition: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Menu direction\n     */\n    direction: {\n      type: String as PropType<MenuPopDirection>,\n      default: 'br',\n    },\n  },\n  setup(props) {\n\n    //#region Injects\n\n    const parentContext = inject('menuContext') as SubMenuParentContext;\n    const options = inject('globalOptions') as Ref<MenuOptions>;\n    const globalHasSlot = inject('globalHasSlot') as GlobalHasSlot;\n    const globalRenderSlot = inject('globalRenderSlot') as GlobalRenderSlot;\n\n    //#endregion\n\n    const { zIndex, getParentWidth, getParentHeight, getZoom } = parentContext;\n    const { adjustPosition } = toRefs(props);\n\n    const submenuRoot = ref<HTMLElement>();\n    const menu = ref<HTMLElement>();\n    const scroll = ref<HTMLElement>();\n    const upScrollButton = ref<HTMLElement>();\n    const openedSubMenuClose = [] as (() => void)[];\n\n    //#region Keyboard control context\n\n    const globalSetCurrentSubMenu = inject('globalSetCurrentSubMenu') as (menu: SubMenuContext|null) => void;\n\n    const menuItems = [] as MenuItemContext[];\n    let currentItem = null as MenuItemContext|null;\n    let leaveTimeout = 0;\n\n    function blurCurrentMenu() {\n      if (currentItem)\n        currentItem.blur();\n    }\n\n    function setAndFocusNotDisableItem(isDown: boolean, startIndex?: number) {\n      if (isDown) {\n        for(let i = startIndex !== undefined ? startIndex : 0; i < menuItems.length; i++) {\n          if (!menuItems[i].isDisabledOrHidden()) {\n            setAndFocusCurrentMenu(i);\n            break;\n          }\n        }\n      } else {\n        for(let i = startIndex !== undefined ? startIndex : (menuItems.length - 1); i >= 0; i--) {\n          if (!menuItems[i].isDisabledOrHidden()) {\n            setAndFocusCurrentMenu(i);\n            break;\n          }\n        }\n      }\n    }\n    function setAndFocusCurrentMenu(index?: number) {\n      if (currentItem)\n        blurCurrentMenu();\n      if (index !== undefined)\n        currentItem = menuItems[Math.max(0, Math.min(index, menuItems.length - 1))];\n      if (!currentItem)\n        return;\n\n      //Focus item\n      currentItem.focus();\n\n      //Scroll to current item\n      if (overflow.value) {\n        const element = currentItem.getElement();\n        if (element) {\n          scrollValue.value = Math.min(Math.max(-scrollHeight.value, -element.offsetTop - element.offsetHeight + maxHeight.value), 0);\n        }\n      }\n    }\n    function onSubMenuBodyClick() {\n      //Mouse click can set current focused submenu\n      globalSetCurrentSubMenu(thisMenuInsContext);\n    }\n\n    const thisMenuInsContext : SubMenuContext = {\n      isTopLevel: () => parentContext.getParentContext() === null,\n      closeSelfAndActiveParent: () => {\n        const parent = thisMenuContext.getParentContext();\n        if (parent) {\n          parent.closeOtherSubMenu();\n          const conext = parent.getSubMenuInstanceContext()\n          if (conext) {\n            conext.focusCurrentItem();\n            return true;\n          }\n        }\n        return false;\n      },\n      closeCurrentSubMenu: () => thisMenuContext.getParentContext()?.closeOtherSubMenu(),\n      moveCurrentItemFirst: () => setAndFocusNotDisableItem(true),\n      moveCurrentItemLast: () => setAndFocusNotDisableItem(false),\n      moveCurrentItemDown: () => setAndFocusNotDisableItem(true, (currentItem ? (menuItems.indexOf(currentItem) + 1) : 0)),\n      moveCurrentItemUp: () => setAndFocusNotDisableItem(false, (currentItem ? (menuItems.indexOf(currentItem) - 1) : 0)),\n      focusCurrentItem: () => setAndFocusCurrentMenu(),\n      openCurrentItemSubMenu: () => {\n        if (currentItem)\n          return currentItem?.showSubMenu()\n        return false;\n      },\n      triggerCurrentItemClick: (e) => currentItem?.click(e),\n    };\n\n    let isOpenedByKeyBoardFlag = false;\n    let isMenuItemDataCollectedFlag = false;\n\n    //#endregion\n\n    //#region Menu control context\n\n    //provide menuContext for child use\n    const thisMenuContext : SubMenuParentContext = {\n      zIndex: zIndex + 1,\n      container: parentContext.container,\n      adjustPadding: options.value.adjustPadding as { x: number, y: number } || MenuConstOptions.defaultAdjustPadding,\n      getParentWidth: () => menu.value?.offsetWidth || 0,\n      getParentHeight: () => menu.value?.offsetHeight || 0,\n      getParentX: () => position.value.x,\n      getParentY: () => position.value.y,\n      getParentAbsX: () => menu.value ? getLeft(menu.value, parentContext.container) : 0,\n      getParentAbsY: () => menu.value ? getTop(menu.value, parentContext.container) : 0,\n      getPositon: () => [0,0],\n      getZoom: () => options.value.zoom||MenuConstOptions.defaultZoom,\n      addOpenedSubMenu(closeFn: () => void) {\n        openedSubMenuClose.push(closeFn);\n      },\n      closeOtherSubMenu() {\n        openedSubMenuClose.forEach(k => k());\n        openedSubMenuClose.splice(0, openedSubMenuClose.length);\n        globalSetCurrentSubMenu(thisMenuInsContext);\n      },\n      checkCloseOtherSubMenuTimeOut() {\n        if (leaveTimeout) {\n          clearTimeout(leaveTimeout);\n          leaveTimeout = 0;\n          return true;\n        }\n        return false;\n      },\n      closeOtherSubMenuWithTimeOut() {\n        leaveTimeout = setTimeout(() => {\n          leaveTimeout = 0;\n          this.closeOtherSubMenu();\n        }, 200) as unknown as number; //Add a delay, the user will not hide the menu when moving too fast\n      },\n      addChildMenuItem: (item: MenuItemContext, index?: number) => {\n        if (index === undefined)\n          menuItems.push(item);\n        else\n          menuItems.splice(index, 0, item);\n        //item.getSubMenuInstance = () => {\n        //  return subMenuRefs.value[menuItems.indexOf(item)]?.value;\n        //}\n      },\n      removeChildMenuItem: (item: MenuItemContext) => {\n        menuItems.splice(menuItems.indexOf(item), 1);\n        item.getSubMenuInstance = () => undefined;\n      },\n      markActiveMenuItem: (item: MenuItemContext, updateState = false) => {\n        blurCurrentMenu();\n        currentItem = item;\n        if (updateState)\n          setAndFocusCurrentMenu();\n      },\n      markThisOpenedByKeyBoard: () => {\n        isOpenedByKeyBoardFlag = true;\n      },\n      isOpenedByKeyBoardFlag: () => {\n        if (isOpenedByKeyBoardFlag) {\n          isOpenedByKeyBoardFlag = false;\n          return true;\n        }\n        return false;\n      },\n      isMenuItemDataCollectedFlag: () => isMenuItemDataCollectedFlag,\n      getElement: () => menu.value || null,\n      getParentContext: () => parentContext,\n      getSubMenuInstanceContext: () => thisMenuInsContext,\n    };\n    provide('menuContext', thisMenuContext);\n\n    //#endregion\n\n    //#region expose user use context\n\n    const exposeContext : ContextSubMenuInstance = {\n      getChildItem: (index: number) => menuItems[index],\n      getMenuDimensions: () => {\n        if (submenuRoot.value) {\n          return {\n            width: submenuRoot.value.offsetWidth,\n            height: submenuRoot.value.offsetHeight,\n          };\n        }\n        return { width: 0, height: 0 };\n      },\n      getSubmenuRoot: () => submenuRoot.value,\n      getMenu: () => menu.value,\n      getScrollValue: () => scrollValue.value,\n      setScrollValue: (v: number) => scrollValue.value = v,\n      getScrollHeight: () => scrollHeight.value,\n      getMaxHeight: () => maxHeight.value,\n      getPosition: () => position.value,\n      setPosition: (x: number, y: number) => { \n        position.value.x = x;\n        position.value.y = y;\n      },\n    };\n    \n    //#endregion\n\n    //#region set parent item context\n\n    const menuItemInstance = inject<MenuItemContext|undefined>('menuItemInstance', undefined);\n    if (menuItemInstance)\n      menuItemInstance.getSubMenuInstance = () => exposeContext;\n\n    //#endregion\n\n    const scrollValue = ref(0);\n    const scrollHeight = ref(0);\n\n    //Scroll the items\n    function onScroll(down : boolean) {\n      if (down)\n        scrollValue.value = Math.min(Math.max(scrollValue.value - 50, -scrollHeight.value), 0);\n      else\n        scrollValue.value = Math.min(scrollValue.value + 50, 0);\n    }\n\n    function onMouseWhellMx(e: WheelEvent) {\n      e.preventDefault();\n      e.stopPropagation();\n      onScroll (e.deltaY > 0);\n    }\n    function onMouseWhell(e: WheelEvent) {\n      if (options.value.mouseScroll) {\n        e.preventDefault();\n        e.stopPropagation();\n        onScroll (e.deltaY > 0);\n      }\n    }\n\n    const overflow = ref(false);\n    const position = ref({ x: 0, y: 0 } as ContextMenuPositionData)\n    const maxHeight = ref(0);\n\n    onMounted(() => {\n      const pos = parentContext.getPositon();\n      position.value = {\n        x: (pos[0] ?? options.value.xOffset ?? 0) / getZoom(),\n        y: (pos[1] ?? options.value.yOffset ?? 0) / getZoom(),\n      };\n\n      //Mark current item submenu is open\n      globalSetCurrentSubMenu(thisMenuInsContext);\n\n      nextTick(() => {\n        const menuEl = menu.value;\n\n        //adjust submenu position\n        if (menuEl && scroll.value) {\n\n          const { container } = parentContext;\n\n          const parentWidth = getParentWidth?.() ?? 0;\n          const parentHeight = getParentHeight?.() ?? 0;\n\n          const fillPaddingX = typeof parentContext.adjustPadding === 'number' ? parentContext.adjustPadding : (parentContext.adjustPadding?.x ?? 0);\n          const fillPaddingYAlways = typeof parentContext.adjustPadding === 'number' ? parentContext.adjustPadding : (parentContext.adjustPadding?.y ?? 0);\n          const fillPaddingY = parentHeight > 0 ? fillPaddingYAlways : 0;\n\n          const windowHeight = document.documentElement.scrollHeight / getZoom();\n          const windowWidth = document.documentElement.scrollWidth / getZoom();\n\n          const avliableWidth = Math.min(windowWidth, container.offsetWidth);\n          const avliableHeight = Math.min(windowHeight, container.offsetHeight);\n\n          let absX = getLeft(menuEl, container),\n            absY = getTop(menuEl, container);\n\n          //set x positon\n          if (props.direction.includes('l')) {\n            position.value.x -= menuEl.offsetWidth + fillPaddingX; //left\n          }\n          else if (props.direction.includes('r')) {\n            position.value.x += parentWidth + fillPaddingX; //right\n          }\n          else {\n            position.value.x += parentWidth / 2;\n            position.value.x -= (menuEl.offsetWidth + fillPaddingX) / 2; //center\n          }\n\n          //set y positon\n          if (props.direction.includes('t')) {\n            position.value.y -= (menuEl.offsetHeight + fillPaddingYAlways * 2) / getZoom(); //top\n          }\n          else if (props.direction.includes('b')) {\n            position.value.y -= fillPaddingYAlways / getZoom();  //bottom\n          }\n          else {\n            position.value.y += (parentHeight / 2) / getZoom();\n            position.value.y -= ((menuEl.offsetHeight + fillPaddingYAlways) / 2) / getZoom(); //center\n          }\n\n          //Overflow adjust\n          if (adjustPosition.value) {\n            nextTick(() => {\n              absX = getLeft(menuEl, container);\n              absY = getTop(menuEl, container);\n\n              const xOverflow = (absX + menuEl.offsetWidth) - (avliableWidth);\n              const yOverflow = (absY + menuEl.offsetHeight + fillPaddingY * 2) - (avliableHeight);\n\n              overflow.value = yOverflow > 0;\n              scrollHeight.value = menuEl.offsetHeight - avliableHeight + fillPaddingY * 2 /* Padding */;\n\n              if (xOverflow > 0) {//X overflow\n                const ox = parentWidth + menuEl.offsetWidth - fillPaddingX;\n                const maxSubWidth = absX;\n                if (ox > maxSubWidth)\n                  position.value.x -= maxSubWidth;\n                else\n                  position.value.x -= ox;\n              }\n\n              if (overflow.value) { //Y overflow\n                const oy = yOverflow;\n                const maxSubHeight = absY;\n                if (oy > maxSubHeight)\n                  position.value.y -= maxSubHeight - fillPaddingY;\n                else\n                  position.value.y -= oy - fillPaddingY;\n                maxHeight.value = (avliableHeight - fillPaddingY * 2);\n              } else {\n                maxHeight.value = 0;\n              }\n            });\n          }\n        }\n\n        //Focus this submenu\n        menuEl?.focus({\n          preventScroll: true\n        });\n\n        //Is this submenu opened by keyboard? If yes then select first item\n        if (parentContext.isOpenedByKeyBoardFlag())\n          setAndFocusNotDisableItem(true);\n\n        isMenuItemDataCollectedFlag = true;\n      });\n    });\n    onBeforeUnmount(() => {\n      if (menuItemInstance)\n        menuItemInstance.getSubMenuInstance = () => undefined;\n    });\n\n    return {\n      submenuRoot,\n      menu,\n      scroll,\n      options,\n      zIndex,\n      constOptions: MenuConstOptions,\n      scrollValue,\n      upScrollButton,\n      overflow,\n      position,\n      scrollHeight,\n      maxHeight,\n      ...exposeContext,\n      globalHasSlot,\n      globalRenderSlot,\n      onScroll,\n      onSubMenuBodyClick,\n      onMouseWhell,\n      onMouseWhellMx,\n      solveNumberOrStringSize,\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n@use \"./ContextMenu.scss\" as *;\n</style>\n","<template>\n  <div class=\"mx-menu-ghost-host\">\n    <Transition\n      v-if=\"options.menuTransitionProps\"\n      appear\n      v-bind=\"options.menuTransitionProps\"\n      @after-leave=\"emit('closeAnimFinished')\"\n    >\n      <ContextSubMenuConstructor\n        v-if=\"show\"\n        ref=\"submenuInstance\"\n        class=\"mx-menu-host\"\n        :items=\"options.items\"\n        :adjustPosition=\"options.adjustPosition\"\n        :maxWidth=\"options.maxWidth || MenuConstOptions.defaultMaxWidth\"\n        :minWidth=\"options.minWidth || MenuConstOptions.defaultMinWidth\"\n        :direction=\"(options.direction || MenuConstOptions.defaultDirection as MenuPopDirection)\"\n      >\n        <slot />\n      </ContextSubMenuConstructor>\n    </Transition>\n    <ContextSubMenuConstructor\n      v-else-if=\"show\"\n      ref=\"submenuInstance\"\n      class=\"mx-menu-host\"\n      :items=\"options.items\"\n      :adjustPosition=\"options.adjustPosition\"\n      :maxWidth=\"options.maxWidth || MenuConstOptions.defaultMaxWidth\"\n      :minWidth=\"options.minWidth || MenuConstOptions.defaultMinWidth\"\n      :direction=\"(options.direction || MenuConstOptions.defaultDirection as MenuPopDirection)\"\n    >\n      <slot />\n    </ContextSubMenuConstructor>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { h, onBeforeUnmount, onMounted, type PropType, provide, ref, renderSlot, toRefs, type VNode, watch, Transition, useSlots, type Ref } from 'vue'\nimport type { ContextMenuInstance, ContextSubMenuInstance, MenuItem, MenuOptions, MenuPopDirection } from './ContextMenuDefine'\nimport { MenuConstOptions } from './ContextMenuDefine'\nimport { addOpenedContextMenu, removeOpenedContextMenu } from './ContextMenuMutex';\nimport ContextSubMenuConstructor, { type SubMenuContext, type SubMenuParentContext } from './ContextSubMenu.vue';\n\n/**\n * Context menu component\n */\n\nexport type GlobalHasSlot = (name: string) => boolean;\nexport type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;\n\nconst props = defineProps({\n  /**\n   * Menu options\n   */\n  options: {\n    type: Object as PropType<MenuOptions>,\n    default: null\n  },\n  /**\n   * Show menu?\n   */\n  show: {\n    type: Object as PropType<Ref<boolean>>,\n    default: null\n  },\n  /**\n   * Current container, For calculation only\n   */\n  container: {\n    type: Object as PropType<HTMLElement>,\n    default: null\n  },\n  /**\n   * Make sure is user set the custom container.\n   */\n  isFullScreenContainer: {\n    type: Boolean,\n    default: true\n  },\n});\n\nconst emit = defineEmits([ 'close', 'closeAnimFinished' ]);\n\nconst slots = useSlots()\n\nconst submenuInstance = ref<ContextSubMenuInstance>();\n\nconst {\n  options,\n  show,\n  container,\n} = toRefs(props);\n\nonMounted(() => {\n  if (show.value)\n    openMenu();\n})\nonBeforeUnmount(() => {\n  removeBodyEvents();\n});\n\nwatch(show, (v: boolean) => {\n  if(v) {\n    openMenu();\n  } else {\n    removeOpenedContextMenu(instance);\n    removeBodyEvents();\n  }\n});\n\nconst instance : ContextMenuInstance = {\n  closeMenu,\n  isClosed,\n  getMenuRef: () => submenuInstance.value,\n  getMenuDimensions: () => submenuInstance.value?.getMenuDimensions() ?? { width: 0, height: 0 },\n};\nlet closed = false;\n\nfunction openMenu() {\n  installBodyEvents();\n  addOpenedContextMenu(instance);\n}\nfunction closeMenu(fromItem?: MenuItem|undefined) {\n  closed = true;\n  emit(\"close\", fromItem);\n  if (!options.value.menuTransitionProps)\n    emit('closeAnimFinished');\n  removeOpenedContextMenu(instance);\n}\nfunction isClosed() {\n  return closed;\n}\n\n\nfunction installBodyEvents() {\n  setTimeout(() => {\n    document.addEventListener(\"click\", onBodyClick, true);\n    document.addEventListener(\"contextmenu\", onBodyClick, true);\n    document.addEventListener(\"scroll\", onBodyScroll, true);\n    if (!props.isFullScreenContainer && container.value)\n      container.value.addEventListener(\"scroll\", onBodyScroll, true);\n    if (options.value.keyboardControl !== false)\n      document.addEventListener('keydown', onMenuKeyDown);\n  }, 50);\n}\nfunction removeBodyEvents() {\n  document.removeEventListener(\"contextmenu\", onBodyClick, true);\n  document.removeEventListener(\"click\", onBodyClick, true);\n  document.removeEventListener(\"scroll\", onBodyScroll, true);\n  if (!props.isFullScreenContainer && container.value)\n    container.value.removeEventListener(\"scroll\", onBodyScroll, true);\n  if (options.value.keyboardControl !== false)\n    document.removeEventListener('keydown', onMenuKeyDown);\n}\n\n//For keyboard event, remember which submenu is active\nconst currentOpenedMenu = ref<SubMenuContext|null>();\nprovide('globalSetCurrentSubMenu', (menu: SubMenuContext|null) => currentOpenedMenu.value = menu);\n\nfunction onMenuKeyDown(e: KeyboardEvent) {\n  let handled = true;\n  //Handle keyboard event\n  switch(e.key) {\n    case \"Escape\": {\n      if (currentOpenedMenu.value?.isTopLevel() === false) {\n        currentOpenedMenu.value?.closeCurrentSubMenu();\n      } else {\n        closeMenu();\n      }\n      break;\n    }\n    case \"ArrowDown\":\n      currentOpenedMenu.value?.moveCurrentItemDown();\n      break;\n    case \"ArrowUp\":\n      currentOpenedMenu.value?.moveCurrentItemUp();\n      break;\n    case \"Home\":\n      currentOpenedMenu.value?.moveCurrentItemFirst();\n      break;\n    case \"End\":\n      currentOpenedMenu.value?.moveCurrentItemLast();\n      break;\n    case \"ArrowLeft\": {\n      if (!currentOpenedMenu.value?.closeSelfAndActiveParent())\n        options.value.onKeyFocusMoveLeft?.();\n      break;\n    }\n    case \"ArrowRight\":\n      if (!currentOpenedMenu.value?.openCurrentItemSubMenu())\n        options.value.onKeyFocusMoveRight?.();\n      break;\n    case \"Enter\":\n      currentOpenedMenu.value?.triggerCurrentItemClick(e);\n      break;\n    default:\n      handled = false;\n      break;\n  }\n  if (handled && currentOpenedMenu.value) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\nfunction onBodyScroll() {\n  //close when docunment scroll\n  if (options.value.closeWhenScroll !== false)\n    closeMenu();\n}\nfunction onBodyClick(e: MouseEvent) {\n  checkTargetAndClose(e.target as HTMLElement, e);\n}\nfunction checkTargetAndClose(target: HTMLElement, e: MouseEvent) {\n  //Loop target , Check whether the currently clicked element belongs to the current menu.\n  // If yes, it will not be closed\n  while (target) {\n    if (target.classList && target.classList.contains('mx-menu-host'))\n      return;\n    target = target.parentNode as HTMLElement;\n  }\n  if (options.value.clickCloseOnOutside !== false) {\n    //Close menu\n    removeBodyEvents();\n    closeMenu();\n  } else {\n    options.value.onClickOnOutside?.(e);\n  }\n}\n\n//provide globalOptions for child use\nprovide('globalOptions', options);\nprovide('globalCloseMenu', closeMenu);\nprovide('globalIsFullScreenContainer', props.isFullScreenContainer);\n//check slot exists\nprovide('globalHasSlot', (name: string) => {\n  return slots[name] !== undefined;\n});\n//render slot\nprovide('globalRenderSlot', (name: string, params: Record<string, unknown>) => {\n  return renderSlot(slots, name, { ...params }, () => [ h('span', 'Render slot failed') ], false);\n});\n//provide menuContext for child use\nprovide('menuContext', {\n  zIndex: options.value.zIndex || MenuConstOptions.defaultZindex,\n  container: container.value as unknown as HTMLElement,\n  adjustPadding: { x: 0, y: 0 },\n  getParentAbsY: () => options.value.x,\n  getParentAbsX: () => options.value.y,\n  getZoom: () => options.value.zoom || MenuConstOptions.defaultZoom,\n  getParentX: () => 0,\n  getParentY: () => 0,\n  getParentWidth: () => 0,\n  getParentHeight: () => 0,\n  getPositon: () => [options.value.x,options.value.y],\n  closeOtherSubMenuWithTimeOut: () => {/* Do nothing */},\n  checkCloseOtherSubMenuTimeOut: () => false,\n  addOpenedSubMenu: () => {/* Do nothing */},\n  closeOtherSubMenu: () => {/* Do nothing */},\n  getParentContext: () => null,\n  getSubMenuInstanceContext: () => null,\n  getElement: () => null,\n  addChildMenuItem: () => {/* Do nothing */},\n  removeChildMenuItem: () => {/* Do nothing */},\n  markActiveMenuItem: () => {/* Do nothing */},\n  markThisOpenedByKeyBoard: () => {/* Do nothing */},\n  isOpenedByKeyBoardFlag: () => false,\n  isMenuItemDataCollectedFlag: () => false,\n} as SubMenuParentContext);\n\n//Expose instance function\ndefineExpose(instance);\n</script>\n\n<style>\n.mx-menu-ghost-host {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  top: 0;\n  overflow: hidden;\n  pointer-events: none;\n}\n.mx-menu-ghost-host.mx-fullscreen {\n  position: fixed;\n}\n</style>\n","<script lang=\"ts\">\nimport { defineComponent, h, Teleport, toRefs, ref } from 'vue'\nimport type { PropType, VNode } from 'vue'\nimport type { ContextMenuInstance, MenuOptions } from './ContextMenuDefine'\nimport { genContainer } from \"./ContextMenuUtils\";\nimport ContextSubMenuWrapperConstructor from './ContextSubMenuWrapper.vue'\n\nexport type GlobalHasSlot = (name: string) => boolean;\nexport type GlobalRenderSlot = (name: string, params: Record<string, unknown>) => VNode;\n\n/**\n * Context menu component\n */\nexport default defineComponent({\n  name: 'ContextMenu',\n  emits: [ 'update:show', 'close' ],\n  props: {\n    /**\n     * Menu options\n     */\n    options: {\n      type: Object as PropType<MenuOptions>,\n      default: null\n    },\n    /**\n     * Show menu?\n     */\n    show: {\n      type: Boolean,\n      default: false\n    },\n  },\n  setup(props, ctx) {\n\n    const {\n      options,\n      show,\n    } = toRefs(props);\n\n    const menuRef = ref<ContextMenuInstance | null>(null);\n\n    ctx.expose({\n      closeMenu: () => ctx.emit('update:show', false),\n      isClosed: () => !show.value,\n      getMenuRef: () => menuRef.value?.getMenuRef(),\n      getMenuDimensions: () => menuRef.value?.getMenuDimensions() ?? { width: 0, height: 0 },\n    });\n\n    return () => {  \n      const { isNew, container, eleId } = genContainer(options.value);\n      \n      return [\n        h(\n          Teleport,\n          { to: `#${eleId}` },\n          [\n            h(ContextSubMenuWrapperConstructor as unknown as string, {\n              ref: menuRef,\n              options: options,\n              show: show,\n              container: container,\n              isFullScreenContainer: !isNew,\n              onClose: (fromItem: undefined) => {\n                ctx.emit('update:show', false);\n                ctx.emit('close');\n                options.value.onClose?.(fromItem);\n              },\n            }, ctx.slots)\n          ]\n        )\n      ];\n    }\n  },\n})\n</script>\n","<script lang=\"ts\">\nimport { defineComponent, h, inject, ref, toRefs } from 'vue'\nimport type { PropType, Ref, SVGAttributes } from 'vue'\nimport ContextSubMenuConstructor from './ContextSubMenu.vue';\nimport ContextMenuItemConstructor from './ContextMenuItem.vue';\nimport type { MenuOptions } from './ContextMenuDefine';\n\nexport default defineComponent({\n  name: 'ContextMenuGroup',\n  props: {\n     /**\n     * Is this menu disabled? \n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n     /**\n     * Is this menu hidden? \n     */\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Is this menu disabled? \n     */\n    clickHandler: {\n      type: Function as PropType<() => void>,\n      default: null\n    },\n    /**\n     * Menu label\n     */\n    label: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Menu icon (for icon class)\n     */\n    icon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Custom icon library font class name.\n     * \n     * Only for css font icon, If you use the svg icon, you do not need to use this.\n     */\n    iconFontClass: {\n      type: String,\n      default: 'iconfont'\n    },\n    /**\n     * Is this menu item checked?\n     * \n     * The check mark are displayed on the left side of the icon, so it is not recommended to display the icon at the same time.\n     */\n     checked: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Shortcut key text display on the right.\n     * \n     * The shortcut keys here are only for display. You need to handle the key events by yourself.\n     */\n    shortcut: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Display icons use svg symbol (`<use xlink:href=\"#icon-symbol-name\">`) ， only valid when icon attribute is empty.\n     */\n    svgIcon: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The user-defined attribute of the svg tag, which is valid when using `svgIcon`.\n     */\n    svgProps: {\n      type: Object as PropType<SVGAttributes>,\n      default: null\n    },\n    /**\n     * Should a fixed-width icon area be reserved for menu items without icon. (this item)\n     * \n     * Default is true .\n     * \n     * The width of icon area can be override with css var `--mx-menu-placeholder-width`.\n     */\n    preserveIconWidth: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Show right arrow on this menu?\n     */\n    showRightArrow: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Should close menu when Click this menu item ?\n     */\n    clickClose: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * By default, the submenu will automatically adjust its position to prevent it overflow the container.\n     * \n     * If you allow menu overflow containers, you can set this to false.\n     * \n     * Default is inherit from `MenuOptions.adjustPosition`  .\n     */\n    adjustSubMenuPosition: {\n      type: Boolean,\n      default: undefined\n    },\n    /**\n     * Max width of submenu\n     */\n    maxWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n    /**\n     * Min width of submenu\n     */\n    minWidth: {\n      type: [String, Number],\n      default: 0,\n    },\n  },\n  setup(props, ctx) {\n    \n    const options = inject('globalOptions') as Ref<MenuOptions>;\n    const { adjustSubMenuPosition, maxWidth, minWidth } = toRefs(props);\n    const adjustSubMenuPositionValue = typeof adjustSubMenuPosition.value !== 'undefined' ? adjustSubMenuPosition.value : options.value.adjustPosition;\n    \n    const subMenuRef = ref();\n    const itemRef = ref();\n\n    ctx.expose({\n      getSubMenuRef: () => subMenuRef.value,\n      getMenuItemRef: () => itemRef.value,\n    })\n\n    //Create Item\n    return () => h(ContextMenuItemConstructor, {\n      ...props,\n      ref: itemRef,\n      showRightArrow: true,\n      maxWidth: undefined,\n      minWidth: undefined,\n      adjustSubMenuPosition: undefined,\n      hasChildren: typeof ctx.slots.default !== undefined,\n    }, ctx.slots.default ? {\n      //Create SubMenu\n      submenu: () => h(ContextSubMenuConstructor, {\n        ref: subMenuRef,\n        maxWidth: maxWidth.value,\n        minWidth: minWidth.value,\n        adjustPosition: adjustSubMenuPositionValue,\n      }, {\n        default: ctx.slots.default,\n      })\n    } : undefined);\n  },\n})\n</script>","import { h, ref, render } from \"vue\";\nimport type { App, Slot } from \"vue\";\nimport type { ContextMenuInstance } from \"./ContextMenuDefine\";\nimport type { MenuOptions } from \"./ContextMenuDefine\";\nimport { checkOpenedContextMenu, closeContextMenu } from \"./ContextMenuMutex\";\nimport { genContainer, transformMenuPosition } from \"./ContextMenuUtils\";\nimport ContextMenuConstructor from './ContextMenu.vue'\nimport ContextSubMenuWrapperConstructor from './ContextSubMenuWrapper.vue'\nimport ContextSubMenuConstructor from './ContextSubMenu.vue'\nimport ContextMenuItemConstructor from './ContextMenuItem.vue'\nimport ContextMenuGroupConstructor from './ContextMenuGroup.vue'\nimport ContextMenuSeparatorConstructor from './ContextMenuSeparator.vue'\n\nfunction initInstance(\n  options: MenuOptions, \n  container: HTMLElement, \n  isNew: boolean, \n  customSlots?: Record<string, Slot>,\n) {\n  const show = ref(true);\n  const vnode = h(ContextSubMenuWrapperConstructor, { \n    options: options,\n    show: show,\n    container: container,\n    isFullScreenContainer: !isNew,\n    onCloseAnimFinished: () => {\n      render(null, container);\n    },\n    onClose: (item: undefined) => {\n      options.onClose?.(item);\n      show.value = false;\n    },\n  }, customSlots);\n  render(vnode, container);\n  return vnode.component;\n}\n\n//Show global contextmenu\nfunction $contextmenu(options : MenuOptions, customSlots?: Record<string, Slot>) {\n  const container = genContainer(options);\n  const component = initInstance(options, container.container, container.isNew, customSlots);\n  return (component as unknown as Record<string, unknown>).exposed as ContextMenuInstance;\n}\n\nexport default {\n  /**\n   * For Vue install\n   * @param app \n   */\n  install(app: App<Element>) : void {\n    app.config.globalProperties.$contextmenu = $contextmenu;\n    app.component('ContextMenu', ContextMenuConstructor);\n    app.component('ContextMenuItem', ContextMenuItemConstructor);\n    app.component('ContextMenuGroup', ContextMenuGroupConstructor);\n    app.component('ContextMenuSperator', ContextMenuSeparatorConstructor);\n    app.component('ContextMenuSeparator', ContextMenuSeparatorConstructor);\n    app.component('ContextSubMenu', ContextSubMenuConstructor);\n  },\n  /**\n   * Show a ContextMenu in page, same as `this.$contextmenu`\n   * \n   * For example:\n   * \n   * ```ts\n   * onContextMenu(e : MouseEvent) {\n   *   //prevent the browser's default menu\n   *   e.preventDefault();\n   *   //show your menu\n   *   ContextMenu.showContextMenu({\n   *     x: e.x,\n   *     y: e.y,\n   *     items: [\n   *       { \n   *         label: \"A menu item\", \n   *         onClick: () => {\n   *           alert(\"You click a menu item\");\n   *         }\n   *       },\n   *       { \n   *         label: \"A submenu\", \n   *         children: [\n   *           { label: \"Item1\" },\n   *           { label: \"Item2\" },\n   *           { label: \"Item3\" },\n   *         ]\n   *       },\n   *     ]\n   *   }); \n   * }\n   * ```\n   * \n   * You can pass customSlots to custom rendering this menu.\n   * \n   * For example, custom rendering #itemRender and #separatorRender:\n   * ```ts\n   *   ContextMenu.showContextMenu({\n   *     ...\n   *   } as MenuOptions, {\n   *     //Use slot in function mode\n   *     itemRender: ({ disabled, label, icon, showRightArrow, onClick, onMouseEnter }) => [  h('div', { \n   *       class: 'my-menu-item'+(disabled?' disabled':''),\n   *       onMouseenter: onMouseEnter,\n   *       onClick: onClick,\n   *     }, [\n   *       icon ? h('img', { src: icon }) : h('div', { class: 'icon-place-holder' }),\n   *       h('span', label),\n   *       showRightArrow ? h('span', { class: 'right-arraw' }, '>>') : h('div'),\n   *     ]) ],\n   *     separatorRender: () => [ h('div', { class: 'my-menu-sperator' }) ]\n   *   })\n   * ```\n   * \n   * @param options The options of ContextMenu\n   * @param customSlots You can provide some custom slots to customize the rendering style of the menu. These slots are the same as the slots of component ContextMenu.\n   * @returns Menu instance \n   */\n  showContextMenu(options : MenuOptions, customSlots?: Record<string, Slot>) : ContextMenuInstance {\n    return $contextmenu(options, customSlots);\n  },\n  /**\n   * Get if there is a menu open now.\n   */\n  isAnyContextMenuOpen() {\n    return checkOpenedContextMenu();\n  },\n  /**\n   * Close the currently open menu\n   */\n  closeContextMenu,\n  //Tools\n  transformMenuPosition,\n}\n\n","<template>\n  <svg class=\"mx-menu-bar-icon-menu\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\"><path d=\"M133.310936 296.552327l757.206115 0c19.781623 0 35.950949-16.169326 35.950949-35.950949 0-19.781623-15.997312-35.950949-35.950949-35.950949L133.310936 224.650428c-19.781623 0-35.950949 16.169326-35.950949 35.950949C97.359987 280.383 113.529313 296.552327 133.310936 296.552327z\"></path><path d=\"M890.51705 476.135058 133.310936 476.135058c-19.781623 0-35.950949 16.169326-35.950949 35.950949 0 19.781623 16.169326 35.950949 35.950949 35.950949l757.206115 0c19.781623 0 35.950949-16.169326 35.950949-35.950949C926.467999 492.304384 910.298673 476.135058 890.51705 476.135058z\"></path><path d=\"M890.51705 727.447673 133.310936 727.447673c-19.781623 0-35.950949 15.997312-35.950949 35.950949s16.169326 35.950949 35.950949 35.950949l757.206115 0c19.781623 0 35.950949-15.997312 35.950949-35.950949S910.298673 727.447673 890.51705 727.447673z\"></path></svg>\n</template>","<template>\n  <div \n    :class=\"[ \n      'mx-menu-bar',\n      options.theme ?? '',\n      options.mini ? 'mini' : '',\n    ]\"\n    @focus=\"onFocus\"\n    @blur=\"onBlur\"\n  >\n    <slot name=\"prefix\" />\n    \n    <div \n      v-if=\"options.mini\"\n      ref=\"menuBarContent\"\n      class=\"mx-menu-bar-content\"\n    >\n      <div \n        class=\"mx-menu-bar-item\"\n        @click=\"onItemClick(0, null)\"\n      >\n        <MenuBarIconMenu />\n      </div>\n    </div>\n    <div \n      v-else\n      ref=\"menuBarContent\"\n      class=\"mx-menu-bar-content\"\n    >\n      <div \n        v-for=\"(item, key) in menuItems\" \n        :key=\"key\"\n        :class=\"[\n          'mx-menu-bar-item',\n          item == menuActive ? 'active' : '',\n        ]\"\n        @click=\"onItemClick(key, item as MenuItem)\"\n        @mouseenter=\"onItemEnter(key, item as MenuItem)\"\n      >\n        {{ item.label }}\n      </div>\n    </div>\n    <slot name=\"suffix\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n/**\n * Menu bar component\n */\nimport { ref, type PropType, onMounted, watch } from 'vue';\nimport type { MenuBarOptions } from './MenuBar';\nimport type { ContextMenuInstance, MenuItem } from './ContextMenuDefine';\nimport { getTop, getLeft } from './ContextMenuUtils';\nimport ContextMenu from './ContextMenuInstance';\nimport MenuBarIconMenu from './MenuBarIconMenu.vue';\n\nconst props = defineProps({\n  /**\n   * Menu options\n   */\n  options: {\n    type: Object as PropType<MenuBarOptions>,\n    default: null\n  }\n});\n\nconst menuBarContent = ref<HTMLDivElement>();\nconst menuBarActive = ref(false);\nconst menuItems = ref<MenuItem[]>([]);\nconst menuActive = ref<MenuItem|null>(null);\n\nfunction onFocus() {\n  menuBarActive.value = true;\n}\nfunction onBlur() {\n  menuBarActive.value = false;\n}\n\nonMounted(() => {\n  (menuItems.value as MenuItem[]) = props.options.items || [];\n});\nwatch(() => props.options, () => {\n  (menuItems.value as MenuItem[]) = props.options.items || [];\n});\n\nlet currentMenu : ContextMenuInstance|null = null;\nlet currentMenuIndex = -1;\n\nfunction showNextSubMenu() {\n  if (currentMenuIndex < menuItems.value.length - 1)\n    currentMenuIndex++;\n  else \n    currentMenuIndex = 0;\n  showSubMenu(currentMenuIndex, menuItems.value[currentMenuIndex] as MenuItem);\n}\nfunction showPrevSubMenu() {\n  if (currentMenuIndex > 0)\n    currentMenuIndex--;\n  else \n    currentMenuIndex = menuItems.value.length - 1;\n  showSubMenu(currentMenuIndex, menuItems.value[currentMenuIndex] as MenuItem);\n}\nfunction getMenuShowPos(ele: HTMLElement) {\n  const showDirection = props.options.barPopDirection ?? 'bl';\n  let x = 0; \n  let y = 0;\n  if (showDirection.startsWith('b'))\n    y = getTop(ele) + ele.offsetHeight;\n  else if (showDirection.startsWith('t'))\n    y = getTop(ele);\n  else \n    y = getTop(ele) + ele.offsetHeight / 2;\n\n  if (showDirection.endsWith('l'))\n    x = getLeft(ele);\n  else if (showDirection.startsWith('r'))\n    x = getLeft(ele) + ele.offsetWidth;\n  else \n    x = getLeft(ele) + ele.offsetWidth / 2;\n\n  return { x, y }\n}\nfunction showSubMenu(index: number, item: MenuItem) {\n  currentMenuIndex = index;\n  if (!item.children)\n    return;\n  if (currentMenu) {\n    currentMenu.closeMenu();\n    currentMenu = null;\n    menuBarActive.value = true;\n  }\n  (menuActive.value as MenuItem) = item;\n  const ele = menuBarContent.value?.children[index] as HTMLElement;\n  if (ele) {\n    const { x, y } = getMenuShowPos(ele);\n\n    currentMenu = ContextMenu.showContextMenu({\n      ...props.options,\n      items: item.children,\n      x,\n      y,\n      onKeyFocusMoveLeft() {\n        showPrevSubMenu();\n      },\n      onKeyFocusMoveRight() {\n        showNextSubMenu();\n      },\n      onClose() {\n        if (menuActive.value == item) {\n          menuBarActive.value = false;\n          menuActive.value = null;\n        }\n      },\n    });\n  }\n}\nfunction showAllSubMenu() {\n  currentMenuIndex = 0;\n  const ele = menuBarContent.value as HTMLElement;\n  if (ele) {\n    const { x, y } = getMenuShowPos(ele);\n    currentMenu = ContextMenu.showContextMenu({\n      ...props.options,\n      x,\n      y,\n    });\n  }\n}\n\nfunction onItemClick(index: number, item: MenuItem|null) {\n  if (item) {\n    menuBarActive.value = true;\n    showSubMenu(index, item);\n    if (\n      item.onClick && (\n      (item.clickableWhenHasChildren === true && item.children && item.children.length > 0)\n      || !item.children || item.children.length === 0)\n    )\n      item.onClick();\n  } else {\n    showAllSubMenu();\n  }\n}\nfunction onItemEnter(index: number, item: MenuItem) {\n  if (menuBarActive.value) {\n    showSubMenu(index, item);\n  }\n}\n\n</script>\n\n<style lang=\"scss\">\n@use './MenuBar.scss' as *;\n</style>"],"names":["currentOpenedContextMenu","checkOpenedContextMenu","addOpenedContextMenu","inst","closeContextMenu","removeOpenedContextMenu","MenuConstOptions","getTop","stopNode","offset","getLeft","transformMenuPosition","offsetX","offsetY","container","DEFAULT_CONTAINER_ID","GEN_CONTAINER_ID","containerId","genContainer","options","getContainer","zIndex","eleId","solveNumberOrStringSize","value","VNodeRender","defineComponent","props","vnode","data","toRefs","_hoisted_1","_hoisted_3","_cache","__props","emit","__emit","clickHandler","clickClose","clickableWhenHasChildren","disabled","hidden","label","icon","iconFontClass","showRightArrow","shortcut","hasChildren","showSubMenu","ref","keyBoardFocusMenu","menuItemRef","inject","globalHasSlot","globalRenderSlot","globalCloseMenu","menuContext","menuItemInstance","onMouseEnter","onClick","provide","onMounted","nextTick","index","parentEl","indexCounting","i","el","onBeforeUnmount","e","currentTarget","closeSubMenu","getItemDataForChildren","__expose","_sfc_main$6","_component_VNodeRender","_resolveComponent","_ctx","_openBlock","_createElementBlock","_sfc_main$5","ContextMenuItem","ContextMenuSeparator","ContextMenuIconRight","parentContext","getParentWidth","getParentHeight","getZoom","adjustPosition","submenuRoot","menu","scroll","upScrollButton","openedSubMenuClose","globalSetCurrentSubMenu","menuItems","currentItem","leaveTimeout","blurCurrentMenu","setAndFocusNotDisableItem","isDown","startIndex","setAndFocusCurrentMenu","overflow","element","scrollValue","scrollHeight","maxHeight","onSubMenuBodyClick","thisMenuInsContext","parent","thisMenuContext","conext","_a","isOpenedByKeyBoardFlag","isMenuItemDataCollectedFlag","position","closeFn","k","item","updateState","exposeContext","v","x","y","onScroll","down","onMouseWhellMx","onMouseWhell","pos","menuEl","parentWidth","parentHeight","fillPaddingX","fillPaddingYAlways","_b","fillPaddingY","windowHeight","windowWidth","avliableWidth","avliableHeight","absX","absY","xOverflow","yOverflow","ox","maxSubWidth","oy","maxSubHeight","_hoisted_2","minWidth","args","_createElementVNode","_normalizeClass","_createCommentVNode","_Fragment","_renderList","_createBlock","_component_ContextMenuSeparator","_component_ContextMenuItem","_createSlots","_withCtx","_createVNode","_component_ContextSubMenu","_withDirectives","$event","_vShow","slots","useSlots","submenuInstance","show","openMenu","removeBodyEvents","watch","instance","closeMenu","isClosed","closed","installBodyEvents","fromItem","onBodyClick","onBodyScroll","onMenuKeyDown","currentOpenedMenu","handled","_c","_d","_e","_f","_g","_i","_h","_j","_l","_k","_m","checkTargetAndClose","target","name","params","renderSlot","h","_sfc_main$3","ctx","menuRef","isNew","Teleport","ContextSubMenuWrapperConstructor","_sfc_main$2","adjustSubMenuPosition","maxWidth","adjustSubMenuPositionValue","subMenuRef","itemRef","ContextMenuItemConstructor","ContextSubMenuConstructor","initInstance","customSlots","render","$contextmenu","Inst","app","ContextMenuConstructor","ContextMenuGroupConstructor","ContextMenuSeparatorConstructor","_hoisted_5","menuBarContent","menuBarActive","menuActive","onFocus","onBlur","currentMenu","currentMenuIndex","showNextSubMenu","showPrevSubMenu","getMenuShowPos","ele","showDirection","ContextMenu","showAllSubMenu","onItemClick","onItemEnter"],"mappings":"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"}
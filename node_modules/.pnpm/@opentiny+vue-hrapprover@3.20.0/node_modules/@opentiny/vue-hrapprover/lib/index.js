function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/hrapprover/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var Hrapprover = defineComponent({
  name: $prefix + "Hrapprover",
  props: _extends({}, $props, {
    modelValue: String,
    approvalPerson: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: false
    },
    category: {
      type: String,
      default: "0303"
    },
    title: String,
    fetchHrapprover: Function,
    fetchDeptList: Function,
    fetchDeptByValue: Function,
    fetchDept: Function,
    displayOnly: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
Hrapprover.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
Hrapprover.install = function(Vue) {
  Vue.component(Hrapprover.name, Hrapprover);
};
Hrapprover.version = version;
export {
  Hrapprover as default
};

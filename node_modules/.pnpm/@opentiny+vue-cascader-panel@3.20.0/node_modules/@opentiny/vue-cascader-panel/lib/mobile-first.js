import { defineComponent, $prefix, $props, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/cascader-panel/vue';
import CascaderMenu from '@opentiny/vue-cascader-menu';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, Fragment, renderList, createBlock } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var _sfc_main = defineComponent({
  name: $prefix + "CascaderPanel",
  components: {
    CascaderMenu
  },
  inheritAttrs: false,
  emits: ["update:modelValue", "change", "close", "expand-change", "active-item-change"],
  props: _extends({}, $props, {
    modelValue: {},
    options: Array,
    props: Object,
    border: {
      type: Boolean,
      default: true
    },
    renderLabel: Function
  }),
  inject: ["cascaderRoot"],
  provide: function provide() {
    return {
      panel: this
    };
  },
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api
    });
  }
});
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_cascader_menu = resolveComponent("cascader-menu");
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-cascader-panel",
      class: normalizeClass(["flex rounded text-xs", _ctx.border ? "border border-solid border-color-border" : ""]),
      onKeydown: _cache[0] || (_cache[0] = function() {
        return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);
      })
    },
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.menus, function(menu, index) {
        return openBlock(), createBlock(_component_cascader_menu, {
          tiny_mode: "mobile-first",
          index,
          key: index,
          nodes: menu
        }, null, 8, ["index", "nodes"]);
      }),
      128
      /* KEYED_FRAGMENT */
    ))],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

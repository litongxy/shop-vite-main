import { defineComponent, props, directive, setup, useBreakpoint, hooks } from '@opentiny/vue-common';
import Input from '@opentiny/vue-input';
import { IconClose, IconChevronDown, IconChevronUp, IconYes, IconChevronRight } from '@opentiny/vue-icon';
import CascaderMobile from '@opentiny/vue-cascader-mobile';
import { renderless, api } from '@opentiny/vue-renderless/cascader/vue';
import Clickoutside from '@opentiny/vue-renderless/common/deps/clickoutside';
import Scrollbar from '@opentiny/vue-scrollbar';
import CascaderPanel from '@opentiny/vue-cascader-panel';
import Tooltip from '@opentiny/vue-tooltip';
import { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, mergeProps, createElementVNode, createVNode, withCtx, createBlock, withModifiers, resolveDynamicComponent, normalizeClass, withKeys, vModelText, createCommentVNode, Transition, vShow, createSlots, renderSlot, toDisplayString, Fragment, renderList } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var classes = {
  "type-medium": "text-sm leading-9",
  "type-small": "text-xs leading-8",
  "type-mini": "text-xs leading-7",
  "show-auto-width": "w-full"
};
var _sfc_main$1 = defineComponent({
  props: [].concat(props, ["modelValue", "options", "props", "size", "placeholder", "disabled", "clearable", "filterable", "filterMethod", "separator", "showAllLevels", "collapseTags", "debounce", "beforeFilter", "popperClass", "placement", "popperOptions", "visibleArrow", "offset", "boundariesPadding", "arrowOffset", "popperAppendToBody", "autoSize", "displayOnly", "shape", "label", "tip", "hoverExpand"]),
  directives: directive({
    Clickoutside
  }),
  inheritAttrs: false,
  provide: function provide() {
    return {
      cascaderRoot: this
    };
  },
  components: {
    TinyInput: Input,
    TinyScrollbar: Scrollbar,
    TinyCascaderPanel: CascaderPanel,
    IconClose: IconClose(),
    IconChevronDown: IconChevronDown(),
    IconChevronUp: IconChevronUp(),
    IconYes: IconYes(),
    TinyTooltip: Tooltip
  },
  emits: ["update:modelValue", "change", "visible-change", "focus", "blur", "expand-change", "active-item-change", "remove-tag", "created"],
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      classes
    });
  }
});
var _hoisted_1$1 = {
  ref: "reference",
  "data-tag": "tiny-cascader-content"
};
var _hoisted_2 = {
  key: 0,
  ref: "tags-content",
  "data-tag": "tiny-cascader__tags"
};
var _hoisted_3 = ["placeholder"];
var _hoisted_4 = ["onClick"];
var _hoisted_5 = {
  "data-tag": "tiny-cascader__empty-text",
  class: "my-2.5 mx-0 text-color-text-placeholder"
};
function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_close = resolveComponent("icon-close");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_tiny_cascader_panel = resolveComponent("tiny-cascader-panel");
  var _component_icon_yes = resolveComponent("icon-yes");
  var _component_tiny_scrollbar = resolveComponent("tiny-scrollbar");
  var _directive_clickoutside = resolveDirective("clickoutside");
  return withDirectives((openBlock(), createElementBlock(
    "div",
    mergeProps({
      "data-tag": "tiny-cascader",
      class: _ctx.m("inline-block relative text-sm", _ctx.gcls("type-${state.realSize}"), _ctx.gcls(_ctx.state.showAutoWidth ? "show-auto-width" : "")),
      onMouseenter: _cache[11] || (_cache[11] = function($event) {
        return _ctx.state.inputHover = true;
      }),
      onMouseleave: _cache[12] || (_cache[12] = function($event) {
        return _ctx.state.inputHover = false;
      }),
      onClick: _cache[13] || (_cache[13] = function() {
        return _ctx.toggleDropDownVisible(_ctx.state.readonly ? void 0 : true);
      }),
      onKeydown: _cache[14] || (_cache[14] = function() {
        return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);
      })
    }, _ctx.a(_ctx.$attrs, ["class", "style"], true)),
    [createElementVNode(
      "div",
      _hoisted_1$1,
      [createVNode(_component_tiny_input, {
        ref: "input",
        "model-value": _ctx.state.multiple ? _ctx.state.presentText : _ctx.state.inputValue,
        size: _ctx.state.realSize,
        placeholder: _ctx.state.placeholder,
        readonly: _ctx.state.readonly,
        disabled: _ctx.state.isDisabled,
        "display-only": _ctx.displayOnly,
        "display-only-content": _ctx.state.multiple ? _ctx.state.presentTags.map(function(item) {
          return item.text;
        }).join("; ") : "",
        "validate-event": false,
        onFocus: _ctx.handleFocus,
        onBlur: _ctx.handleBlur,
        "onUpdate:modelValue": _ctx.handleInput
      }, {
        suffix: withCtx(function() {
          return [_ctx.state.clearBtnVisible ? (openBlock(), createBlock(_component_icon_close, {
            key: "clear",
            onClick: withModifiers(_ctx.handleClear, ["stop"])
          }, null, 8, ["onClick"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.dropDownVisible ? "icon-chevron-up" : "icon-chevron-down"), {
            key: "arrow-down",
            onClick: _cache[0] || (_cache[0] = withModifiers(function($event) {
              return _ctx.toggleDropDownVisible();
            }, ["stop"])),
            class: normalizeClass({
              "fill-color-brand": _ctx.state.dropDownVisible
            })
          }, null, 8, ["class"]))];
        }),
        _: 1
        /* STABLE */
      }, 8, ["model-value", "size", "placeholder", "readonly", "disabled", "display-only", "display-only-content", "onFocus", "onBlur", "onUpdate:modelValue"]), _ctx.state.multiple && !_ctx.state.isDisplayOnly && !_ctx.shape ? (openBlock(), createElementBlock(
        "div",
        _hoisted_2,
        [_ctx.filterable && !_ctx.state.isDisabled ? withDirectives((openBlock(), createElementBlock("input", {
          key: 0,
          "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
            return _ctx.state.inputValue = $event;
          }),
          type: "text",
          "data-tag": "tiny-cascader__search-input",
          class: "flex-1 h-6 text-color-text-primary text-xs border-none outline-0 box-border",
          placeholder: _ctx.state.presentTags.length ? "" : _ctx.placeholder,
          onFocus: _cache[2] || (_cache[2] = function() {
            return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
          }),
          onBlur: _cache[3] || (_cache[3] = function() {
            return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
          }),
          onInput: _cache[4] || (_cache[4] = function(e) {
            return _ctx.handleInput(_ctx.state.inputValue, e);
          }),
          onClick: _cache[5] || (_cache[5] = withModifiers(function($event) {
            return _ctx.toggleDropDownVisible(true);
          }, ["stop"])),
          onKeydown: _cache[6] || (_cache[6] = withKeys(function() {
            return _ctx.handleDelete && _ctx.handleDelete.apply(_ctx, arguments);
          }, ["delete"]))
        }, null, 40, _hoisted_3)), [[vModelText, _ctx.state.inputValue, void 0, {
          trim: true
        }]]) : createCommentVNode("v-if", true)],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true)],
      512
      /* NEED_PATCH */
    ), createVNode(_component_tiny_tooltip, {
      ref: "tooltip",
      modelValue: _ctx.state.tooltipVisible,
      "onUpdate:modelValue": _cache[7] || (_cache[7] = function($event) {
        return _ctx.state.tooltipVisible = $event;
      }),
      manual: true,
      effect: "light",
      content: _ctx.state.tooltipContent,
      placement: "top"
    }, null, 8, ["modelValue", "content"]), createVNode(Transition, {
      name: "tiny-zoom-in-top",
      onAfterLeave: _ctx.handleDropdownLeave,
      persisted: ""
    }, {
      default: withCtx(function() {
        return [withDirectives(createElementVNode(
          "div",
          {
            ref: "popper",
            "data-tag": "tiny-cascader__dropdown",
            class: normalizeClass(_ctx.m(_ctx.popperClass, "my-1 mx-0 text-sm bg-color-bg-1 rounded shadow-md", _ctx.autoSize ? "bg-transparent border-none shadow-none" : "")),
            onMousedown: _cache[10] || (_cache[10] = withModifiers(function() {
            }, ["stop"]))
          },
          [withDirectives(createVNode(_component_tiny_cascader_panel, {
            ref: "panel",
            tiny_mode: "mobile-first",
            modelValue: _ctx.state.checkedValue,
            "onUpdate:modelValue": _cache[8] || (_cache[8] = function($event) {
              return _ctx.state.checkedValue = $event;
            }),
            options: _ctx.options,
            props: _ctx.state.config,
            border: false,
            "render-label": _ctx.slots.default,
            onExpandChange: _ctx.handleExpandChange,
            onClose: _cache[9] || (_cache[9] = function($event) {
              return _ctx.toggleDropDownVisible(false);
            })
          }, null, 8, ["modelValue", "options", "props", "render-label", "onExpandChange"]), [[vShow, !_ctx.state.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_tiny_scrollbar, {
            key: 0,
            ref: "suggestionPanel",
            tag: "div",
            "data-tag": "tiny-cascader__suggestion-panel",
            "wrap-class": "overflow-auto pr-2 pb-2",
            class: "bg-color-bg-1 border border-solid border-color-border-separator rounded",
            "view-class": "tiny-cascader__suggestion-list m-0 py-1.5 px-0 text-sm text-color-text-primary text-center",
            onKeydown: _ctx.handleSuggestionKeyDown
          }, createSlots({
            default: withCtx(function() {
              return [!_ctx.state.suggestions.length ? renderSlot(_ctx.$slots, "empty", {
                key: 0
              }, function() {
                return [createElementVNode(
                  "div",
                  _hoisted_5,
                  toDisplayString(_ctx.t("ui.cascader.noMatch")),
                  1
                  /* TEXT */
                )];
              }) : createCommentVNode("v-if", true)];
            }),
            _: 2
            /* DYNAMIC */
          }, [_ctx.state.suggestions.length ? {
            name: "default",
            fn: withCtx(function() {
              return [(openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList(_ctx.state.suggestions, function(item, index) {
                  return openBlock(), createElementBlock("div", {
                    key: item.uid,
                    "data-tag": "tiny-cascader__suggestion-item",
                    class: normalizeClass(["flex justify-between items-center h-8 py-0 px-2 text-xs text-color-text-primary", "text-left outline-0 cursor-pointer", item.checked ? "text-color-brand-hover font-bold" : ""]),
                    tabindex: -1,
                    onClick: function onClick($event) {
                      return _ctx.handleSuggestionClick(index);
                    }
                  }, [createElementVNode(
                    "span",
                    null,
                    toDisplayString(item.text),
                    1
                    /* TEXT */
                  ), item.checked ? (openBlock(), createBlock(_component_icon_yes, {
                    key: 0,
                    class: normalizeClass(item.checked ? "fill-color-icon-hover" : "")
                  }, null, 8, ["class"])) : createCommentVNode("v-if", true)], 10, _hoisted_4);
                }),
                128
                /* KEYED_FRAGMENT */
              ))];
            }),
            key: "0"
          } : void 0]), 1032, ["onKeydown"])), [[vShow, _ctx.state.filtering]]) : createCommentVNode("v-if", true)],
          34
          /* CLASS, NEED_HYDRATION */
        ), [[vShow, _ctx.state.dropDownVisible]])];
      }),
      _: 3
      /* FORWARDED */
    }, 8, ["onAfterLeave"])],
    16
    /* FULL_PROPS */
  )), [[_directive_clickoutside, function() {
    return _ctx.toggleDropDownVisible(false);
  }]]);
}
var PcFirst = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
var _sfc_main = defineComponent({
  props: [].concat(props, ["modelValue", "options", "props", "size", "placeholder", "disabled", "clearable", "filterable", "filterMethod", "separator", "showAllLevels", "collapseTags", "debounce", "beforeFilter", "popperClass", "placement", "popperOptions", "visibleArrow", "offset", "boundariesPadding", "arrowOffset", "popperAppendToBody", "autoSize", "displayOnly", "shape", "label", "tip", "hoverExpand", "title", "showHeader", "levelTitle"]),
  inheritAttrs: false,
  components: {
    TinyCascaderMobile: CascaderMobile,
    TinyPcFirst: PcFirst,
    TinyInput: Input,
    IconChevronRight: IconChevronRight()
  },
  emits: ["update:modelValue", "change", "visible-change", "focus", "blur", "expand-change", "active-item-change", "remove-tag", "created"],
  setup: function setup2(props2, ctx) {
    var bp = useBreakpoint().current;
    var visible = hooks.ref(false);
    var showText = hooks.ref("");
    var computedMobileProp = hooks.computed(function() {
      var mobileProp = hooks.reactive({
        _constants: props2._constants,
        data: props2.options,
        ellipsis: props2.ellipsis,
        placeholder: Array.isArray(props2.levelTitle) && props2.levelTitle.length ? props2.levelTitle : props2.placeholder,
        // 未传入有效的 levelTitle,则使用默认的placeholder
        title: props2.title,
        // 外层需要补充
        valueField: props2.props.value || "value",
        textField: props2.props.label || "label",
        textField2: props2.props.textField2 || "",
        // 外层props需要补充2,3属性
        textField3: props2.props.textField3 || "",
        childrenField: props2.props.children || "children",
        textSplit: props2.separator,
        showHeader: props2.showHeader,
        // 外层需要补充
        multiple: false,
        // 不支持多选
        searchConfig: {
          filterable: props2.filterable,
          filterMethod: props2.filterMethod
        },
        // 外层需要补充
        nodeConfig: {
          lazy: props2.props.lazy || false,
          load: props2.props.lazyLoad || null,
          isLeaf: props2.props.isLeaf || "leaf",
          checkStrictly: props2.props.checkStrictly || false,
          afterLoad: props2.props.afterLoad || null,
          // 外层props需要补充以下属性
          currentNodeKey: props2.props.currentNodeKey || null,
          checkDescendants: props2.props.checkDescendants || null,
          defaultCheckedKeys: props2.props.defaultCheckedKeys || null,
          defaultExpandedKeys: props2.props.defaultExpandedKeys || null,
          autoExpandParent: props2.props.autoExpandParent || null,
          defaultExpandAll: props2.props.defaultExpandAll || null,
          filterNodeMethod: props2.props.filterNodeMethod || null
        }
      });
      return mobileProp;
    });
    var updateValue = function updateValue2(value) {
      ctx.emit("update:modelValue", value);
      visible.value = false;
    };
    var updateText = function updateText2(value) {
      showText.value = value;
    };
    return {
      bp,
      visible,
      showText,
      computedMobileProp,
      updateValue,
      updateText
    };
  }
});
var _hoisted_1 = {
  key: 1
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_pc_first = resolveComponent("tiny-pc-first");
  var _component_icon_chevron_right = resolveComponent("icon-chevron-right");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_cascader_mobile = resolveComponent("tiny-cascader-mobile");
  return _ctx.bp !== "default" ? (openBlock(), createBlock(_component_tiny_pc_first, mergeProps({
    key: 0
  }, _ctx.$props, {
    "onUpdate:modelValue": _ctx.updateValue
  }), null, 16, ["onUpdate:modelValue"])) : (openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_input, {
    tiny_mode: "mobile-first",
    onClick: _cache[0] || (_cache[0] = function($event) {
      return _ctx.visible = true;
    }),
    "model-value": _ctx.showText,
    disabled: _ctx.disabled,
    placeholder: _ctx.placeholder,
    readonly: ""
  }, {
    suffix: withCtx(function() {
      return [createElementVNode("div", null, [createVNode(_component_icon_chevron_right, {
        class: normalizeClass([_ctx.visible ? "fill-color-brand" : "", _ctx.disabled ? "fill-color-icon-placeholder sm:fill-color-icon-secondary" : "fill-color-icon-secondary"]),
        "custom-class": "w-5 h-5"
      }, null, 8, ["class"])])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["model-value", "disabled", "placeholder"]), createVNode(_component_tiny_cascader_mobile, mergeProps({
    "model-value": _ctx.modelValue,
    "onUpdate:modelValue": _ctx.updateValue,
    onClose: _cache[1] || (_cache[1] = function($event) {
      return _ctx.visible = false;
    }),
    "onUpdate:text": _ctx.updateText,
    visible: _ctx.visible
  }, _ctx.computedMobileProp), null, 16, ["model-value", "onUpdate:modelValue", "onUpdate:text", "visible"])]));
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

import { renderless, api } from '@opentiny/vue-renderless/cascader/vue';
import { defineComponent, props, directive, setup } from '@opentiny/vue-common';
import Clickoutside from '@opentiny/vue-renderless/common/deps/clickoutside';
import { HighlightQuery } from '@opentiny/vue-directive';
import Input from '@opentiny/vue-input';
import Tag from '@opentiny/vue-tag';
import Scrollbar from '@opentiny/vue-scrollbar';
import CascaderPanel from '@opentiny/vue-cascader-panel';
import FilterBox from '@opentiny/vue-filter-box';
import Tooltip from '@opentiny/vue-tooltip';
import { iconClose, IconTriangleDown, IconUpWard, iconYes } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/cascader/index.css';
import { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, createBlock, withModifiers, createCommentVNode, createElementVNode, withCtx, resolveDynamicComponent, createTextVNode, toDisplayString, Fragment, renderList, withKeys, vModelText, createVNode, Transition, vShow, createSlots, renderSlot } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var _sfc_main = defineComponent({
  props: [].concat(props, ["modelValue", "options", "props", "size", "placeholder", "disabled", "clearable", "filterable", "filterMethod", "separator", "showAllLevels", "collapseTags", "debounce", "beforeFilter", "popperClass", "placement", "popperOptions", "visibleArrow", "offset", "boundariesPadding", "arrowOffset", "popperAppendToBody", "autoSize", "displayOnly", "shape", "label", "tip", "hoverExpand", "blank"]),
  emits: ["update:modelValue", "change", "visible-change", "focus", "blur", "expand-change", "active-item-change", "remove-tag", "created"],
  directives: _extends({}, directive({
    Clickoutside
  }), {
    HighlightQuery
  }),
  provide: function provide() {
    return {
      cascaderRoot: this
    };
  },
  components: {
    TinyInput: Input,
    TinyTag: Tag,
    TinyScrollbar: Scrollbar,
    TinyFilterBox: FilterBox,
    TinyCascaderPanel: CascaderPanel,
    IconClose: iconClose(),
    IconChevronDown: IconTriangleDown(),
    IconChevronUp: IconUpWard(),
    IconYes: iconYes(),
    TinyTooltip: Tooltip
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-cascader-content"
};
var _hoisted_2 = ["placeholder"];
var _hoisted_3 = ["onClick"];
var _hoisted_4 = {
  class: "tiny-cascader__empty-text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_filter_box = resolveComponent("tiny-filter-box");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_tag = resolveComponent("tiny-tag");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_tiny_cascader_panel = resolveComponent("tiny-cascader-panel");
  var _component_icon_yes = resolveComponent("icon-yes");
  var _component_tiny_scrollbar = resolveComponent("tiny-scrollbar");
  var _directive_highlight_query = resolveDirective("highlight-query");
  var _directive_clickoutside = resolveDirective("clickoutside");
  return withDirectives((openBlock(), createElementBlock(
    "div",
    {
      ref: "reference",
      class: normalizeClass(["tiny-cascader", _ctx.state.realSize && "tiny-cascader--" + _ctx.state.realSize, {
        "is-disabled": _ctx.state.isDisabled
      }, {
        "tiny-cascader-multiple": _ctx.state.multiple
      }, {
        "is-display-only": _ctx.state.isDisplayOnly
      }, {
        "show-auto-width": _ctx.state.showAutoWidth
      }, {
        "is-hover-expand": _ctx.hoverExpand
      }]),
      onMouseenter: _cache[11] || (_cache[11] = function($event) {
        return _ctx.state.inputHover = true;
      }),
      onMouseleave: _cache[12] || (_cache[12] = function($event) {
        return _ctx.state.inputHover = false;
      }),
      onClick: _cache[13] || (_cache[13] = function() {
        return _ctx.toggleDropDownVisible(_ctx.state.readonly ? void 0 : true);
      }),
      onKeydown: _cache[14] || (_cache[14] = function() {
        return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);
      })
    },
    [_ctx.shape === "filter" ? (openBlock(), createBlock(_component_tiny_filter_box, {
      key: 0,
      onClick: _cache[0] || (_cache[0] = withModifiers(function($event) {
        return _ctx.toggleDropDownVisible();
      }, ["stop"])),
      "show-close": _ctx.clearable,
      placeholder: _ctx.placeholder,
      disabled: _ctx.state.isDisabled,
      label: _ctx.label,
      tip: _ctx.tip,
      value: _ctx.state.multiple ? _ctx.state.presentTags.map(function(item) {
        return item.text;
      }).join("; ") : _ctx.state.inputValue,
      "drop-down-visible": _ctx.state.dropDownVisible,
      blank: _ctx.blank
    }, null, 8, ["show-close", "placeholder", "disabled", "label", "tip", "value", "drop-down-visible", "blank"])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_1, [_ctx.shape !== "filter" ? (openBlock(), createBlock(_component_tiny_input, {
      key: 0,
      ref: "input",
      "model-value": _ctx.state.multiple ? _ctx.state.presentText : _ctx.state.inputValue,
      size: _ctx.state.realSize,
      placeholder: _ctx.state.placeholder,
      readonly: _ctx.state.readonly,
      disabled: _ctx.state.isDisabled,
      "display-only": _ctx.displayOnly,
      "display-only-content": _ctx.state.multiple ? _ctx.state.presentTags.map(function(item) {
        return item.text;
      }).join("; ") : "",
      "validate-event": false,
      class: normalizeClass({
        "is-focus": _ctx.state.dropDownVisible
      }),
      onFocus: _ctx.handleFocus,
      onBlur: _ctx.handleBlur,
      "onUpdate:modelValue": _cache[2] || (_cache[2] = function(val) {
        return _ctx.handleInput(val, {});
      })
    }, {
      suffix: withCtx(function() {
        return [_ctx.state.clearBtnVisible ? (openBlock(), createBlock(_component_icon_close, {
          key: "clear",
          class: normalizeClass(["tiny-input__icon", "tiny-input__icon-close"]),
          onClick: withModifiers(_ctx.handleClear, ["stop"])
        }, null, 8, ["onClick"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.dropDownVisible ? "icon-chevron-up" : "icon-chevron-down"), {
          key: "arrow-down",
          class: normalizeClass(["tiny-input__icon", _ctx.state.dropDownVisible && "is-reverse"]),
          onClick: _cache[1] || (_cache[1] = withModifiers(function($event) {
            return _ctx.toggleDropDownVisible();
          }, ["stop"]))
        }, null, 8, ["class"]))];
      }),
      _: 1
      /* STABLE */
    }, 8, ["model-value", "size", "placeholder", "readonly", "disabled", "display-only", "display-only-content", "class", "onFocus", "onBlur"])) : createCommentVNode("v-if", true), _ctx.state.multiple && !_ctx.state.isDisplayOnly && !_ctx.shape ? (openBlock(), createElementBlock(
      "div",
      {
        key: 1,
        ref: "tags-content",
        class: normalizeClass(["tiny-cascader__tags", {
          "is-expand-content": _ctx.hoverExpand && !_ctx.state.isDisabled && (_ctx.state.inputHover || _ctx.state.dropDownVisible)
        }])
      },
      [_ctx.hoverExpand ? (openBlock(), createBlock(_component_tiny_tag, {
        key: 0,
        class: normalizeClass(["tiny-cascader__tags-collapse", {
          "is-hidden": _ctx.state.isHidden
        }]),
        type: _ctx.state.tagTypeWhenMultiple,
        closable: false,
        size: _ctx.state.tagSize
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            "+ " + toDisplayString(_ctx.state.collapseTagsLength),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["class", "type", "size"])) : createCommentVNode("v-if", true), (openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.presentTags, function(tag, index) {
          return openBlock(), createBlock(_component_tiny_tag, {
            key: tag.key,
            type: _ctx.state.tagTypeWhenMultiple,
            size: _ctx.state.tagSize,
            hit: tag.hitState,
            closable: tag.closable,
            "disable-transitions": "",
            onClose: function onClose($event) {
              return _ctx.deleteTag(index);
            },
            onMouseenter: _ctx.handleMouseenter,
            onMouseleave: _ctx.handleMouseleave
          }, {
            default: withCtx(function() {
              return [createElementVNode(
                "span",
                null,
                toDisplayString(tag.text),
                1
                /* TEXT */
              )];
            }),
            _: 2
            /* DYNAMIC */
          }, 1032, ["type", "size", "hit", "closable", "onClose", "onMouseenter", "onMouseleave"]);
        }),
        128
        /* KEYED_FRAGMENT */
      )), _ctx.filterable && !_ctx.state.isDisabled ? withDirectives((openBlock(), createElementBlock("input", {
        key: 1,
        "onUpdate:modelValue": _cache[3] || (_cache[3] = function($event) {
          return _ctx.state.inputValue = $event;
        }),
        type: "text",
        class: "tiny-cascader__search-input",
        placeholder: _ctx.state.presentTags.length ? "" : _ctx.placeholder,
        onInput: _cache[4] || (_cache[4] = function(e) {
          return _ctx.handleInput(_ctx.state.inputValue, e);
        }),
        onClick: _cache[5] || (_cache[5] = withModifiers(function($event) {
          return _ctx.toggleDropDownVisible(true);
        }, ["stop"])),
        onKeydown: _cache[6] || (_cache[6] = withKeys(function() {
          return _ctx.handleDelete && _ctx.handleDelete.apply(_ctx, arguments);
        }, ["delete"]))
      }, null, 40, _hoisted_2)), [[vModelText, _ctx.state.inputValue, void 0, {
        trim: true
      }]]) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true)]), createVNode(_component_tiny_tooltip, {
      ref: "tooltip",
      modelValue: _ctx.state.tooltipVisible,
      "onUpdate:modelValue": _cache[7] || (_cache[7] = function($event) {
        return _ctx.state.tooltipVisible = $event;
      }),
      manual: true,
      effect: "light",
      content: _ctx.state.tooltipContent,
      placement: "top"
    }, null, 8, ["modelValue", "content"]), createVNode(Transition, {
      name: "tiny-zoom-in-top",
      onAfterLeave: _ctx.handleDropdownLeave,
      persisted: ""
    }, {
      default: withCtx(function() {
        return [withDirectives(createElementVNode(
          "div",
          {
            ref: "popper",
            class: normalizeClass(["tiny-popper", "tiny-cascader-dropdown", "tiny-cascader__dropdown", _ctx.popperClass, {
              "is-auto-size": _ctx.autoSize,
              "is-multiple": _ctx.state.multiple
            }]),
            onMousedown: _cache[10] || (_cache[10] = withModifiers(function() {
            }, ["stop"]))
          },
          [withDirectives(createVNode(_component_tiny_cascader_panel, {
            ref: "panel",
            modelValue: _ctx.state.checkedValue,
            "onUpdate:modelValue": _cache[8] || (_cache[8] = function($event) {
              return _ctx.state.checkedValue = $event;
            }),
            options: _ctx.options,
            props: _ctx.state.config,
            border: false,
            "render-label": _ctx.slots.default,
            onExpandChange: _ctx.handleExpandChange,
            onClose: _cache[9] || (_cache[9] = function($event) {
              return _ctx.toggleDropDownVisible(false);
            }),
            onLoadData: _ctx.computePresentContent
          }, null, 8, ["modelValue", "options", "props", "render-label", "onExpandChange", "onLoadData"]), [[vShow, !_ctx.state.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_tiny_scrollbar, {
            key: 0,
            ref: "suggestionPanel",
            tag: "ul",
            class: "tiny-cascader__suggestion-panel",
            "view-class": "tiny-cascader__suggestion-list",
            onKeydown: _ctx.handleSuggestionKeyDown
          }, createSlots({
            default: withCtx(function() {
              return [!_ctx.state.suggestions.length ? renderSlot(_ctx.$slots, "empty", {
                key: 0
              }, function() {
                return [createElementVNode(
                  "li",
                  _hoisted_4,
                  toDisplayString(_ctx.t("ui.cascader.noMatch")),
                  1
                  /* TEXT */
                )];
              }) : createCommentVNode("v-if", true)];
            }),
            _: 2
            /* DYNAMIC */
          }, [_ctx.state.suggestions.length ? {
            name: "default",
            fn: withCtx(function() {
              return [(openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList(_ctx.state.suggestions, function(item, index) {
                  return withDirectives((openBlock(), createElementBlock("li", {
                    key: item.uid,
                    class: normalizeClass(["tiny-cascader__suggestion-item", item.checked && "is-checked"]),
                    tabindex: -1,
                    onClick: function onClick($event) {
                      return _ctx.handleSuggestionClick(index);
                    }
                  }, [renderSlot(_ctx.$slots, "filter", {
                    item: item.text
                  }, function() {
                    return [createElementVNode(
                      "span",
                      null,
                      toDisplayString(item.text),
                      1
                      /* TEXT */
                    )];
                  }), item.checked ? (openBlock(), createBlock(_component_icon_yes, {
                    key: 0,
                    class: "icon-check"
                  })) : createCommentVNode("v-if", true)], 10, _hoisted_3)), [[_directive_highlight_query, _ctx.state.multiple ? _ctx.state.presentText : _ctx.state.inputValue]]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))];
            }),
            key: "0"
          } : void 0]), 1032, ["onKeydown"])), [[vShow, _ctx.state.filtering]]) : createCommentVNode("v-if", true)],
          34
          /* CLASS, NEED_HYDRATION */
        ), [[vShow, _ctx.state.dropDownVisible]])];
      }),
      _: 3
      /* FORWARDED */
    }, 8, ["onAfterLeave"])],
    34
    /* CLASS, NEED_HYDRATION */
  )), [[_directive_clickoutside, function() {
    return _ctx.toggleDropDownVisible(false);
  }]]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

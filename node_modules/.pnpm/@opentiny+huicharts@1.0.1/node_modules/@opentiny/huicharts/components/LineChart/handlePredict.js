import Theme from '../../feature/token/index.js';
import cloneDeep from '../../util/cloneDeep.js';
import defendXSS from '../../util/defendXSS.js';
import chartToken from './chartToken.js';

/**
 * Copyright (c) 2024 - present OpenTiny HUICharts Authors.
 * Copyright (c) 2024 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */

function setDashedLineVisualMap(seriesIndex, lineColor, predictIndex) {
  var vm = {
    type: 'piecewise',
    seriesIndex: seriesIndex,
    dimension: 0,
    show: false,
    pieces: [{
      gte: 0,
      lte: predictIndex,
      color: Theme.config.visualMapPiecesColor
    }, {
      gt: predictIndex,
      color: lineColor
    }]
  };
  return vm;
}

// htmlString中判断item.color.colorStops是判读是否为折柱混合的图表，如果是需要从item.color.colorStops对象中获取颜色
function setToolTip(dataLength, fontColor, selfFormatter) {
  if (selfFormatter) {
    return selfFormatter;
  }
  var tipHtml = function tipHtml(params) {
    var htmlString = '';
    params.forEach(function (item, index) {
      // 只显示实线数据的tooltip
      if (index < dataLength) {
        if (index === 0) {
          htmlString += defendXSS(item.name) + "<br/>";
        }
        var color_ = item.color.colorStops;
        htmlString += "\n                    <div>\n                        <span style=\"display:inline-block;width:10px;\n                        height:10px;border-radius:5px;background-color:" + defendXSS(color_ ? color_[0].color : item.color) + ";\">\n                        </span>\n                        <span style=\"margin-left:5px;color:" + defendXSS(fontColor) + "\">\n                            <span style=\"display:inline-block;width:80px;\">" + defendXSS(item.seriesName) + "</span> \n                            <span style=\"font-weight:bold\">" + defendXSS(item.value) + "</span>\n                        </span>\n                    </div>\n                ";
      }
    });
    return htmlString;
  };
  return tipHtml;
}

/**
 * 针对预测值图表需求，图表需要进行特殊处理
 */
function handlePredict(option, predict, tipHtml, lineStyle) {
  if (!predict) return;
  // VisualMap只能处理线的颜色，不能处理面积的颜色
  var dashColor = Theme.config.visualMapDashColor;
  if (lineStyle && lineStyle.dashColor) {
    dashColor = lineStyle.dashColor;
  }
  // 取出数据
  var data = option.series;
  var dataLength = data.length;
  option.xAxis[0].data.length;
  var predictIndex = option.xAxis[0].data.indexOf(predict);
  // 制作虚线的series(只有匹配成功即predictIndex>-1时，才设置阈值线的样式)
  if (predictIndex > -1) {
    for (var index = 0; index < dataLength; index++) {
      var temp = cloneDeep(data[index]);
      temp.lineStyle = {
        // 为了视觉上看不见盖住粗细+1
        width: chartToken.lineWidth + 1,
        type: [5, 8]
      };
      temp.itemStyle = {
        opacity: 0
      };
      temp.silent = true;
      temp.showSymbol = false;
      temp.showAllSymbol = false;
      // 插入虚线的series
      option.series.push(temp);
      // 虚线颜色
      option.visualMap.push(setDashedLineVisualMap(dataLength + index, dashColor, predictIndex));
    }
  }
  // 修改tooltip,不显示虚线的tooltip
  option.tooltip.formatter = setToolTip(dataLength, Theme.config.tooltipTextColor, tipHtml);
}
export { handlePredict };

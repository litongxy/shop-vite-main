function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import tooltip from '../../option/config/tooltip/index.js';
import legend from '../../option/config/legend/index.js';
import defendXSS from '../../util/defendXSS.js';
import { CHART_TYPE } from '../../util/constants.js';

/**
 * Copyright (c) 2024 - present OpenTiny HUICharts Authors.
 * Copyright (c) 2024 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */

// 配置图表图例位置信息
function setLegend(iChartOption) {
  var _iChartOption$legend = iChartOption.legend,
    itemGap = _iChartOption$legend.itemGap,
    itemWidth = _iChartOption$legend.itemWidth,
    itemHeight = _iChartOption$legend.itemHeight;
  var chartLegend = legend(iChartOption);
  chartLegend.itemGap = itemGap !== undefined ? itemGap : 28;
  chartLegend.itemWidth = itemWidth || 14;
  chartLegend.itemHeight = itemHeight || 14;
  Object.assign(chartLegend, iChartOption.legend);
  return chartLegend;
}

// 配置鼠标悬浮提示框
function setTooltip(iChartOption) {
  var tipHtml = iChartOption.tipHtml;
  var formatter;
  if (tipHtml) {
    formatter = tipHtml;
  } else {
    formatter = function formatter(params) {
      var htmlString = '';
      var bgColor = params.data.borderColor || params.data.color;
      htmlString += "<span style=\"display:inline-block;margin-right:5px;border-radius:50%;width:10px;height:10px;background-color\n        :" + defendXSS(bgColor) + ";\">" + '</span>' + ("<span style=\"display:inline-block;margin-left:5px\">" + defendXSS(params.data.type) + "</span>") + '<br/>' + ("<span style=\"display:inline-block;\">" + defendXSS(params.data.label) + "</span>") + ("<span style=\"display:inline-block;margin-left:10px;\">" + defendXSS(params.data.value) + "</span>") + '<br/>';
      return htmlString;
    };
  }
  return _extends({}, tooltip(iChartOption, CHART_TYPE.ASSEMBLE_BUBBLE), {
    formatter: formatter,
    trigger: 'item'
  });
}
export { setLegend, setTooltip };

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { setTooltip } from './handleOptipn.js';
import { setSeries } from './handleSeries.js';
import { mergeSeries } from '../../util/merge.js';
import { CHART_TYPE } from '../../util/constants.js';

/**
 * Copyright (c) 2024 - present OpenTiny HUICharts Authors.
 * Copyright (c) 2024 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */
var TreeChart = /*#__PURE__*/function () {
  function TreeChart(iChartOption) {
    this.baseOption = {};
    this.iChartOption = {};
    this.iChartOption = iChartOption;
    // 根据 iChartOption 组装 baseOption
    this.updateOption();
  }
  var _proto = TreeChart.prototype;
  _proto.updateOption = function updateOption() {
    var iChartOption = this.iChartOption;
    var type = iChartOption.type;
    if (!type) {
      throw new Error('TreeChart must have a name');
    }
    // 图表的series
    setSeries(this.baseOption, type, iChartOption);
    //  图表鼠标悬浮提示框
    setTooltip(this.baseOption, iChartOption);
    mergeSeries(iChartOption, this.baseOption);
  };
  _proto.getOption = function getOption() {
    return this.baseOption;
  };
  _proto.setOption = function setOption() {};
  return TreeChart;
}();
_defineProperty(TreeChart, "name", CHART_TYPE.TREE);
export { TreeChart as default };

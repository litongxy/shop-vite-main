declare const _default: import("@vue/runtime-core").DefineComponent<{
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    currency: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchCurrency: FunctionConstructor;
    fields: ObjectConstructor;
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    popperClass: StringConstructor;
    size: StringConstructor;
    setDefault: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchDefaultCurrency: FunctionConstructor;
    setDefaultCurrency: FunctionConstructor;
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    mode: StringConstructor;
    multiple: {
        type: BooleanConstructor;
        default: boolean;
    };
    searchConfig: ObjectConstructor;
    dropStyle: {
        type: ObjectConstructor;
        default: () => {};
    };
    label: {
        type: StringConstructor;
        default: string;
    };
    tip: StringConstructor;
    shape: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    currency: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchCurrency: FunctionConstructor;
    fields: ObjectConstructor;
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    popperClass: StringConstructor;
    size: StringConstructor;
    setDefault: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchDefaultCurrency: FunctionConstructor;
    setDefaultCurrency: FunctionConstructor;
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    mode: StringConstructor;
    multiple: {
        type: BooleanConstructor;
        default: boolean;
    };
    searchConfig: ObjectConstructor;
    dropStyle: {
        type: ObjectConstructor;
        default: () => {};
    };
    label: {
        type: StringConstructor;
        default: string;
    };
    tip: StringConstructor;
    shape: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    label: string;
    disabled: boolean;
    tiny_mode_root: boolean;
    popperAppendToBody: boolean;
    visible: boolean;
    clearable: boolean;
    currency: string;
    placeholder: string;
    setDefault: boolean;
    multiple: boolean;
    dropStyle: Record<string, any>;
}, {}>;
export default _default;

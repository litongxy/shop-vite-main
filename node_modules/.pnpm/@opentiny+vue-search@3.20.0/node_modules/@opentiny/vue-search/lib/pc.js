import { renderless, api } from '@opentiny/vue-renderless/search/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { iconChevronDown, iconSearch, iconClose } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/search/index.css';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, createCommentVNode, createVNode, Transition, withCtx, withDirectives, toDisplayString, vShow, mergeProps, withKeys, withModifiers, vModelText, normalizeStyle, Fragment, renderList, createTextVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  props: [].concat(props, ["mini", "transparent", "searchTypes", "placeholder", "modelValue", "tabindex", "clearable", "isEnterSearch", "typeValue", "size", "disabled"]),
  emits: ["change", "search", "update:modelValue", "clear", "select", "input"],
  components: {
    IconChevronDown: iconChevronDown(),
    IconSearch: iconSearch(),
    IconClose: iconClose()
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  class: "tiny-search__prefix"
};
var _hoisted_2 = {
  class: "tiny-search__text"
};
var _hoisted_3 = {
  class: "icon-outer"
};
var _hoisted_4 = ["disabled", "placeholder", "tabindex"];
var _hoisted_5 = {
  key: 0,
  class: "tiny-search__input-btn tiny-icon-close"
};
var _hoisted_6 = {
  key: 2,
  class: "tiny-search__input-btn"
};
var _hoisted_7 = {
  ref: "selector",
  class: "tiny-search__selector"
};
var _hoisted_8 = {
  class: "tiny-search__selector-body"
};
var _hoisted_9 = {
  class: "tiny-search__poplist"
};
var _hoisted_10 = ["onClick"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_chevron_down = resolveComponent("icon-chevron-down");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_icon_search = resolveComponent("icon-search");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-search", {
        mini: _ctx.mini
      }, {
        collapse: _ctx.state.collapse
      }, _ctx.state.searchSize ? "tiny-search--" + _ctx.state.searchSize : "", {
        "is-disabled": _ctx.disabled
      }]),
      onMouseenter: _cache[11] || (_cache[11] = function($event) {
        return _ctx.state.hovering = true;
      }),
      onMouseleave: _cache[12] || (_cache[12] = function($event) {
        return _ctx.state.hovering = false;
      })
    },
    [createElementVNode(
      "div",
      {
        class: normalizeClass(["tiny-search__line", {
          focus: _ctx.state.focus
        }])
      },
      [_ctx.slots.prefix ? (openBlock(), createElementBlock("div", _hoisted_1, [renderSlot(_ctx.$slots, "prefix")])) : createCommentVNode("v-if", true), createVNode(Transition, {
        name: "tiny-transition-search-line-fade",
        mode: "out-in",
        persisted: ""
      }, {
        default: withCtx(function() {
          return [withDirectives(createElementVNode(
            "div",
            {
              class: "tiny-search__present",
              onClick: _cache[0] || (_cache[0] = function() {
                return _ctx.showSelector && _ctx.showSelector.apply(_ctx, arguments);
              })
            },
            [renderSlot(_ctx.$slots, "text", {
              slotScope: _ctx.state.searchValue
            }, function() {
              return [createElementVNode(
                "span",
                _hoisted_2,
                toDisplayString(_ctx.state.searchValue.text),
                1
                /* TEXT */
              )];
            }), createElementVNode("span", _hoisted_3, [createVNode(_component_icon_chevron_down, {
              class: "tiny-svg-size"
            })])],
            512
            /* NEED_PATCH */
          ), [[vShow, !_ctx.state.collapse && _ctx.state.types.length]])];
        }),
        _: 3
        /* FORWARDED */
      }), withDirectives(createElementVNode("input", mergeProps({
        ref: "input"
      }, _ctx.a(_ctx.$attrs, ["type", "class", "style", "^on[A-Z]", "id", "clearable"]), {
        "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
          return _ctx.state.currentValue = $event;
        }),
        disabled: _ctx.disabled,
        style: _ctx.transparent ? {
          border: "transparent",
          background: _ctx.state.collapse ? "rgba(255,255,255,0.3)" : "#fff"
        } : {},
        placeholder: _ctx.placeholder,
        type: "text",
        class: "tiny-search__input",
        onKeyup: _cache[2] || (_cache[2] = withKeys(function($event) {
          return _ctx.searchEnterKey($event);
        }, ["enter"])),
        onChange: _cache[3] || (_cache[3] = function() {
          return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
        }),
        onInput: _cache[4] || (_cache[4] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onFocus: _cache[5] || (_cache[5] = function($event) {
          return _ctx.state.focus = true;
        }),
        onBlur: _cache[6] || (_cache[6] = function($event) {
          return _ctx.state.focus = false;
        }),
        onSelect: _cache[7] || (_cache[7] = withModifiers(function() {
        }, ["stop"])),
        tabindex: _ctx.tabindex
      }), null, 16, _hoisted_4), [[vModelText, _ctx.state.currentValue]]), createVNode(Transition, {
        name: "tiny-transition-icon-scale-in"
      }, {
        default: withCtx(function() {
          return [_ctx.state.showClear && !_ctx.state.collapse && !_ctx.disabled ? (openBlock(), createElementBlock("div", _hoisted_5, [createElementVNode("a", {
            onClick: _cache[9] || (_cache[9] = function($event) {
              return _ctx.clear($event);
            })
          }, [createVNode(_component_icon_close, {
            onMousedown: _cache[8] || (_cache[8] = withModifiers(function() {
            }, ["prevent"])),
            class: "tiny-svg-size"
          })])])) : createCommentVNode("v-if", true)];
        }),
        _: 1
        /* STABLE */
      }), _ctx.slots.suffix ? renderSlot(_ctx.$slots, "suffix", {
        key: 1
      }) : !_ctx.slots.prefix && !_ctx.slots.suffix ? (openBlock(), createElementBlock("div", _hoisted_6, [createElementVNode("a", {
        onClick: _cache[10] || (_cache[10] = function($event) {
          return _ctx.searchClick($event);
        })
      }, [createVNode(_component_icon_search, {
        style: normalizeStyle({
          fill: _ctx.state.collapse && _ctx.transparent ? "#fff" : ""
        }),
        class: "tiny-svg-size"
      }, null, 8, ["style"])])])) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    ), createVNode(Transition, {
      name: "tiny-transition-zoom-in-top",
      mode: "out-in",
      persisted: ""
    }, {
      default: withCtx(function() {
        return [withDirectives(createElementVNode(
          "div",
          _hoisted_7,
          [createElementVNode("div", _hoisted_8, [createElementVNode("ul", _hoisted_9, [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(_ctx.state.types, function(item, index) {
              return openBlock(), createElementBlock("li", {
                key: index,
                class: "tiny-search__poplist-item",
                onClick: function onClick($event) {
                  return _ctx.changeKey(item);
                }
              }, [renderSlot(_ctx.$slots, "poplist", {
                slotScope: item
              }, function() {
                return [createTextVNode(
                  toDisplayString(item.text),
                  1
                  /* TEXT */
                )];
              })], 8, _hoisted_10);
            }),
            128
            /* KEYED_FRAGMENT */
          ))])])],
          512
          /* NEED_PATCH */
        ), [[vShow, _ctx.state.show && _ctx.state.types.length]])];
      }),
      _: 3
      /* FORWARDED */
    })],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

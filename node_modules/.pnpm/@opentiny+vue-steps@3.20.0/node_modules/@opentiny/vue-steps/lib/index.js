function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import MobileFirstTemplate from "./mobile-first.js";
import "@opentiny/vue-theme/steps/index.css";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var stepsProps = _extends({}, $props, {
  nameField: {
    type: String,
    default: "name"
  },
  countField: {
    type: String,
    default: "count"
  },
  statusField: {
    type: String,
    default: "status"
  },
  data: [Object, Array],
  space: [String, Number],
  active: {
    type: Number,
    default: -1
  },
  visibleNum: {
    type: Number,
    default: 5
  },
  descriptionField: {
    type: String,
    default: "description"
  },
  size: {
    type: String,
    default: "medium"
  },
  vertical: {
    type: Boolean,
    default: false
  },
  advanced: {
    type: Boolean,
    default: false
  },
  line: Boolean,
  dot: Boolean,
  // tiny新增
  duration: {
    type: Number,
    default: 300
  },
  noArrow: Boolean,
  flex: Boolean
});
var Steps = defineComponent({
  name: $prefix + "Steps",
  props: stepsProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
Steps.install = function(Vue) {
  Vue.component(Steps.name, Steps);
};
Steps.version = version;
export {
  Steps as default
};

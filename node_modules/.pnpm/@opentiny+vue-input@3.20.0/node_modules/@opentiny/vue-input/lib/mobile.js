import { renderless, api } from '@opentiny/vue-renderless/input/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { iconClose, iconChevronRight, iconEyeopen, iconEyeclose } from '@opentiny/vue-icon';
import ActionSheet from '@opentiny/vue-action-sheet';
import '@opentiny/vue-theme-mobile/input/index.css';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createElementVNode, mergeProps, createVNode, Fragment, createBlock, resolveDynamicComponent, withModifiers } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var _sfc_main = defineComponent({
  emits: ["update:modelValue", "change", "clear", "focus", "blur", "keyup", "keydown", "paste", "mouseenter", "mouseleave", "input"],
  components: {
    IconClose: iconClose(),
    IconChevronRight: iconChevronRight(),
    IconEyeopen: iconEyeopen(),
    IconEyeclose: iconEyeclose(),
    TinyActionSheet: ActionSheet
  },
  props: [].concat(props, ["name", "selectMenu", "ellipsis", "contentStyle", "labelWidth", "tips", "isSelect", "type", "label", "modelValue", "disabled", "readonly", "clearable", "suffixIcon", "prefixIcon", "autocomplete", "showPassword", "validateEvent", "showWordLimit", "title", "counter", "autosize", "tabindex", "width", "textAlign", "resize"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  class: "tiny-mobile-input__title"
};
var _hoisted_2 = {
  key: 1,
  class: "tiny-mobile-input__wrapper"
};
var _hoisted_3 = ["value", "disabled", "name", "aria-label", "tabindex"];
var _hoisted_4 = ["name", "tabindex", "type", "disabled", "readonly", "autocomplete", "aria-label"];
var _hoisted_5 = {
  key: 1,
  class: "tiny-mobile-input-group__prepend"
};
var _hoisted_6 = {
  key: 2,
  class: "tiny-mobile-input__prefix"
};
var _hoisted_7 = {
  key: 3,
  class: "tiny-mobile-input__suffix"
};
var _hoisted_8 = {
  key: 3,
  class: "tiny-mobile-input__count"
};
var _hoisted_9 = {
  class: "tiny-mobile-input__count-inner"
};
var _hoisted_10 = {
  key: 4,
  class: "tiny-mobile-input-group__append"
};
var _hoisted_11 = {
  key: 2,
  class: "tiny-mobile-textarea__wrapper"
};
var _hoisted_12 = ["name", "tabindex", "disabled", "readonly", "autocomplete", "aria-label"];
var _hoisted_13 = {
  key: 3,
  class: "tiny-mobile-textarea__count"
};
var _hoisted_14 = {
  key: 4,
  class: "tiny-mobile-input__tips"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_IconChevronRight = resolveComponent("IconChevronRight");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass([_ctx.type === "textarea" ? "tiny-mobile-textarea" : "tiny-mobile-input", _ctx.state.inputSize ? "tiny-mobile-input-" + _ctx.state.inputSize : "", {
        "is-focus": _ctx.state.focused,
        "is-disabled": _ctx.state.inputDisabled,
        "is-exceed": _ctx.state.inputExceed,
        "is-showlimit": _ctx.state.isWordLimitVisible && _ctx.type === "textarea",
        "tiny-mobile-input-group": _ctx.slots.prepend || _ctx.slots.append,
        "tiny-mobile-input-group-append": _ctx.slots.append,
        "tiny-mobile-input-group-prepend": _ctx.slots.prepend
      }]),
      style: normalizeStyle(_ctx.$attrs.style),
      onMouseenter: _cache[23] || (_cache[23] = function($event) {
        return _ctx.state.hovering = true;
      }),
      onMouseleave: _cache[24] || (_cache[24] = function($event) {
        return _ctx.state.hovering = false;
      })
    },
    [_ctx.slots.title || _ctx.title ? (openBlock(), createElementBlock("div", _hoisted_1, [renderSlot(_ctx.$slots, "title", {}, function() {
      return [createTextVNode(
        toDisplayString(_ctx.title),
        1
        /* TEXT */
      )];
    })])) : createCommentVNode("v-if", true), _ctx.type !== "textarea" ? (openBlock(), createElementBlock("div", _hoisted_2, [_ctx.isSelect ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: "tiny-mobile-input__select",
      onClick: _cache[2] || (_cache[2] = function() {
        return _ctx.showBox && _ctx.showBox.apply(_ctx, arguments);
      })
    }, [createElementVNode("input", mergeProps({
      type: "text",
      readonly: "",
      class: "tiny-mobile-input__inner"
    }, _ctx.a(_ctx.$attrs, ["size", "class", "style", "^on[A-Z]"]), {
      value: _ctx.state.checkedLabel,
      disabled: _ctx.state.inputDisabled,
      name: _ctx.name,
      "aria-label": _ctx.label,
      style: _ctx.state.inputStyle,
      tabindex: _ctx.tabindex,
      onInput: _cache[0] || (_cache[0] = function() {
        return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
      }),
      onChange: _cache[1] || (_cache[1] = function() {
        return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
      })
    }), null, 16, _hoisted_3), createElementVNode(
      "div",
      {
        class: "tiny-mobile-input__select-icon",
        style: normalizeStyle({
          transform: _ctx.state.boxVisibility ? "rotate(90deg)" : "none"
        })
      },
      [createVNode(_component_IconChevronRight)],
      4
      /* STYLE */
    )])) : (openBlock(), createElementBlock(
      Fragment,
      {
        key: 1
      },
      [_ctx.type !== "textarea" ? (openBlock(), createElementBlock("input", mergeProps({
        key: 0,
        ref: "input",
        name: _ctx.name
      }, _ctx.a(_ctx.$attrs, ["size", "class", "style", "^on[A-Z]"]), {
        class: "tiny-mobile-input__inner",
        style: _ctx.state.inputStyle,
        tabindex: _ctx.tabindex,
        type: _ctx.showPassword ? _ctx.state.passwordVisible ? "text" : "password" : _ctx.type,
        disabled: _ctx.state.inputDisabled,
        readonly: _ctx.readonly,
        autocomplete: _ctx.autocomplete,
        onCompositionstart: _cache[3] || (_cache[3] = function() {
          return _ctx.handleCompositionStart && _ctx.handleCompositionStart.apply(_ctx, arguments);
        }),
        onCompositionupdate: _cache[4] || (_cache[4] = function() {
          return _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate.apply(_ctx, arguments);
        }),
        onCompositionend: _cache[5] || (_cache[5] = function() {
          return _ctx.handleCompositionEnd && _ctx.handleCompositionEnd.apply(_ctx, arguments);
        }),
        onInput: _cache[6] || (_cache[6] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onFocus: _cache[7] || (_cache[7] = function() {
          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
        }),
        onBlur: _cache[8] || (_cache[8] = function() {
          return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
        }),
        onChange: _cache[9] || (_cache[9] = function() {
          return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
        }),
        "aria-label": _ctx.label
      }), null, 16, _hoisted_4)) : createCommentVNode("v-if", true), _ctx.slots.prepend ? (openBlock(), createElementBlock("div", _hoisted_5, [createElementVNode("span", null, [renderSlot(_ctx.$slots, "prepend")])])) : createCommentVNode("v-if", true), _ctx.slots.prefix || _ctx.prefixIcon ? (openBlock(), createElementBlock("div", _hoisted_6, [renderSlot(_ctx.$slots, "prefix"), _ctx.prefixIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.prefixIcon), {
        key: 0,
        class: "tiny-mobile-input__icon"
      })) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), _ctx.getSuffixVisible() ? (openBlock(), createElementBlock("span", _hoisted_7, [!_ctx.state.showClear || !_ctx.state.showPwdVisible || !_ctx.state.isWordLimitVisible ? (openBlock(), createElementBlock(
        Fragment,
        {
          key: 0
        },
        [renderSlot(_ctx.$slots, "suffix"), _ctx.suffixIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.suffixIcon), {
          key: 0,
          class: "tiny-mobile-input__icon"
        })) : createCommentVNode("v-if", true)],
        64
        /* STABLE_FRAGMENT */
      )) : createCommentVNode("v-if", true), _ctx.state.showClear ? (openBlock(), createBlock(_component_icon_close, {
        key: 1,
        class: "tiny-mobile-input__icon tiny-mobile-input__clear",
        onMousedown: _cache[10] || (_cache[10] = withModifiers(function() {
        }, ["prevent"])),
        onClick: _ctx.clear
      }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), _ctx.state.showPwdVisible ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.passwordVisible ? "icon-eyeopen" : "icon-eyeclose"), {
        key: 2,
        class: "tiny-mobile-input__icon",
        onClick: _ctx.handlePasswordVisible
      }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), _ctx.state.isWordLimitVisible ? (openBlock(), createElementBlock("span", _hoisted_8, [createElementVNode(
        "span",
        _hoisted_9,
        toDisplayString(_ctx.state.showWordLimit ? _ctx.state.textLength + "/" + _ctx.state.upperLimit : _ctx.state.textLength),
        1
        /* TEXT */
      )])) : createCommentVNode("v-if", true), _ctx.state.validateState ? (openBlock(), createElementBlock(
        "i",
        {
          key: 4,
          class: normalizeClass(["tiny-mobile-input__icon", ["tiny-mobile-input__validateIcon", _ctx.validateIcon]])
        },
        null,
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), _ctx.slots.append ? (openBlock(), createElementBlock("div", _hoisted_10, [renderSlot(_ctx.$slots, "append")])) : createCommentVNode("v-if", true)],
      64
      /* STABLE_FRAGMENT */
    ))])) : (openBlock(), createElementBlock("div", _hoisted_11, [createElementVNode("textarea", mergeProps({
      ref: "textarea",
      name: _ctx.name
    }, _ctx.a(_ctx.$attrs, ["type", "class", "style", "^on[A-Z]"]), {
      class: ["tiny-mobile-textarea__inner", {
        "is-focus": _ctx.state.focused,
        "is-autosize": _ctx.autosize
      }],
      tabindex: _ctx.tabindex,
      disabled: _ctx.state.inputDisabled,
      readonly: _ctx.readonly,
      autocomplete: _ctx.autocomplete,
      style: _extends({}, _ctx.state.textareaStyle, {
        width: _ctx.$attrs.cols ? "auto" : "100%",
        height: _ctx.$attrs.cols || _ctx.autosize ? "auto" : ""
      }),
      "aria-label": _ctx.label,
      onFocus: _cache[11] || (_cache[11] = function() {
        return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
      }),
      onBlur: _cache[12] || (_cache[12] = function() {
        return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
      }),
      onChange: _cache[13] || (_cache[13] = function() {
        return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
      }),
      onCompositionstart: _cache[14] || (_cache[14] = function() {
        return _ctx.handleCompositionStart && _ctx.handleCompositionStart.apply(_ctx, arguments);
      }),
      onCompositionupdate: _cache[15] || (_cache[15] = function() {
        return _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate.apply(_ctx, arguments);
      }),
      onCompositionend: _cache[16] || (_cache[16] = function() {
        return _ctx.handleCompositionEnd && _ctx.handleCompositionEnd.apply(_ctx, arguments);
      }),
      onInput: _cache[17] || (_cache[17] = function() {
        return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
      }),
      onKeyup: _cache[18] || (_cache[18] = function($event) {
        return _ctx.$emit("keyup", $event);
      }),
      onKeydown: _cache[19] || (_cache[19] = function($event) {
        return _ctx.$emit("keydown", $event);
      }),
      onPaste: _cache[20] || (_cache[20] = function($event) {
        return _ctx.$emit("paste", $event);
      })
    }), "\n      ", 16, _hoisted_12)])), _ctx.state.isWordLimitVisible && _ctx.type === "textarea" ? (openBlock(), createElementBlock(
      "span",
      _hoisted_13,
      toDisplayString(_ctx.state.showWordLimit ? _ctx.state.textLength + "/" + _ctx.state.upperLimit : _ctx.state.textLength),
      1
      /* TEXT */
    )) : createCommentVNode("v-if", true), _ctx.slots.tips || _ctx.tips ? (openBlock(), createElementBlock("div", _hoisted_14, [renderSlot(_ctx.$slots, "tips", {}, function() {
      return [createTextVNode(
        toDisplayString(_ctx.tips),
        1
        /* TEXT */
      )];
    })])) : createCommentVNode("v-if", true), createVNode(_component_tiny_action_sheet, {
      modelValue: _ctx.state.sheetvalue,
      "onUpdate:modelValue": _cache[21] || (_cache[21] = function($event) {
        return _ctx.state.sheetvalue = $event;
      }),
      menus: _ctx.selectMenu,
      ellipsis: _ctx.ellipsis,
      "content-style": _ctx.contentStyle,
      visible: _ctx.state.boxVisibility,
      "onUpdate:visible": _cache[22] || (_cache[22] = function($event) {
        return _ctx.state.boxVisibility = $event;
      })
    }, null, 8, ["modelValue", "menus", "ellipsis", "content-style", "visible"])],
    38
    /* CLASS, STYLE, NEED_HYDRATION */
  );
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobile as default };

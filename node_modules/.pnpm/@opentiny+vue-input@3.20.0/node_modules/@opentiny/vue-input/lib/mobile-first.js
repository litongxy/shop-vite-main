import { renderless as renderless$1, api as api$1 } from '@opentiny/vue-renderless/input/vue';
import { defineComponent, $prefix, setup, props } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/tall-storage/vue';
import '@opentiny/vue-theme/tall-storage/index.css';
import { openBlock, createElementBlock, createElementVNode, withKeys, Fragment, renderList, normalizeClass, toDisplayString, resolveComponent, normalizeStyle, renderSlot, createCommentVNode, createBlock, withCtx, resolveDynamicComponent, mergeProps, withModifiers, createVNode, createTextVNode } from 'vue';
import { IconClose, IconError, IconEyeopen, IconEyeclose } from '@opentiny/vue-icon';
import Tooltip from '@opentiny/vue-tooltip';
import Button from '@opentiny/vue-button';
import DialogBox from '@opentiny/vue-dialog-box';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main$1 = defineComponent({
  name: $prefix + "TallStorage",
  inheritAttrs: false,
  props: {
    isMemoryStorage: Boolean,
    localstorageData: Array
  },
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1$1 = {
  class: "tiny-storage-list-style"
};
var _hoisted_2$1 = ["onClick"];
function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "div",
    {
      class: "tiny-tall-storage",
      onMousedown: _cache[1] || (_cache[1] = function() {
        return _ctx.mousedown && _ctx.mousedown.apply(_ctx, arguments);
      })
    },
    [createElementVNode("div", _hoisted_1$1, [createElementVNode(
      "ul",
      {
        onKeydown: _cache[0] || (_cache[0] = withKeys(function() {
          return _ctx.keydownEvent && _ctx.keydownEvent.apply(_ctx, arguments);
        }, ["enter"])),
        class: "tiny-storage-list"
      },
      [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.localstorageData, function(item) {
          return openBlock(), createElementBlock("li", {
            key: item,
            class: normalizeClass(["tiny-storage-item", [_ctx.state.hoverValue === item ? "item-hover" : ""]]),
            onClick: function onClick($event) {
              return _ctx.selectItem(item);
            }
          }, toDisplayString(item), 11, _hoisted_2$1);
        }),
        128
        /* KEYED_FRAGMENT */
      ))],
      32
      /* NEED_HYDRATION */
    )])],
    32
    /* NEED_HYDRATION */
  );
}
var tallStorage = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);

var _sfc_main = defineComponent({
  inheritAttrs: false,
  emits: ["update:modelValue", "change", "clear", "focus", "blur", "keyup", "keydown", "paste", "mouseenter", "mouseleave", "click", "input"],
  components: {
    IconClose: IconClose(),
    IconError: IconError(),
    IconEyeopen: IconEyeopen(),
    IconEyeclose: IconEyeclose(),
    TinyTallStorage: tallStorage,
    TinyTooltip: Tooltip,
    TinyButton: Button,
    TinyDialogBox: DialogBox
  },
  props: [].concat(props, ["name", "size", "form", "type", "mask", "label", "modelValue", "height", "resize", "counter", "autosize", "disabled", "readonly", "tabindex", "clearable", "suffixIcon", "prefixIcon", "autocomplete", "showPassword", "validateEvent", "showWordLimit", "customClass", "displayOnly", "displayOnlyContent", "showEmptyValue", "popupMore", "showTooltip", "frontClearIcon", "hoverExpand"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1
    });
  }
});
var _hoisted_1 = {
  key: 0,
  "data-tag": "tiny-input-prepend",
  ref: "prepend",
  class: "border-r-0 rounded-tr-none rounded-br-none bg-color-bg-2 text-color-text-placeholder border border-solid border-color-border rounded px-3 py-0 w-px align-middle table-cell relative whitespace-nowrap"
};
var _hoisted_2 = {
  key: 0,
  class: "absolute top-0 left-0 max-w-full overflow-hidden text-ellipsis whitespace-nowrap leading-7 sm:leading-normal text-color-text-primary"
};
var _hoisted_3 = {
  key: 1,
  class: "absolute top-0 left-0 max-w-full flex items-center leading-7 sm:leading-normal text-color-text-primary"
};
var _hoisted_4 = {
  class: "flex-1 overflow-hidden text-ellipsis whitespace-nowrap mr-4"
};
var _hoisted_5 = {
  key: 2,
  class: "absolute top-0 left-0 max-w-full overflow-hidden text-ellipsis whitespace-nowrap leading-7 sm:leading-normal text-color-text-primary"
};
var _hoisted_6 = ["name", "tabindex", "type", "disabled", "readonly", "unselectable", "autocomplete", "aria-label"];
var _hoisted_7 = {
  key: 2,
  "data-tag": "tiny-input-prefix",
  ref: "prefix",
  class: "left-2 transition-all duration-300 ease-in-out text-xs sm:text-sm absolute top-1/2 -translate-y-1/2 text-center text-color-text-placeholder flex items-center"
};
var _hoisted_8 = {
  key: 3,
  "data-tag": "tiny-input-suffix",
  ref: "suffix",
  class: "right-2 transition-all duration-300 ease-in-out pointer-events-none text-xs absolute top-1/2 -translate-y-1/2 text-center text-color-text-placeholder flex items-center z-[1]"
};
var _hoisted_9 = {
  class: "pointer-events-auto text-xs flex justify-start items-center"
};
var _hoisted_10 = {
  key: 5,
  class: "h-full inline-flex items-center text-xs sm:text-sm text-color-text-placeholder"
};
var _hoisted_11 = {
  class: "bg-color-bg-1 leading-none inline-block"
};
var _hoisted_12 = {
  key: 4,
  ref: "append",
  class: "border-l-0 rounded-tl-none rounded-bl-none bg-color-bg-2 text-color-text-placeholder border border-solid border-color-border rounded-tr rounded-br px-3 py-0 w-px align-middle table-cell relative whitespace-nowrap"
};
var _hoisted_13 = {
  key: 5,
  ref: "panel"
};
var _hoisted_14 = {
  class: "flex"
};
var _hoisted_15 = {
  key: 0,
  class: "float-right relative top-px clear-both text-color-brand text-sm leading-3 cursor-pointer"
};
var _hoisted_16 = ["tabindex", "disabled", "readonly", "unselectable", "autocomplete", "aria-label"];
var _hoisted_17 = {
  key: 2,
  "data-tag": "tiny-input-limit",
  class: "bg-color-bg-1 text-color-text-placeholder text-xs sm:text-sm absolute bottom-1 right-3"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_tiny_tall_storage = resolveComponent("tiny-tall-storage");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_icon_error = resolveComponent("icon-error");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_dialog_box = resolveComponent("tiny-dialog-box");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(_ctx.m("relative text-xs sm:text-sm", _ctx.type !== "textarea" || _ctx.slots.prepend || _ctx.slots.append ? "inline-table" : "", _ctx.type !== "textarea" ? "w-full" : "align-bottom", _ctx.slots.prepend || _ctx.slots.append ? "leading-normal border-separate border-spacing-0" : "", _ctx.$attrs.class)),
      "data-tag": "tiny-input",
      style: normalizeStyle(_ctx.$attrs.style),
      onMouseenter: _cache[27] || (_cache[27] = function($event) {
        _ctx.state.hovering = true;
        _ctx.$emit("mouseenter", $event);
      }),
      onMouseleave: _cache[28] || (_cache[28] = function($event) {
        _ctx.state.hovering = false;
        _ctx.$emit("mouseleave", $event);
      }),
      onClick: _cache[29] || (_cache[29] = function($event) {
        return _ctx.$emit("click", $event);
      })
    },
    [_ctx.type !== "textarea" ? (openBlock(), createElementBlock(
      Fragment,
      {
        key: 0
      },
      [_ctx.slots.prepend && !_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock(
        "div",
        _hoisted_1,
        [renderSlot(_ctx.$slots, "prepend")],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true), createElementVNode(
        "span",
        {
          class: normalizeClass(["relative text-sm block", [_ctx.state.inputSizeMf !== "mini" ? "sm:text-sm" : "sm:text-xs"]]),
          "data-tag": "tiny-input-display-only"
        },
        [_ctx.state.isDisplayOnly ? (openBlock(), createBlock(_component_tiny_tooltip, {
          key: 0,
          disabled: !_ctx.showTooltip,
          effect: "light",
          content: _ctx.state.displayOnlyTooltip,
          placement: "top",
          "popper-class": _ctx.state.tooltipConfig.popperClass || "",
          "popper-options": {
            bubbling: true
          },
          onMouseenter: _ctx.handleEnterDisplayOnlyContent
        }, {
          default: withCtx(function() {
            return [_ctx.type === "password" ? (openBlock(), createElementBlock(
              "span",
              _hoisted_2,
              toDisplayString(_ctx.state.hiddenPassword),
              1
              /* TEXT */
            )) : _ctx.mask ? (openBlock(), createElementBlock("span", _hoisted_3, [createElementVNode(
              "span",
              _hoisted_4,
              toDisplayString(_ctx.state.displayedMaskValue),
              1
              /* TEXT */
            ), (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.maskValueVisible ? "icon-eyeopen" : "icon-eyeclose"), {
              onClick: _cache[0] || (_cache[0] = function($event) {
                return _ctx.state.maskValueVisible = !_ctx.state.maskValueVisible;
              })
            }))])) : (openBlock(), createElementBlock(
              "span",
              _hoisted_5,
              toDisplayString(_ctx.state.displayOnlyText),
              1
              /* TEXT */
            ))];
          }),
          _: 1
          /* STABLE */
        }, 8, ["disabled", "content", "popper-class", "onMouseenter"])) : createCommentVNode("v-if", true), _ctx.type !== "textarea" ? (openBlock(), createElementBlock("input", mergeProps({
          key: 1,
          ref: "input",
          "data-tag": "tiny-input-inner",
          name: _ctx.name
        }, _ctx.a(_ctx.$attrs, ["type", "class", "style", "^on[A-Z]"]), {
          class: _ctx.m("w-full border-0 sm:border px-0 sm:px-3 sm:border-solid sm:border-color-border sm:hover:border-color-border-hover sm:focus:border-color-brand-focus sm:disabled:border-color-border-separator placeholder:text-color-text-placeholder placeholder:text-sm sm:disabled:placeholder:text-color-text-disabled text-sm text-color-text-primary bg-color-bg-1 disabled:cursor-not-allowed disabled:text-color-text-disabled sm:disabled:text-color-text-secondary sm:disabled:bg-color-bg-6 py-0 outline-0 transition-colors duration-200 ease-in-out ", _ctx.state.inputSizeMf === "medium" ? "h-8 leading-8 " + _ctx.m("sm:text-sm") + " placeholder:text-sm" : _ctx.state.inputSizeMf === "mini" ? "h-6 leading-6 text-xs placeholder:text-xs" : "h-7 leading-7", _ctx.slots.prepend || _ctx.slots.append ? "align-middle table-cell" : "inline-block", _ctx.slots.prepend && _ctx.slots.append ? "rounded-none" : _ctx.slots.prepend ? "rounded-tl-none rounded-bl-none rounded-tr rounded-br" : _ctx.slots.append ? "rounded-tl rounded-bl rounded-tr-none rounded-br-none" : "rounded", _ctx.readonly ? " text-ellipsis overflow-hidden whitespace-nowrap" : "sm:border", (_ctx.slots.prefix || _ctx.prefixIcon) && (_ctx.slots.suffix || _ctx.suffixIcon || _ctx.clearable || _ctx.showPassword) ? "px-6 sm:px-6" : _ctx.slots.prefix || _ctx.prefixIcon ? "pl-6 sm:pl-6 pr-0 sm:pr-3" : _ctx.slots.suffix || _ctx.suffixIcon || _ctx.clearable || _ctx.showPassword ? "pl-0 sm:pl-3 pr-6 sm:pr-6" : "", _ctx.mask && _ctx.state.inputDisabled ? !_ctx.state.maskValueVisible ? "font-[serif] pr-6 sm:pr-6" : "pr-6 sm:pr-6" : "", (_ctx.slots.suffix || _ctx.suffixIcon || _ctx.showPassword) && _ctx.clearable ? "pr-10 sm:pr-10" : "", _ctx.state.isDisplayOnly ? "invisible h-auto leading-none border-0" : "", _ctx.state.isWordLimitVisible ? _ctx.clearable ? "pr-18 sm:pr-18" : "pr-14 sm:pr-14" : "", _ctx.customClass),
          tabindex: _ctx.tabindex,
          type: _ctx.showPassword ? _ctx.state.passwordVisible ? "text" : "password" : _ctx.type,
          disabled: _ctx.state.inputDisabled,
          readonly: _ctx.readonly,
          unselectable: _ctx.readonly ? "on" : "off",
          autocomplete: _ctx.autocomplete,
          onCompositionstart: _cache[1] || (_cache[1] = function() {
            return _ctx.handleCompositionStart && _ctx.handleCompositionStart.apply(_ctx, arguments);
          }),
          onCompositionupdate: _cache[2] || (_cache[2] = function() {
            return _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate.apply(_ctx, arguments);
          }),
          onCompositionend: _cache[3] || (_cache[3] = function() {
            return _ctx.handleCompositionEnd && _ctx.handleCompositionEnd.apply(_ctx, arguments);
          }),
          onInput: _cache[4] || (_cache[4] = function() {
            return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
          }),
          onFocus: _cache[5] || (_cache[5] = function() {
            return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
          }),
          onBlur: _cache[6] || (_cache[6] = function() {
            return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
          }),
          onChange: _cache[7] || (_cache[7] = function() {
            return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
          }),
          "aria-label": _ctx.label,
          onKeyup: _cache[8] || (_cache[8] = function($event) {
            return _ctx.$emit("keyup", $event);
          }),
          onKeydown: _cache[9] || (_cache[9] = function($event) {
            return _ctx.$emit("keydown", $event);
          }),
          onPaste: _cache[10] || (_cache[10] = function($event) {
            return _ctx.$emit("paste", $event);
          })
        }), null, 16, _hoisted_6)) : createCommentVNode("v-if", true)],
        2
        /* CLASS */
      ), _ctx.isMemoryStorage ? (openBlock(), createBlock(_component_tiny_tall_storage, {
        key: 1,
        name: _ctx.name,
        "localstorage-data": _ctx.storageData,
        "is-memory-storage": _ctx.isMemoryStorage,
        onSelected: _ctx.selectedMemory
      }, null, 8, ["name", "localstorage-data", "is-memory-storage", "onSelected"])) : createCommentVNode("v-if", true), (_ctx.slots.prefix || _ctx.prefixIcon) && !_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock(
        "span",
        _hoisted_7,
        [renderSlot(_ctx.$slots, "prefix"), _ctx.prefixIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.prefixIcon), {
          key: 0,
          class: normalizeClass(_ctx.m("text-center transition-all duration-300 ease-in-out text-xs sm:text-sm", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7"))
        }, null, 8, ["class"])) : createCommentVNode("v-if", true)],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true), !_ctx.state.isDisplayOnly && _ctx.getSuffixVisible() ? (openBlock(), createElementBlock(
        "span",
        _hoisted_8,
        [createElementVNode("span", _hoisted_9, [_ctx.state.showClear ? (openBlock(), createBlock(_component_icon_close, {
          key: 0,
          class: normalizeClass(_ctx.m("hidden sm:block text-center transition-all duration-300 ease-in-out text-xs cursor-pointer", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7")),
          onMousedown: _cache[11] || (_cache[11] = withModifiers(function() {
          }, ["prevent"])),
          onClick: _ctx.clear
        }, null, 8, ["class", "onClick"])) : createCommentVNode("v-if", true), !_ctx.state.showClear || !_ctx.state.showPwdVisible || !_ctx.state.isWordLimitVisible ? (openBlock(), createElementBlock(
          Fragment,
          {
            key: 1
          },
          [renderSlot(_ctx.$slots, "suffix"), _ctx.suffixIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.suffixIcon), {
            key: 0,
            class: normalizeClass(_ctx.m("text-center transition-all duration-300 ease-in-out text-xs", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7"))
          }, null, 8, ["class"])) : createCommentVNode("v-if", true)],
          64
          /* STABLE_FRAGMENT */
        )) : createCommentVNode("v-if", true), _ctx.state.showClear ? (openBlock(), createBlock(_component_icon_error, {
          key: 2,
          class: normalizeClass(_ctx.m("text-center transition-all duration-300 ease-in-out text-xs cursor-pointer fill-color-none-hover block sm:hidden", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7")),
          onMousedown: _cache[12] || (_cache[12] = withModifiers(function() {
          }, ["prevent"])),
          onClick: _ctx.clear
        }, null, 8, ["class", "onClick"])) : createCommentVNode("v-if", true), _ctx.showPassword ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.passwordVisible ? "icon-eyeopen" : "icon-eyeclose"), {
          key: 3,
          class: normalizeClass(_ctx.m("text-center transition-all duration-300 ease-in-out text-xs", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7")),
          onClick: _ctx.handlePasswordVisible
        }, null, 8, ["class", "onClick"])) : createCommentVNode("v-if", true), _ctx.mask && _ctx.state.inputDisabled ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.maskValueVisible ? "icon-eyeopen" : "icon-eyeclose"), {
          key: 4,
          class: normalizeClass(_ctx.m("text-center transition-all duration-300 ease-in-out text-xs fill-color-text-placeholder", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7")),
          onClick: _cache[13] || (_cache[13] = function($event) {
            return _ctx.state.maskValueVisible = !_ctx.state.maskValueVisible;
          })
        }, null, 8, ["class"])) : createCommentVNode("v-if", true), _ctx.state.isWordLimitVisible ? (openBlock(), createElementBlock("span", _hoisted_10, [createElementVNode(
          "span",
          _hoisted_11,
          toDisplayString(_ctx.state.showWordLimit ? _ctx.state.textLength + "/" + _ctx.state.upperLimit : _ctx.state.textLength),
          1
          /* TEXT */
        )])) : createCommentVNode("v-if", true)]), _ctx.state.validateState ? (openBlock(), createElementBlock(
          "i",
          {
            key: 0,
            class: normalizeClass(_ctx.m("text-center transition-all duration-300 ease-in-out text-xs pointer-events-none", _ctx.state.inputSizeMf === "medium" ? "leading-8" : _ctx.state.inputSizeMf === "mini" ? "leading-6" : "leading-7", _ctx.state.validateIcon))
          },
          null,
          2
          /* CLASS */
        )) : createCommentVNode("v-if", true)],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true), _ctx.slots.append && !_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock(
        "div",
        _hoisted_12,
        [renderSlot(_ctx.$slots, "append")],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true), _ctx.slots.panel && !_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock(
        "div",
        _hoisted_13,
        [renderSlot(_ctx.$slots, "panel")],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true)],
      64
      /* STABLE_FRAGMENT */
    )) : (openBlock(), createElementBlock(
      "span",
      {
        key: 1,
        "data-tag": "tiny-input-textarea",
        class: normalizeClass([_ctx.hoverExpand && "relative block h-7 w-full", _ctx.state.isDisplayOnly && _ctx.hoverExpand && "h-auto"])
      },
      [_ctx.state.isDisplayOnly ? (openBlock(), createBlock(_component_tiny_tooltip, {
        key: 0,
        disabled: !_ctx.showTooltip,
        effect: "light",
        content: _ctx.state.displayOnlyTooltip,
        placement: "top",
        "popper-class": _ctx.state.tooltipConfig.popperClass || "",
        "popper-options": {
          bubbling: true
        },
        onMouseenter: _cache[15] || (_cache[15] = function($event) {
          return _ctx.handleEnterDisplayOnlyContent($event, "textarea");
        })
      }, {
        default: withCtx(function() {
          return [createElementVNode("div", _hoisted_14, [createElementVNode(
            "span",
            {
              ref: "textBox",
              class: normalizeClass(["text-box max-w-full break-words line-clamp-5 text-sm text-color-text-primary before:content-[''] before:float-right before:h-full before:-mb-4", [_ctx.state.inputSizeMf !== "mini" ? "sm:text-sm" : "sm:text-xs", _ctx.hoverExpand && "relative left-0 max-w-full leading-normal line-clamp-1", _ctx.autosize ? "left-0 max-w-full break-words  whitespace-pre-line leading-normal" : "left-0 max-w-full text-ellipsis overflow-hidden break-words whitespace-pre-wrap line-clamp-5"]]),
              onClick: _cache[14] || (_cache[14] = function($event) {
                return _ctx.state.showDisplayOnlyBox = true;
              })
            },
            [_ctx.state.showMoreBtn ? (openBlock(), createElementBlock(
              "span",
              _hoisted_15,
              toDisplayString(_ctx.t("ui.input.more")) + ">",
              1
              /* TEXT */
            )) : createCommentVNode("v-if", true), createElementVNode(
              "span",
              null,
              toDisplayString(_ctx.state.displayOnlyText),
              1
              /* TEXT */
            )],
            2
            /* CLASS */
          )])];
        }),
        _: 1
        /* STABLE */
      }, 8, ["disabled", "content", "popper-class"])) : createCommentVNode("v-if", true), _ctx.state.isDisplayOnly && _ctx.popupMore ? (openBlock(), createBlock(_component_tiny_dialog_box, {
        key: 1,
        title: _ctx.t("ui.input.detail"),
        width: "1000px",
        visible: _ctx.state.showDisplayOnlyBox,
        "append-to-body": true,
        "close-on-click-modal": false,
        "onUpdate:visible": _cache[17] || (_cache[17] = function($event) {
          return _ctx.state.showDisplayOnlyBox = $event;
        })
      }, {
        footer: withCtx(function() {
          return [createVNode(_component_tiny_button, {
            onClick: _cache[16] || (_cache[16] = function($event) {
              return _ctx.state.showDisplayOnlyBox = false;
            })
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.input.close")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          })];
        }),
        default: withCtx(function() {
          return [createElementVNode(
            "div",
            null,
            toDisplayString(_ctx.state.displayOnlyText),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["title", "visible"])) : createCommentVNode("v-if", true), createElementVNode("textarea", mergeProps({
        ref: "textarea"
      }, _ctx.a(_ctx.$attrs, ["type", "class", "style", "^on[A-Z]"]), {
        tabindex: _ctx.tabindex,
        class: ["block w-full border-0 sm:border-solid sm:border-color-border sm:hover:border-color-border-hover sm:focus:border-color-brand-focus sm:disabled:border-color-border-separator outline-0 rounded placeholder:text-color-text-placeholder placeholder:text-sm sm:disabled:placeholder:text-color-text-disabled text-sm text-color-text-primary bg-color-bg-1 disabled:cursor-not-allowed disabled:text-color-text-disabled sm:disabled:text-color-text-secondary sm:disabled:bg-color-bg-6", [_ctx.readonly ? "sm:border-0 px-0 py-0" : "sm:border px-3 ", _ctx.state.isDisplayOnly ? "hidden" : "", _ctx.state.inputSizeMf !== "mini" ? "sm:placeholder:text-sm sm:text-sm" : "sm:placeholder:text-xs sm:text-xs", _ctx.hoverExpand && "min-w-40 absolute h-7 z-[2000] top-0 left-0", _ctx.hoverExpand && _ctx.state.enteredTextarea ? "py-2 leading-normal" : "py-0 leading-[1.625rem]", _ctx.hoverExpand && !_ctx.state.enteredTextarea && "min-h-7 px-2 leading-7 overflow-hidden"]],
        onCompositionstart: _cache[18] || (_cache[18] = function() {
          return _ctx.handleCompositionStart && _ctx.handleCompositionStart.apply(_ctx, arguments);
        }),
        onCompositionupdate: _cache[19] || (_cache[19] = function() {
          return _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate.apply(_ctx, arguments);
        }),
        onCompositionend: _cache[20] || (_cache[20] = function() {
          return _ctx.handleCompositionEnd && _ctx.handleCompositionEnd.apply(_ctx, arguments);
        }),
        onInput: _cache[21] || (_cache[21] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        disabled: _ctx.state.inputDisabled,
        readonly: _ctx.readonly,
        unselectable: _ctx.readonly ? "on" : "off",
        autocomplete: _ctx.autocomplete,
        style: _ctx.state.textareaStyle,
        onFocus: _cache[22] || (_cache[22] = function() {
          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
        }),
        onBlur: _cache[23] || (_cache[23] = function() {
          return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
        }),
        onChange: _cache[24] || (_cache[24] = function() {
          return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
        }),
        onMouseenter: _cache[25] || (_cache[25] = function($event) {
          return _ctx.handleEnterTextarea($event);
        }),
        onMouseleave: _cache[26] || (_cache[26] = function($event) {
          return _ctx.handleLeaveTextarea($event);
        }),
        "aria-label": _ctx.label
      }), "\n      ", 16, _hoisted_16)],
      2
      /* CLASS */
    )), _ctx.state.isWordLimitVisible && _ctx.type === "textarea" ? (openBlock(), createElementBlock(
      "span",
      _hoisted_17,
      toDisplayString(_ctx.state.showWordLimit ? _ctx.state.textLength + "/" + _ctx.state.upperLimit : _ctx.state.textLength),
      1
      /* TEXT */
    )) : createCommentVNode("v-if", true), renderSlot(_ctx.$slots, "default")],
    38
    /* CLASS, STYLE, NEED_HYDRATION */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

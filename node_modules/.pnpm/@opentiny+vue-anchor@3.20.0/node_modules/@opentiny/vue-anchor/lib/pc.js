import { createVNode, withDirectives, resolveDirective } from "vue";
import { defineComponent, $prefix, props, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/anchor/vue";
import { AutoTip } from "@opentiny/vue-directive";
var _sfc_main = /* @__PURE__ */ defineComponent({
  name: $prefix + "Anchor",
  directives: {
    AutoTip
  },
  props: [].concat(props, ["isAffix", "links", "containerId", "markClass", "type", "offsetTop"]),
  emits: ["linkClick", "onChange", "change"],
  // deprecated v3.12.0废弃，v3.17.0移除onChange 事件
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  },
  render: function render() {
    var isAffix = this.isAffix, links = this.links, linkClick = this.linkClick, currentLink = this.state.currentLink, type = this.type;
    var anchorClass = "tiny-anchor";
    var _renderLinks = function renderLinks(links2) {
      return Array.isArray(links2) ? links2.map(function(item) {
        return createVNode("div", {
          "class": anchorClass + "-link",
          "key": item.key
        }, [withDirectives(createVNode("a", {
          "href": item.link,
          "class": [anchorClass + "-link-title", currentLink === item.link && anchorClass + "-link-title--active"],
          "onClick": function onClick(e) {
            return linkClick(e, item);
          },
          "ref": item.link
        }, [item.title]), [[resolveDirective("auto-tip")]]), item.children ? _renderLinks(item.children) : null]);
      }) : null;
    };
    var renderMask = createVNode("div", {
      "class": anchorClass + "-link-mask",
      "ref": "maskRef"
    }, null);
    var renderOrbit = createVNode("div", {
      "class": anchorClass + "-orbit"
    }, [createVNode("div", {
      "class": anchorClass + "-orbit-skid",
      "ref": "skidRef"
    }, null)]);
    return createVNode("div", {
      "class": [isAffix ? anchorClass + "__affix" : "", anchorClass + "__wrapper", "tiny-anchor__" + type],
      "ref": "anchorWrapRef"
    }, [createVNode("div", {
      "class": anchorClass,
      "ref": "anchorRef"
    }, [type === "line" && renderMask, type === "line" && renderOrbit, links && _renderLinks(links)])]);
  }
});
export {
  _sfc_main as default
};

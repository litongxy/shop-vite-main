import { renderless, api } from '@opentiny/vue-renderless/time-line-new/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import '@opentiny/vue-theme/steps/index.css';
import { IconYes, IconError, IconWarning } from '@opentiny/vue-icon';
import { resolveComponent, openBlock, createElementBlock, Fragment, renderList, normalizeStyle, normalizeClass, renderSlot, createElementVNode, toDisplayString, createBlock, resolveDynamicComponent } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["click"],
  props: [].concat(props, ["vertical", "showNumber", "nameField", "timeField", "start", "data", "space", "active", "reverse", "showStatus", "autoColorField"]),
  components: {
    IconYes: IconYes(),
    IconError: IconError(),
    IconWarning: IconWarning()
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-steps"
};
var _hoisted_2 = {
  key: 0,
  class: "tiny-steps-normal"
};
var _hoisted_3 = ["onClick"];
var _hoisted_4 = {
  key: 0
};
var _hoisted_5 = {
  class: "node-description"
};
var _hoisted_6 = ["textContent"];
var _hoisted_7 = {
  class: "status"
};
var _hoisted_8 = {
  class: "date-time"
};
var _hoisted_9 = {
  class: "date"
};
var _hoisted_10 = {
  class: "time"
};
var _hoisted_11 = ["onClick"];
var _hoisted_12 = {
  key: 4
};
var _hoisted_13 = ["textContent"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_error = resolveComponent("icon-error");
  var _component_icon_warning = resolveComponent("icon-warning");
  var _component_icon_yes = resolveComponent("icon-yes");
  return openBlock(), createElementBlock("div", _hoisted_1, [!_ctx.vertical ? (openBlock(), createElementBlock("div", _hoisted_2, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.state.nodes, function(node, index) {
      return openBlock(), createElementBlock(
        "div",
        {
          key: index,
          style: normalizeStyle({
            width: _ctx.space ? _ctx.space + "px" : 100 / _ctx.state.nodes.length + "%"
          }),
          class: normalizeClass(["normal", _ctx.getStatusCls(index)])
        },
        [renderSlot(_ctx.$slots, "top", {
          slotScope: node
        }), createElementVNode("div", {
          class: "icon",
          onClick: function onClick($event) {
            return _ctx.handleClick({
              index,
              node
            });
          }
        }, [index >= _ctx.state.current ? (openBlock(), createElementBlock(
          "span",
          _hoisted_4,
          toDisplayString(_ctx.showNumber ? index + _ctx.start : ""),
          1
          /* TEXT */
        )) : node[_ctx.autoColorField] === "error" ? (openBlock(), createBlock(_component_icon_error, {
          key: 1,
          class: "tiny-svg-size fixicon icon-error"
        })) : node[_ctx.autoColorField] === "warning" ? (openBlock(), createBlock(_component_icon_warning, {
          key: 2,
          class: "tiny-svg-size fixicon icon-warning"
        })) : node[_ctx.autoColorField] === "success" || !node[_ctx.autoColorField] ? (openBlock(), createBlock(_component_icon_yes, {
          key: 3,
          class: "tiny-svg-size fixicon"
        })) : (openBlock(), createBlock(resolveDynamicComponent(node[_ctx.autoColorField]), {
          key: 4,
          class: "fixicons"
        }))], 8, _hoisted_3), createElementVNode(
          "div",
          {
            class: normalizeClass(["line", {
              "line-done": index < _ctx.state.current,
              "line-end": index === _ctx.state.nodes.length - 1
            }])
          },
          null,
          2
          /* CLASS */
        ), createElementVNode("div", _hoisted_5, [renderSlot(_ctx.$slots, "bottom", {
          slotScope: node
        }, function() {
          return [createElementVNode("div", {
            class: "name",
            textContent: toDisplayString(node[_ctx.nameField])
          }, null, 8, _hoisted_6), createElementVNode(
            "div",
            _hoisted_7,
            toDisplayString(_ctx.showStatus ? _ctx.getStatus(index) : ""),
            1
            /* TEXT */
          )];
        })])],
        6
        /* CLASS, STYLE */
      );
    }),
    128
    /* KEYED_FRAGMENT */
  ))])) : (openBlock(), createElementBlock(
    "div",
    {
      key: 1,
      class: normalizeClass(["tiny-steps-timeline", {
        reverse: _ctx.reverse
      }])
    },
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.nodes, function(node, index) {
        return openBlock(), createElementBlock(
          "div",
          {
            key: index,
            style: normalizeStyle({
              height: index === _ctx.state.nodes.length - 1 ? "" : _ctx.space ? _ctx.space + "px" : "88px"
            }),
            class: normalizeClass(["timeline", _ctx.getStatusCls(index)])
          },
          [createElementVNode("ul", null, [renderSlot(_ctx.$slots, "left", {
            slotScope: node
          }, function() {
            return [createElementVNode("li", _hoisted_8, [createElementVNode(
              "span",
              _hoisted_9,
              toDisplayString(_ctx.getDate(node[_ctx.timeField]).date),
              1
              /* TEXT */
            ), createElementVNode(
              "span",
              _hoisted_10,
              toDisplayString(_ctx.getDate(node[_ctx.timeField]).time),
              1
              /* TEXT */
            )])];
          }), createElementVNode(
            "li",
            {
              style: normalizeStyle({
                height: index === _ctx.state.nodes.length - 1 ? "" : _ctx.space ? _ctx.space + "px" : "88px"
              }),
              class: "line"
            },
            [createElementVNode("div", {
              class: "icon",
              onClick: function onClick($event) {
                return _ctx.handleClick({
                  index,
                  node
                });
              }
            }, [(_ctx.reverse ? index > _ctx.state.current : index < _ctx.state.current) && node[_ctx.autoColorField] === "error" ? (openBlock(), createBlock(_component_icon_error, {
              key: 0,
              class: "tiny-svg-size fixicon icon-error"
            })) : (_ctx.reverse ? index > _ctx.state.current : index < _ctx.state.current) && node[_ctx.autoColorField] === "warning" ? (openBlock(), createBlock(_component_icon_warning, {
              key: 1,
              class: "tiny-svg-size fixicon icon-warning"
            })) : (_ctx.reverse ? index > _ctx.state.current : index < _ctx.state.current) && (node[_ctx.autoColorField] === "success" || !node[_ctx.autoColorField]) ? (openBlock(), createBlock(_component_icon_yes, {
              key: 2,
              class: "tiny-svg-size fixicon"
            })) : (_ctx.reverse ? index > _ctx.state.current : index < _ctx.state.current) ? (openBlock(), createBlock(resolveDynamicComponent(node[_ctx.autoColorField]), {
              key: 3,
              class: "fixicons"
            })) : (openBlock(), createElementBlock(
              "span",
              _hoisted_12,
              toDisplayString(_ctx.showNumber ? _ctx.reverse ? _ctx.state.nodes.length - 1 - index + _ctx.start : index + _ctx.start : ""),
              1
              /* TEXT */
            ))], 8, _hoisted_11)],
            4
            /* STYLE */
          ), renderSlot(_ctx.$slots, "right", {
            slotScope: node
          }, function() {
            return [createElementVNode("li", {
              class: "name",
              textContent: toDisplayString(node[_ctx.nameField])
            }, null, 8, _hoisted_13)];
          })])],
          6
          /* CLASS, STYLE */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))],
    2
    /* CLASS */
  ))]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

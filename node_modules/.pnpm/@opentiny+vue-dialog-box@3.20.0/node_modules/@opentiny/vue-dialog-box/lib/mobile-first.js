import { renderless, api } from '@opentiny/vue-renderless/dialog-box/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { IconClose, IconFullscreen, IconMinscreen } from '@opentiny/vue-icon';
import ActionSheet from '@opentiny/vue-action-sheet';
import { resolveComponent, openBlock, createElementBlock, createVNode, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, withModifiers, normalizeStyle, renderSlot, toDisplayString, createCommentVNode, vShow, createBlock, mergeProps, createSlots, renderList, normalizeProps, guardReactiveProps } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    IconClose: IconClose(),
    IconFullscreen: IconFullscreen(),
    IconMinscreen: IconMinscreen(),
    TinyActionSheet: ActionSheet
  },
  emits: ["update:visible", "change", "before-close", "open", "close", "opened", "confirm", "cancel", "closed", "drag-start", "drag-move", "drag-end"],
  props: [].concat(props, ["resize", "isFormReset", "visible", "title", "modal", "modalAppendToBody", "appendToBody", "lockScroll", "closeOnClickModal", "closeOnPressEscape", "showClose", "width", "fullscreen", "top", "center", "draggable", "showHeader", "rightSlide", "destroyOnClose", "dialogClass", "beforeClose", "maxHeight"]),
  model: {
    prop: "visible",
    event: "update:visible"
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0
};
var _hoisted_2 = {
  "data-tag": "tiny-dialog-box__title",
  class: "text-sm text-color-text-primary mr-4 flex-1 font-bold"
};
var _hoisted_3 = {
  key: 1,
  "data-tag": "tiny-dialog-box__footer",
  class: "pt-4 pr-6 pb-4 pl-6 text-right box-border border-t border-t-color-bg-3 [&_[data-tag=tiny-button]]:mx-1 [&_[data-tag=tiny-button]]:my-0 [&_[data-tag=tiny-toolbar]_[data-tag=tiny-button]]:my-0 [&_[data-tag=tiny-toolbar]_[data-tag=tiny-button]]:mx-1"
};
var _hoisted_4 = {
  key: 1
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_fullscreen = resolveComponent("icon-fullscreen");
  var _component_icon_minscreen = resolveComponent("icon-minscreen");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  return openBlock(), createElementBlock("div", null, [_ctx.state.current !== "default" ? (openBlock(), createElementBlock("div", _hoisted_1, [createVNode(Transition, {
    name: _ctx.state.animationName,
    onAfterEnter: _ctx.afterEnter,
    onAfterLeave: _ctx.afterLeave,
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        {
          class: normalizeClass(["fixed inset-0 m-0 flex items-center", _ctx.dialogClass]),
          "data-tag": "tiny-dialog-box__wrapper",
          onClick: _cache[4] || (_cache[4] = withModifiers(function() {
            return _ctx.handleWrapperClick && _ctx.handleWrapperClick.apply(_ctx, arguments);
          }, ["self"]))
        },
        [(_ctx.destroyOnClose ? _ctx.visible : true) ? (openBlock(), createElementBlock(
          "div",
          {
            ref: "dialog",
            "data-tag": "tiny-dialog-box",
            class: normalizeClass([[{
              "left-0 top-0 w-screen h-screen": _ctx.state.isFull,
              "text-center": _ctx.center,
              "flex flex-col rounded-none": _ctx.rightSlide
            }], "absolute bg-color-bg-1 border-none overflow-hidden shadow-xl rounded flex flex-col"]),
            style: normalizeStyle(_ctx.state.style),
            key: _ctx.state.key
          },
          [_ctx.showHeader ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              "data-tag": "tiny-dialog-box__header",
              class: "px-6 py-4 h-12 leading-4 bg-color-bg-1 flex justify-between items-center border-b border-b-color-bg-3",
              onMousedown: _cache[3] || (_cache[3] = function() {
                return _ctx.handleDrag && _ctx.handleDrag.apply(_ctx, arguments);
              })
            },
            [renderSlot(_ctx.$slots, "title", {}, function() {
              return [createElementVNode(
                "span",
                _hoisted_2,
                toDisplayString(_ctx.title),
                1
                /* TEXT */
              )];
            }), _ctx.resize && !_ctx.state.isFull ? (openBlock(), createElementBlock("button", {
              key: 0,
              type: "button",
              "data-tag": "tiny-dialog-box__headerbtn",
              class: "border-none p-0 leading-none cursor-pointer focus:outline-0",
              "aria-label": "Resize",
              onClick: _cache[0] || (_cache[0] = function($event) {
                return _ctx.toggleFullScreen(true);
              })
            }, [createVNode(_component_icon_fullscreen, {
              "data-tag": "tiny-svg-size tiny-dialog-box__close",
              class: "fill-color-text-primary text-base hover:fill-color-brand"
            })])) : createCommentVNode("v-if", true), _ctx.resize && _ctx.state.isFull ? (openBlock(), createElementBlock("button", {
              key: 1,
              type: "button",
              "data-tag": "tiny-dialog-box__headerbtn",
              class: "border-none p-0 leading-none cursor-pointer focus:outline-0",
              "aria-label": "Resize",
              onClick: _cache[1] || (_cache[1] = function($event) {
                return _ctx.toggleFullScreen(false);
              })
            }, [createVNode(_component_icon_minscreen, {
              "data-tag": "tiny-svg-size tiny-dialog-box__close",
              class: "fill-color-text-primary text-base hover:fill-color-brand"
            })])) : createCommentVNode("v-if", true), _ctx.showClose ? (openBlock(), createElementBlock("button", {
              key: 2,
              type: "button",
              "data-tag": "tiny-dialog-box__headerbtn",
              class: "border-none p-0 leading-none cursor-pointer focus:outline-0",
              "aria-label": "Close",
              onClick: _cache[2] || (_cache[2] = function($event) {
                return _ctx.handleClose("close", $event);
              })
            }, [createVNode(_component_icon_close, {
              "data-tag": "tiny-svg-size tiny-dialog-box__close",
              class: "fill-color-text-primary text-base hover:fill-color-brand"
            })])) : createCommentVNode("v-if", true)],
            32
            /* NEED_HYDRATION */
          )) : createCommentVNode("v-if", true), createElementVNode(
            "div",
            {
              "data-tag": "tiny-dialog-box__body",
              class: normalizeClass(["text-left pt-0 pr-6 pb-0 pl-6 mb-3 mt-3 text-color-text-primary leading-5.5 text-sm overflow-auto", [_ctx.rightSlide || _ctx.state.isFull ? "max-h-[none] flex-auto" : "max-h-[65vh]"]])
            },
            [renderSlot(_ctx.$slots, "default")],
            2
            /* CLASS */
          ), _ctx.slots.footer ? (openBlock(), createElementBlock("div", _hoisted_3, [renderSlot(_ctx.$slots, "footer", {
            beforeClose: _ctx.beforeClose
          })])) : createCommentVNode("v-if", true)],
          6
          /* CLASS, STYLE */
        )) : createCommentVNode("v-if", true)],
        2
        /* CLASS */
      ), [[vShow, _ctx.visible]])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["name", "onAfterEnter", "onAfterLeave"])])) : createCommentVNode("v-if", true), _ctx.state.current === "default" ? (openBlock(), createElementBlock("div", _hoisted_4, [(_ctx.destroyOnClose ? _ctx.visible : true) ? (openBlock(), createBlock(_component_tiny_action_sheet, mergeProps({
    key: 0,
    ref: "dialog"
  }, _ctx.$props, {
    "show-footer": true,
    mask: _ctx.modal,
    "mask-closable": _ctx.closeOnClickModal,
    "before-close": _ctx.beforeClose,
    "onUpdate:visible": _cache[5] || (_cache[5] = function($event) {
      return _ctx.$emit("update:visible", $event);
    })
  }), createSlots({
    _: 2
    /* DYNAMIC */
  }, [renderList(_ctx.slots, function(value, name) {
    return {
      name,
      fn: withCtx(function(scopeData) {
        return [(openBlock(), createElementBlock(
          "div",
          {
            class: normalizeClass({
              "flex w-full justify-between px-4 [&_[data-tag=tiny-button]]:flex-grow [&_[data-tag=tiny-button]:nth-child(2)]:ml-2": name === "footer",
              "px-4 min-h-[250px]": name === "default"
            }),
            key: name
          },
          [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(scopeData)))],
          2
          /* CLASS */
        ))];
      })
    };
  })]), 1040, ["mask", "mask-closable", "before-close"])) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true)]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

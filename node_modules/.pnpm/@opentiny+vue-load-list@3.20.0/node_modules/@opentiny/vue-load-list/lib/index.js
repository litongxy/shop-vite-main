function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t2 = arguments[e];
      for (var r in t2)
        ({}).hasOwnProperty.call(t2, r) && (n[r] = t2[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import { t } from "@opentiny/vue-locale";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return MobileFirstTemplate;
};
var loadListProps = _extends({}, $props, {
  direction: {
    type: String,
    default: "down",
    validator: function validator(value) {
      return ["down", "up"].indexOf(value) > -1;
    }
  },
  offset: {
    type: [String, Number],
    default: 300
  },
  disabled: Boolean,
  scroller: Object,
  immediateCheck: {
    type: Boolean,
    default: true
  },
  error: Boolean,
  errorText: {
    type: String,
    default: t("ui.loadList.errorText")
  },
  loading: Boolean,
  loadingText: {
    type: String,
    default: t("ui.loadList.loadingText")
  },
  finished: Boolean,
  finishedText: {
    type: String,
    default: t("ui.loadList.finishedText")
  },
  delay: {
    type: [String, Number],
    default: 100
  }
});
var LoadList = defineComponent({
  name: $prefix + "List",
  props: loadListProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
LoadList.model = {
  prop: "loading",
  event: "update:loading"
};
LoadList.install = function(Vue) {
  Vue.component(LoadList.name, LoadList);
};
LoadList.version = version;
export {
  LoadList as default
};

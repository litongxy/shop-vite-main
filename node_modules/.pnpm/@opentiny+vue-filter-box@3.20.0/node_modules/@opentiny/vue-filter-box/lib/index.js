import { renderless, api } from '@opentiny/vue-renderless/filter-box/vue';
import { defineComponent, $prefix, setup, $props } from '@opentiny/vue-common';
import { iconDownWard, iconError, iconHelpCircle } from '@opentiny/vue-icon';
import Tooltip from '@opentiny/vue-tooltip';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, createBlock, withCtx, createVNode, createCommentVNode, withModifiers, resolveDynamicComponent } from 'vue';
import '@opentiny/vue-theme/filter-box/index.css';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var _sfc_main = defineComponent({
  name: $prefix + "FilterBox",
  emits: ["click", "handle-clear"],
  components: {
    IconDownWard: iconDownWard(),
    IconError: iconError(),
    IconHelpCircle: iconHelpCircle(),
    TinyTooltip: Tooltip
  },
  props: _extends({}, $props, {
    label: String,
    value: [String, Number],
    tip: String,
    placeholder: {
      type: String,
      default: ""
    },
    showClose: {
      type: Boolean,
      default: true
    },
    disabled: {
      type: Boolean,
      default: false
    },
    dropDownVisible: {
      type: Boolean,
      default: false
    },
    blank: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_icon_help_circle = resolveComponent("icon-help-circle");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_icon_error = resolveComponent("icon-error");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-filter-box", _ctx.disabled && "disabled", _ctx.blank && "is-blank"]),
      onClick: _cache[0] || (_cache[0] = function() {
        return _ctx.handeClick && _ctx.handeClick.apply(_ctx, arguments);
      })
    },
    [createElementVNode(
      "p",
      {
        class: normalizeClass(["title", _ctx.dropDownVisible && "active"])
      },
      [createElementVNode(
        "label",
        null,
        toDisplayString(_ctx.label),
        1
        /* TEXT */
      ), _ctx.tip ? (openBlock(), createBlock(_component_tiny_tooltip, {
        key: 0,
        effect: "light",
        content: _ctx.tip,
        placement: "top"
      }, {
        default: withCtx(function() {
          return [createVNode(_component_icon_help_circle)];
        }),
        _: 1
        /* STABLE */
      }, 8, ["content"])) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    ), createElementVNode(
      "p",
      {
        class: normalizeClass(["value", ["value", !_ctx.value && _ctx.value !== 0 && "placeholder"]])
      },
      toDisplayString(_ctx.value || _ctx.value === 0 ? _ctx.value : _ctx.placeholder),
      3
      /* TEXT, CLASS */
    ), _ctx.value && _ctx.showClose && !_ctx.disabled ? (openBlock(), createBlock(_component_icon_error, {
      key: 0,
      class: "filter-icon-close",
      onClick: withModifiers(_ctx.handleClear, ["stop"])
    }, null, 8, ["onClick"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.expandButtonIcon), {
      key: 1,
      class: normalizeClass(["filter-box-icon", _ctx.dropDownVisible && "is-reverse"])
    }, null, 8, ["class"]))],
    2
    /* CLASS */
  );
}
var FilterBox = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.20.0";
FilterBox.install = function(Vue) {
  Vue.component(FilterBox.name, FilterBox);
};
FilterBox.version = version;

export { FilterBox as default };

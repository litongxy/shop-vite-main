function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/ip-address/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var ipAddressProps = _extends({}, $props, {
  size: String,
  /**
   * @property {String} value - 显示值
   */
  modelValue: String,
  /**
   * @property {String} [type = IPv4]  - IP地址输入组件类型（'IPv4', 'IPv6',）可选择
   */
  type: {
    type: String,
    default: "IPv4",
    validator: function validator(value) {
      return Boolean(~["IPv4", "IPv6"].indexOf(value));
    }
  },
  /**
   * @property {Boolean} readonly - 只读
   */
  readonly: Boolean,
  /**
   *  @property {Boolean} disabled - 禁用
   */
  disabled: Boolean,
  /**
   * @property {String, Object} [delimiter = .] - 组件IP段显示的分隔符改为图标
   */
  delimiter: {
    type: [String, Object],
    default: "icon-dot-ipv4"
  }
});
var IpAddress = defineComponent({
  name: $prefix + "IpAddress",
  props: ipAddressProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
IpAddress.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
IpAddress.install = function(Vue) {
  Vue.component(IpAddress.name, IpAddress);
};
IpAddress.version = version;
export {
  IpAddress as default
};

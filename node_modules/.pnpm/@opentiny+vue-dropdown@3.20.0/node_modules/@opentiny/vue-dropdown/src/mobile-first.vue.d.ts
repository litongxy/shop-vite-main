declare const _default: import("@vue/runtime-core").DefineComponent<{
    type: StringConstructor;
    trigger: StringConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    singleButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    showTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideOnClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: NumberConstructor;
        default: number;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    round: {
        type: BooleanConstructor;
        default: boolean;
    };
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: (StringConstructor | NumberConstructor)[];
    showSelfIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    lazyShowPopper: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("item-click" | "visible-change" | "is-disabled" | "menu-item-click" | "current-item-click" | "selected-index" | "button-click")[], "item-click" | "visible-change" | "is-disabled" | "menu-item-click" | "current-item-click" | "selected-index" | "button-click", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    type: StringConstructor;
    trigger: StringConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    singleButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    showTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideOnClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: NumberConstructor;
        default: number;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    round: {
        type: BooleanConstructor;
        default: boolean;
    };
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: (StringConstructor | NumberConstructor)[];
    showSelfIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    lazyShowPopper: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    "onItem-click"?: ((...args: any[]) => any) | undefined;
    "onVisible-change"?: ((...args: any[]) => any) | undefined;
    "onMenu-item-click"?: ((...args: any[]) => any) | undefined;
    "onIs-disabled"?: ((...args: any[]) => any) | undefined;
    "onCurrent-item-click"?: ((...args: any[]) => any) | undefined;
    "onSelected-index"?: ((...args: any[]) => any) | undefined;
    "onButton-click"?: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    size: string;
    tiny_mode_root: boolean;
    singleButton: boolean;
    showTimeout: number;
    hideTimeout: number;
    hideOnClick: boolean;
    tabindex: number;
    border: boolean;
    round: boolean;
    showIcon: boolean;
    showSelfIcon: boolean;
    lazyShowPopper: boolean;
}, {}>;
export default _default;

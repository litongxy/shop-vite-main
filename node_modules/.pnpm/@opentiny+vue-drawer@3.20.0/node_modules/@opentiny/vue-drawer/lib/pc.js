import { renderless, api } from '@opentiny/vue-renderless/drawer/vue';
import { defineComponent, h, props, setup } from '@opentiny/vue-common';
import '@opentiny/vue-theme/drawer/index.css';
import { iconClose, iconHelpCircle } from '@opentiny/vue-icon';
import Button from '@opentiny/vue-button';
import Tooltip from '@opentiny/vue-tooltip';
import { resolveComponent, openBlock, createElementBlock, createVNode, Transition, withCtx, normalizeStyle, createCommentVNode, withDirectives, createElementVNode, normalizeClass, renderSlot, createBlock, toDisplayString, normalizeProps, mergeProps, Fragment, createTextVNode, vShow } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    TinyButton: Button,
    TinyTooltip: Tooltip,
    IconClose: iconClose(),
    IconHelpCircle: iconHelpCircle(),
    // tiny新增: 适配Vue2下, 在模板中渲染VNode
    SlotWrapper: {
      props: ["node"],
      render: function render() {
        var node = this.node;
        if (typeof node === "function") {
          return node(h);
        } else {
          return node;
        }
      }
    }
  },
  props: [].concat(props, ["visible", "title", "showHeader", "showFooter", "customClass", "placement", "width", "height", "mask", "dragable", "maskClosable", "lockScroll", "flex", "showClose", "zIndex", "beforeClose", "tipsProps", "customSlots"]),
  emits: ["update:visible", "open", "close", "confirm", "drag"],
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-drawer",
  class: "tiny-drawer"
};
var _hoisted_2 = {
  class: "tiny-drawer__box"
};
var _hoisted_3 = {
  key: 0,
  "data-tag": "drawer-header",
  ref: "header",
  class: "tiny-drawer__header-wrapper"
};
var _hoisted_4 = {
  key: 1,
  class: "tiny-drawer__header"
};
var _hoisted_5 = {
  class: "tiny-drawer__header-left"
};
var _hoisted_6 = {
  key: 0,
  class: "tiny-drawer__title"
};
var _hoisted_7 = {
  class: "tiny-drawer__header-right"
};
var _hoisted_8 = {
  key: 1,
  "data-tag": "drawer-footer",
  ref: "footer",
  class: "tiny-drawer__footer"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_slot_wrapper = resolveComponent("slot-wrapper");
  var _component_icon_help_circle = resolveComponent("icon-help-circle");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_tiny_button = resolveComponent("tiny-button");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(Transition, {
    name: "drawer-fade"
  }, {
    default: withCtx(function() {
      return [_ctx.mask && _ctx.state.visible ? (openBlock(), createElementBlock(
        "div",
        {
          key: 0,
          ref: "mask",
          class: "tiny-drawer__mask show-bg-color",
          style: normalizeStyle({
            zIndex: _ctx.zIndex
          }),
          onClick: _cache[0] || (_cache[0] = function($event) {
            return _ctx.handleClose("mask");
          })
        },
        null,
        4
        /* STYLE */
      )) : createCommentVNode("v-if", true)];
    }),
    _: 1
    /* STABLE */
  }), createVNode(Transition, {
    name: "drawer-slide-" + _ctx.placement,
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        {
          "data-tag": "tiny-drawer-main",
          ref: "drawerBox",
          class: normalizeClass(["tiny-drawer__main", {
            "is-left": _ctx.placement === "left",
            "is-right": _ctx.placement === "right",
            "is-top": _ctx.placement === "top",
            "is-bottom": _ctx.placement === "bottom",
            "drag-effects": !_ctx.state.dragEvent.isDrag,
            "toggle": _ctx.state.visible
          }, "tiny-drawer-main", _ctx.customClass]),
          style: normalizeStyle({
            width: ["left", "right"].includes(_ctx.placement) ? _ctx.state.computedWidth : null,
            height: ["top", "bottom", "left", "right"].includes(_ctx.placement) || _ctx.dragable ? _ctx.state.computedHeight : null,
            zIndex: _ctx.zIndex
          })
        },
        [_ctx.dragable ? (openBlock(), createElementBlock(
          "div",
          {
            key: 0,
            "data-tag": "drawer-drag-bar",
            ref: "dragBar",
            class: normalizeClass(["tiny-drawer__drag-bar", ["left", "right"].includes(_ctx.placement) && "p-left-Right", ["top", "bottom"].includes(_ctx.placement) && "p-top-Bottom", _ctx.placement === "left" && "p-left", _ctx.placement === "right" && "p-right", _ctx.placement === "top" && "p-top", _ctx.placement === "bottom" && "p-bottom"])
          },
          null,
          2
          /* CLASS */
        )) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_2, [_ctx.showHeader ? (openBlock(), createElementBlock(
          "div",
          _hoisted_3,
          [renderSlot(_ctx.$slots, "header", {}, function() {
            var _ctx$customSlots;
            return [(_ctx$customSlots = _ctx.customSlots) != null && _ctx$customSlots.header ? (openBlock(), createBlock(_component_slot_wrapper, {
              key: 0,
              node: _ctx.customSlots.header
            }, null, 8, ["node"])) : (openBlock(), createElementBlock("div", _hoisted_4, [createElementVNode("div", _hoisted_5, [_ctx.title ? (openBlock(), createElementBlock(
              "div",
              _hoisted_6,
              toDisplayString(_ctx.title),
              1
              /* TEXT */
            )) : createCommentVNode("v-if", true), _ctx.tipsProps ? (openBlock(), createBlock(
              _component_tiny_tooltip,
              normalizeProps(mergeProps({
                key: 1
              }, _ctx.tipsProps)),
              {
                default: withCtx(function() {
                  return [createVNode(_component_icon_help_circle, {
                    class: "tiny-drawer__help-icon"
                  })];
                }),
                _: 1
                /* STABLE */
              },
              16
              /* FULL_PROPS */
            )) : createCommentVNode("v-if", true)]), createElementVNode("div", _hoisted_7, [renderSlot(_ctx.$slots, "header-right", {}, function() {
              var _ctx$customSlots2;
              return [(_ctx$customSlots2 = _ctx.customSlots) != null && _ctx$customSlots2.headerRight ? (openBlock(), createBlock(_component_slot_wrapper, {
                key: 0,
                node: _ctx.customSlots.headerRight
              }, null, 8, ["node"])) : createCommentVNode("v-if", true)];
            })])]))];
          }), _ctx.showClose ? (openBlock(), createElementBlock("button", {
            key: 0,
            type: "button",
            class: "tiny-drawer__headerbtn",
            "aria-label": "Close",
            onClick: _cache[1] || (_cache[1] = function($event) {
              return _ctx.handleClose("close");
            })
          }, [createVNode(_component_icon_close, {
            class: "tiny-svg-size tiny-drawer__close"
          })])) : createCommentVNode("v-if", true)],
          512
          /* NEED_PATCH */
        )) : createCommentVNode("v-if", true), createElementVNode(
          "div",
          {
            "data-tag": "drawer-body",
            ref: "body",
            class: normalizeClass(["tiny-drawer__body", {
              "flex flex-col": _ctx.flex
            }, "drawer-body"])
          },
          [renderSlot(_ctx.$slots, "default", {}, function() {
            var _ctx$customSlots3;
            return [createVNode(_component_slot_wrapper, {
              node: (_ctx$customSlots3 = _ctx.customSlots) == null ? void 0 : _ctx$customSlots3.default
            }, null, 8, ["node"])];
          })],
          2
          /* CLASS */
        ), _ctx.showFooter ? (openBlock(), createElementBlock(
          "div",
          _hoisted_8,
          [renderSlot(_ctx.$slots, "footer", {}, function() {
            var _ctx$customSlots4;
            return [(_ctx$customSlots4 = _ctx.customSlots) != null && _ctx$customSlots4.footer ? (openBlock(), createBlock(_component_slot_wrapper, {
              key: 0,
              node: _ctx.customSlots.footer
            }, null, 8, ["node"])) : (openBlock(), createElementBlock(
              Fragment,
              {
                key: 1
              },
              [createVNode(_component_tiny_button, {
                plain: "",
                class: "tiny-drawer__cancel-btn",
                onClick: _cache[2] || (_cache[2] = function($event) {
                  return _ctx.handleClose("cancel");
                })
              }, {
                default: withCtx(function() {
                  return [createTextVNode(
                    toDisplayString(_ctx.t("ui.button.cancel")),
                    1
                    /* TEXT */
                  )];
                }),
                _: 1
                /* STABLE */
              }), createVNode(_component_tiny_button, {
                type: "primary",
                class: "tiny-drawer__confirm-btn",
                onClick: _cache[3] || (_cache[3] = function($event) {
                  return _ctx.handleClose("confirm");
                })
              }, {
                default: withCtx(function() {
                  return [createTextVNode(
                    toDisplayString(_ctx.t("ui.button.confirm")),
                    1
                    /* TEXT */
                  )];
                }),
                _: 1
                /* STABLE */
              })],
              64
              /* STABLE_FRAGMENT */
            ))];
          })],
          512
          /* NEED_PATCH */
        )) : createCommentVNode("v-if", true)])],
        6
        /* CLASS, STYLE */
      ), [[vShow, _ctx.state.visible]])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["name"])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

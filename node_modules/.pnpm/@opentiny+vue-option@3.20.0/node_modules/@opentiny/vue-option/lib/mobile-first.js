import { renderless, api } from '@opentiny/vue-renderless/option/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { AutoTip } from '@opentiny/vue-directive';
import { iconCheck, iconCheckedSur, iconFinish } from '@opentiny/vue-icon';
import { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, withModifiers, normalizeClass, createBlock, resolveDynamicComponent, createCommentVNode, renderSlot, createTextVNode, toDisplayString, createVNode, vShow } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  directives: {
    AutoTip
  },
  components: {
    IconCheck: iconCheck(),
    IconCheckedSur: iconCheckedSur(),
    IconFinish: iconFinish()
  },
  props: [].concat(props, ["value", "label", "created", "disabled", "events", "visible", "highlightClass", "required"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["data-index"];
var _hoisted_2 = {
  key: 0,
  class: "w-4 mr-2"
};
var _hoisted_3 = {
  class: "inline-block flex-1 leading-5 overflow-hidden text-ellipsis whitespace-normal sm:whitespace-nowrap"
};
var _hoisted_4 = {
  key: 1,
  class: "inline-block sm:hidden w-4 ml-4 shrink-0"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_finish = resolveComponent("icon-finish");
  var _directive_auto_tip = resolveDirective("auto-tip");
  return withDirectives((openBlock(), createElementBlock("div", {
    ref: "option",
    onMouseenter: _cache[0] || (_cache[0] = function() {
      return _ctx.hoverItem && _ctx.hoverItem.apply(_ctx, arguments);
    }),
    onClick: _cache[1] || (_cache[1] = withModifiers(function() {
      return _ctx.selectOptionClick && _ctx.selectOptionClick.apply(_ctx, arguments);
    }, ["stop"])),
    onMousedown: _cache[2] || (_cache[2] = withModifiers(function() {
    }, ["stop"])),
    "data-index": _ctx.state.index,
    class: normalizeClass(_ctx.m("h-fit flex items-center justify-between rounded text-color-text-primary text-sm sm:text-xs", "min-h-[40px] sm:min-h-[32px] cursor-pointer group sm:hover:bg-color-bg-4 sm:active:bg-color-bg-3 pl-0 pr-3 sm:px-3 my-1 sm:m-1", {
      "text-color-brand bg-color-bg-1 sm:bg-color-fill-6": _ctx.state.itemSelected && !_ctx.disabled,
      "text-color-text-disabled cursor-not-allowed [&_svg]:fill-color-icon-disabled [&_svg_path:first-of-type]:fill-color-bg-3": _ctx.disabled || _ctx.state.groupDisabled || _ctx.state.limitReached,
      "bg-color-bg-1 sm:bg-color-bg-4": _ctx.state.hover,
      "text-color-text-disabled cursor-not-allowed": _ctx.required
    }, _ctx.highlightClass)),
    "data-tag": "tiny-option"
  }, [_ctx.state.selectMultiple ? (openBlock(), createElementBlock("span", _hoisted_2, [(openBlock(), createBlock(resolveDynamicComponent("icon-" + _ctx.state.selectCls), {
    class: normalizeClass(_ctx.m("fill-color-icon-secondary relative", {
      "group-hover:fill-color-brand-hover": _ctx.state.hover,
      "fill-color-brand": _ctx.state.itemSelected,
      "fill-color-brand-disabled": _ctx.state.itemSelected && _ctx.required
    }))
  }, null, 8, ["class"]))])) : createCommentVNode("v-if", true), renderSlot(_ctx.$slots, "default", {}, function() {
    return [withDirectives((openBlock(), createElementBlock("span", _hoisted_3, [createTextVNode(
      toDisplayString(_ctx.state.currentLabel),
      1
      /* TEXT */
    )])), [[_directive_auto_tip, {
      placement: "right"
    }]])];
  }), !_ctx.state.selectMultiple && _ctx.state.itemSelected && !_ctx.disabled && !_ctx.state.groupDisabled ? (openBlock(), createElementBlock("span", _hoisted_4, [createVNode(_component_icon_finish, {
    "custom-class": "w-4 h-4 fill-color-brand"
  })])) : createCommentVNode("v-if", true)], 42, _hoisted_1)), [[vShow, _ctx.visible && _ctx.state.visible]]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

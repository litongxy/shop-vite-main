import type { ITagApi } from '@opentiny/vue-renderless/types/tag.type';
declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    value?: any;
    disabled?: any;
    text?: any;
    type?: any;
    size?: any;
    color?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    effect?: any;
    customClass?: any;
    closable?: any;
    hit?: any;
    theme?: any;
    operable?: any;
    selectable?: any;
}>, ITagApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("click" | "close")[], "click" | "close", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    value?: any;
    disabled?: any;
    text?: any;
    type?: any;
    size?: any;
    color?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    effect?: any;
    customClass?: any;
    closable?: any;
    hit?: any;
    theme?: any;
    operable?: any;
    selectable?: any;
}>>> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onClose?: ((...args: any[]) => any) | undefined;
}, {
    readonly value?: any;
    readonly disabled?: any;
    readonly text?: any;
    readonly type?: any;
    readonly size?: any;
    readonly color?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly effect?: any;
    readonly customClass?: any;
    readonly closable?: any;
    readonly hit?: any;
    readonly theme?: any;
    readonly operable?: any;
    readonly selectable?: any;
}, {}>;
export default _default;

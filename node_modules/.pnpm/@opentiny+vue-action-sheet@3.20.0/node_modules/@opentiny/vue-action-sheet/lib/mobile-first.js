import { renderless, api } from '@opentiny/vue-renderless/action-sheet/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { IconClose } from '@opentiny/vue-icon';
import Button from '@opentiny/vue-button';
import Drawer from '@opentiny/vue-drawer';
import BScroll from '@better-scroll/core';
import { resolveComponent, openBlock, createElementBlock, createVNode, withCtx, createElementVNode, renderSlot, toDisplayString, createBlock, createCommentVNode, normalizeClass, Fragment, renderList, withModifiers, createTextVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    TinyButton: Button,
    TinyDrawer: Drawer,
    IconClose: IconClose()
  },
  emits: ["update:modelValue", "update:visible", "hide", "close", "click"],
  props: [].concat(props, ["modelValue", "visible", "title", "showHeader", "showFooter", "showClose", "fullscreen", "customClass", "menus", "type", "mask", "maskClosable", "lockScroll", "flex", "beforeClose"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        BScroll
      }
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-action-sheet",
  class: "text-sm"
};
var _hoisted_2 = {
  key: 0,
  "data-tag": "action-sheet-header",
  ref: "header",
  class: "flex flex-none leading-6 pb-4 px-4 text-base items-center"
};
var _hoisted_3 = {
  class: "flex-1 flex items-center text-left"
};
var _hoisted_4 = {
  class: "min-w-[50%] max-w-[80%] px-4 text-center truncate font-bold"
};
var _hoisted_5 = {
  class: "flex-1 flex items-center justify-end"
};
var _hoisted_6 = {
  key: 0,
  "data-tag": "action-box",
  class: "flex flex-col h-full text-center"
};
var _hoisted_7 = {
  key: 0,
  "data-tag": "action-title",
  class: "flex-none flex items-center justify-center py-2.5 leading-5 text-sm text-color-none-hover border-b-0.5 border-color-bg-2"
};
var _hoisted_8 = {
  class: "px-4"
};
var _hoisted_9 = {
  class: "flex-auto min-h-[theme(spacing.12)]"
};
var _hoisted_10 = ["onClick"];
var _hoisted_11 = {
  class: "truncate px-4 text-color-text-primary font-medium"
};
var _hoisted_12 = {
  key: 1,
  "data-tag": "action-sheet-footer",
  ref: "footer",
  class: "flex flex-none pt-2 justify-center"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_close = resolveComponent("icon-close");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_drawer = resolveComponent("tiny-drawer");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_drawer, {
    ref: "drawer",
    title: _ctx.title,
    mask: _ctx.mask,
    flex: "",
    "before-close": _ctx.beforeClose,
    "mask-closable": _ctx.maskClosable,
    "lock-scroll": _ctx.lockScroll,
    "show-header": false,
    "custom-class": _ctx.m("rounded-t-lg", {
      "h-full": _ctx.fullscreen
    }, {
      "max-h-[90%]": !_ctx.fullscreen
    }, {
      "min-h-[theme(spacing.64)]": _ctx.type !== "action"
    }, {
      "py-4": _ctx.showHeader && _ctx.type !== "action"
    }, _ctx.customClass),
    placement: "bottom",
    visible: _ctx.visible,
    "onUpdate:visible": _cache[1] || (_cache[1] = function($event) {
      return _ctx.$emit("update:visible", $event);
    })
  }, {
    default: withCtx(function() {
      return [_ctx.showHeader && _ctx.type !== "action" ? (openBlock(), createElementBlock(
        "div",
        _hoisted_2,
        [createElementVNode("div", _hoisted_3, [renderSlot(_ctx.$slots, "header-left")]), createElementVNode(
          "div",
          _hoisted_4,
          toDisplayString(_ctx.title),
          1
          /* TEXT */
        ), createElementVNode("div", _hoisted_5, [renderSlot(_ctx.$slots, "header-right", {}, function() {
          return [_ctx.showClose ? (openBlock(), createBlock(_component_icon_close, {
            key: 0,
            "custom-class": "h-5 w-5 cursor-pointer",
            onClick: _ctx.close
          }, null, 8, ["onClick"])) : createCommentVNode("v-if", true)];
        })])],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true), renderSlot(_ctx.$slots, "body-top"), createElementVNode(
        "div",
        {
          "data-tag": "action-sheet-body",
          ref: "body",
          class: normalizeClass(["flex-auto overflow-auto scrollbar-size-0", {
            "flex flex-col": _ctx.flex
          }])
        },
        [_ctx.type === "action" ? (openBlock(), createElementBlock("div", _hoisted_6, [_ctx.title ? (openBlock(), createElementBlock("div", _hoisted_7, [createElementVNode(
          "span",
          _hoisted_8,
          toDisplayString(_ctx.title),
          1
          /* TEXT */
        )])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_9, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.menus, function(item, index) {
            return openBlock(), createElementBlock("div", {
              key: index,
              class: "flex-none flex items-center justify-center h-12 text-base border-b-0.5 border-color-bg-2 cursor-pointer",
              onClick: withModifiers(function($event) {
                return _ctx.actionSelectOption(item, index);
              }, ["stop"])
            }, [renderSlot(_ctx.$slots, "default", {
              data: item,
              index
            }, function() {
              return [createElementVNode(
                "span",
                _hoisted_11,
                toDisplayString(item),
                1
                /* TEXT */
              )];
            })], 8, _hoisted_10);
          }),
          128
          /* KEYED_FRAGMENT */
        ))]), createElementVNode(
          "div",
          {
            class: "flex-none flex items-center justify-center h-16 text-base border-t-8 border-color-bg-2 px-4 cursor-pointer",
            onClick: _cache[0] || (_cache[0] = withModifiers(function() {
              return _ctx.close && _ctx.close.apply(_ctx, arguments);
            }, ["stop"]))
          },
          toDisplayString(_ctx.t("ui.base.cancel")),
          1
          /* TEXT */
        )])) : renderSlot(_ctx.$slots, "default", {
          key: 1
        })],
        2
        /* CLASS */
      ), renderSlot(_ctx.$slots, "body-bottom"), _ctx.showFooter ? (openBlock(), createElementBlock(
        "div",
        _hoisted_12,
        [renderSlot(_ctx.$slots, "footer", {
          beforeClose: _ctx.beforeClose
        }, function() {
          return [createVNode(_component_tiny_button, {
            tiny_mode: "mobile-first",
            class: "flex-1 mx-4 sm:mx-0",
            type: "primary",
            onClick: _ctx.confirm
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.button.confirm")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          }, 8, ["onClick"])];
        })],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true)];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["title", "mask", "before-close", "mask-closable", "lock-scroll", "custom-class", "visible"])]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

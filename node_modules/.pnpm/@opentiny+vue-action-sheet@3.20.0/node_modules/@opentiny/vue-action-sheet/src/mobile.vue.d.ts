declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    ellipsis?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    height?: any;
    modelValue?: any;
    textField?: any;
    valueField?: any;
    menus?: any;
    visible?: any;
    contentPosition?: any;
    contentStyle?: any;
    contentClass?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    ellipsis?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    height?: any;
    modelValue?: any;
    textField?: any;
    valueField?: any;
    menus?: any;
    visible?: any;
    contentPosition?: any;
    contentStyle?: any;
    contentClass?: any;
}>>>, {
    readonly ellipsis?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly height?: any;
    readonly modelValue?: any;
    readonly textField?: any;
    readonly valueField?: any;
    readonly menus?: any;
    readonly visible?: any;
    readonly contentPosition?: any;
    readonly contentStyle?: any;
    readonly contentClass?: any;
}, {}>;
export default _default;

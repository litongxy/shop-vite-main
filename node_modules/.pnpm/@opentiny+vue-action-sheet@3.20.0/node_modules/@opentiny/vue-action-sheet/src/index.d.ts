export declare const actionSheetProps: {
    menus: {
        type: ArrayConstructor;
        default: () => never[];
    };
    modelValue: (StringConstructor | ArrayConstructor | NumberConstructor)[];
    beforeClose: FunctionConstructor;
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    valueField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    fullscreen: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customClass: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
    contentClass: StringConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    mask: {
        type: BooleanConstructor;
        default: boolean;
    };
    maskClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    flex: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentPosition: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentStyle: {
        type: ObjectConstructor;
        default: () => {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    menus: {
        type: ArrayConstructor;
        default: () => never[];
    };
    modelValue: (StringConstructor | ArrayConstructor | NumberConstructor)[];
    beforeClose: FunctionConstructor;
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    valueField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    fullscreen: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customClass: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
    contentClass: StringConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    mask: {
        type: BooleanConstructor;
        default: boolean;
    };
    maskClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    flex: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentPosition: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentStyle: {
        type: ObjectConstructor;
        default: () => {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    menus: {
        type: ArrayConstructor;
        default: () => never[];
    };
    modelValue: (StringConstructor | ArrayConstructor | NumberConstructor)[];
    beforeClose: FunctionConstructor;
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    valueField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    fullscreen: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customClass: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
    contentClass: StringConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    mask: {
        type: BooleanConstructor;
        default: boolean;
    };
    maskClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    flex: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentPosition: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentStyle: {
        type: ObjectConstructor;
        default: () => {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    type: string;
    ellipsis: boolean;
    mask: boolean;
    tiny_mode_root: boolean;
    height: string;
    textField: string;
    valueField: string;
    menus: unknown[];
    visible: boolean;
    contentPosition: boolean;
    contentStyle: Record<string, any>;
    showClose: boolean;
    showHeader: boolean;
    showFooter: boolean;
    maskClosable: boolean;
    lockScroll: boolean;
    flex: boolean;
    fullscreen: boolean;
}, {}>;
export default _default;

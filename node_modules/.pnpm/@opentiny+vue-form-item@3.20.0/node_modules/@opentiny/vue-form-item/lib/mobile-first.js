import { defineComponent, $prefix, setup, $props } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/form-item/vue';
import LabelWrap from './label-wrap';
import Tooltip from '@opentiny/vue-tooltip';
import { IconHelpCircle } from '@opentiny/vue-icon';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, normalizeStyle, createElementVNode, renderSlot, createTextVNode, toDisplayString, createBlock, createCommentVNode, withDirectives, vShow } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var $constants = {
  FORM_NAME: "Form",
  FORM_ITEM_NAME: "FormItem"
};
var _sfc_main = defineComponent({
  name: $prefix + "FormItem",
  componentName: "FormItem",
  components: {
    LabelWrap,
    TinyTooltip: Tooltip,
    IconHelpCircle: IconHelpCircle()
  },
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    appendToBody: {
      type: Boolean,
      default: void 0
    },
    error: String,
    for: String,
    inlineMessage: {
      type: [String, Boolean],
      default: ""
    },
    label: String,
    labelWidth: String,
    manual: Boolean,
    popperOptions: {
      type: Object,
      default: function _default2() {
        return {};
      }
    },
    prop: String,
    required: {
      type: Boolean,
      default: void 0
    },
    rules: [Object, Array],
    showMessage: {
      type: Boolean,
      default: true
    },
    size: String,
    tipContent: String,
    validateDisabled: Boolean,
    validateDebounce: Boolean,
    validatePosition: String,
    validateStatus: String,
    validateType: String
  }),
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["for"];
var _hoisted_2 = ["type-name"];
var _hoisted_3 = ["title"];
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_icon_help_circle = resolveComponent("icon-help-circle");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_label_wrap = resolveComponent("label-wrap");
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-form-item",
      class: normalizeClass(_ctx.m("flex min-h-[theme(spacing.12)] sm:min-h-[theme(spacing.7)] mb-0 p-0 sm:mb-4 box-border after:content-[''] after:table after:clear-both before:content-['']  before:table border-b-0.5 border-color-border-separator sm:border-none", _ctx.state.validateState === "error" && _ctx.state.validateType === "text" ? "mb-0 sm:mb-5" : "", _ctx.state.formInline ? "align-sub" : "", _ctx.state.labelPosition === "top" ? "block mb-4" : "", _ctx.state.validateState === "error" ? "[&_.tiny-range-editor]:border-color-error [&_[data-tag~=tiny-range-editor]]:border-color-error [&_[data-tag=tiny-numeric-main]]:border-color-error [&_input]:border-color-error [&_textarea]:border-color-error [&_input:focus]:border-color-error [&_input:hover]:border-color-error [&_textarea:focus]:border-color-error [&_textarea:hover]:border-color-error" : "", _ctx.state.labelPosition === "top" && !_ctx.state.hideRequiredAsterisk ? "pl-0" : "", !_ctx.slots.label && !_ctx.label ? "border-none" : "", _ctx.state.isDisplayOnly ? "border-none py-0.5" : ""))
    },
    [createVNode(_component_label_wrap, {
      "is-auto-width": _ctx.state.labelStyle && _ctx.state.labelStyle.width === "auto",
      "update-all": _ctx.state.labelWidth === "auto",
      "is-mobile-first": true
    }, {
      default: withCtx(function() {
        return [_ctx.slots.label || _ctx.label ? (openBlock(), createElementBlock("label", {
          key: 0,
          "data-tag": "tiny-item-label",
          class: normalizeClass(_ctx.m("py-3 sm:py-1.5 sm:min-h-[theme(spacing.7)] relative align-bottom float-left text-sm pr-3 sm:pr-4 box-border leading-5", "overflow-hidden text-ellipsis", _ctx.state.labelPosition === "top" ? "float-none inline-block text-left sm:text-left leading-none px-0 pt-0 pb-1.5 h-auto min-h-0 sm:py-0 sm:pb-1 sm:min-h-[theme(spacing.0)]" : "min-h-[theme(spacing.9)]", _ctx.state.labelPosition === "right" ? "text-right sm:text-right" : "", _ctx.state.labelPosition === "left" ? "text-left sm:text-left" : "", _ctx.state.formInline && _ctx.state.labelPosition === "top" ? "block" : "", _ctx.state.isDisplayOnly ? "leading-none h-auto align-[inherit] pr-4" : "", _ctx.tipContent ? "pr-5 sm:pr-7" : "", _ctx.state.labelPosition === "top" && !_ctx.state.hideRequiredAsterisk ? "overflow-visible relative before:absolute before:-left-2.5" : "", _ctx.state.disabled ? "text-color-icon-placeholder sm:text-color-text-secondary" : "text-color-text-secondary", _ctx.state.formItemSize !== "mini" ? "sm:text-sm" : "sm:text-xs")),
          style: normalizeStyle(_ctx.state.labelStyle),
          for: _ctx.state.labelFor
        }, [createElementVNode(
          "span",
          {
            class: normalizeClass(_ctx.m("max-h-[theme(spacing.10)] line-clamp-2 inline-block relative top-px leading-normal", (_ctx.state.isRequired || _ctx.required) && !_ctx.state.hideRequiredAsterisk ? "before:content-['*'] before:text-color-error before:relative before:mr-1" : "", _ctx.state.isDisplayOnly ? "pl-0 before:hidden" : ""))
          },
          [renderSlot(_ctx.$slots, "label", {}, function() {
            return [createTextVNode(
              toDisplayString(_ctx.label + _ctx.state.labelSuffix),
              1
              /* TEXT */
            )];
          })],
          2
          /* CLASS */
        ), _ctx.tipContent ? (openBlock(), createBlock(_component_tiny_tooltip, {
          key: 0,
          effect: "light",
          content: _ctx.tipContent,
          placement: "top"
        }, {
          default: withCtx(function() {
            return [createVNode(_component_icon_help_circle, {
              "custom-class": "h-4 w-4 ml-0.5 absolute right-1 sm:right-2 align-text-bottom fill-color-text-secondary",
              class: normalizeClass([_ctx.state.labelPosition === "top" ? "top-0.5 sm:top-1.5" : "top-3.5 sm:top-1.5"])
            }, null, 8, ["class"])];
          }),
          _: 1
          /* STABLE */
        }, 8, ["content"])) : createCommentVNode("v-if", true)], 14, _hoisted_1)) : createCommentVNode("v-if", true)];
      }),
      _: 3
      /* FORWARDED */
    }, 8, ["is-auto-width", "update-all"]), createElementVNode(
      "div",
      {
        "data-tag": "tiny-form-item-inline",
        class: normalizeClass(_ctx.m("flex-1 m-0 sm:m-auto relative sm:pt-0 sm:top-auto text-sm after:content-['']  after:table after:clear-both before:content-['']  before:table [&_button:not(:last-child)]:mr-2", "[&_[data-tag=tiny-checkbox]]:py-0 [&_[data-tag=tiny-input]]:w-full", "[&_[data-tag=tiny-input]_textarea]:px-0 sm:[&_[data-tag=tiny-input]_textarea]:px-3 [&_[data-tag=tiny-input]_textarea]:w-full [&_[data-tag=tiny-input]_textarea]:pt-1 sm:[&_[data-tag=tiny-input]_textarea]:pt-2", _ctx.state.formInline ? "align-sub leading-none" : "", _ctx.state.labelPosition === "top" && !_ctx.state.hideRequiredAsterisk ? _ctx.state.isDisplayOnly ? "pl-0" : "pl-2 sm:pl-0" : "pt-2", _ctx.state.formItemSize !== "mini" ? "sm:text-sm" : "sm:text-xs"))
      },
      [_ctx.state.isDisplayOnly && _ctx.state.isBasicComp ? (openBlock(), createElementBlock("div", {
        key: 0,
        "data-tag": "tiny-form-item-display-only",
        class: normalizeClass(["break-all min-h-[28px] leading-7 text-color-text-primary", _ctx.state.typeName === "textarea" ? "line-clamp-3" : "line-clamp-1"]),
        "type-name": _ctx.state.typeName,
        onMouseenter: _cache[0] || (_cache[0] = function() {
          return _ctx.handleMouseenter && _ctx.handleMouseenter.apply(_ctx, arguments);
        }),
        onMouseleave: _cache[1] || (_cache[1] = function() {
          return _ctx.handleMouseleave && _ctx.handleMouseleave.apply(_ctx, arguments);
        })
      }, toDisplayString(_ctx.state.displayedValue || "-"), 43, _hoisted_2)) : createCommentVNode("v-if", true), withDirectives(createElementVNode(
        "div",
        {
          "data-tag": "tiny-form-item-show",
          class: normalizeClass(["[&_[aria-label=checkbox-group]]:pl-0.5 sm:[&_[aria-label=checkbox-group]]:pl-0", "[&_>:first-child[data-tag=tiny-checkbox]]:pl-0.5 sm:[&_>:first-child[data-tag=tiny-checkbox]]:pl-0", "[&_[class^=tiny-autocomplete]]:w-full", "[&_[class^=tiny-cascader]]:w-full", _ctx.state.isDisplayOnly ? "[&_>*:not([data-tag^=tiny-],[class^=tiny-])]:leading-8 [&_>*:not([data-tag^=tiny-],[class^=tiny-])]:sm:leading-normal" : ""])
        },
        [renderSlot(_ctx.$slots, "default")],
        2
        /* CLASS */
      ), [[vShow, !(_ctx.state.isDisplayOnly && _ctx.state.isBasicComp)]]), _ctx.state.validateState === "error" && _ctx.showMessage && _ctx.state.showMessage ? renderSlot(_ctx.$slots, "error", {
        key: 1,
        dataTag: "tiny-form-item-error"
      }, function() {
        return [createElementVNode("div", {
          class: normalizeClass(_ctx.m("relative sm:absolute left-0 bottom-1 sm:-bottom-5 text-color-error text-xs leading-normal line-clamp-3 sm:line-clamp-1 break-all", typeof _ctx.inlineMessage === "boolean" && _ctx.inlineMessage || _ctx.state.inlineMessage ? "relative top-auto left-auto inline-block" : "", _ctx.state.formItemSize === "small" ? "pt-0.5" : "", _ctx.state.formItemSize === "mini" ? "pt-px" : "")),
          title: _ctx.state.validateMessage
        }, toDisplayString(_ctx.state.validateMessage), 11, _hoisted_3)];
      }) : createCommentVNode("v-if", true), _ctx.state.validateState !== "error" && _ctx.showMessage && _ctx.state.showMessage ? renderSlot(_ctx.$slots, "prompt", {
        key: 2
      }) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    )],
    2
    /* CLASS */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

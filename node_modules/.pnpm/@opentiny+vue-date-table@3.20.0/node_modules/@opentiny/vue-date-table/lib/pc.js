import { renderless, api } from '@opentiny/vue-renderless/date-table/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, toDisplayString, createCommentVNode, Fragment, renderList } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["changerange", "pick"],
  props: [].concat(props, ["cellClassName", "date", "defaultValue", "disabledDate", "firstDayOfWeek", "maxDate", "minDate", "rangeState", "selectionMode", "showWeekNumber", "value", "formatWeeks"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1 = {
  class: "tiny-date-table__week"
};
var _hoisted_2 = {
  key: 0
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "table",
    {
      class: normalizeClass(["tiny-date-table", {
        "is-week-mode": _ctx.selectionMode === "week"
      }]),
      cellspacing: "0",
      onMousemove: _cache[0] || (_cache[0] = withModifiers(function() {
        return _ctx.handleMouseMove && _ctx.handleMouseMove.apply(_ctx, arguments);
      }, ["stop"])),
      cellpadding: "0",
      onClick: _cache[1] || (_cache[1] = withModifiers(function() {
        return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);
      }, ["stop"]))
    },
    [createElementVNode("tbody", null, [createElementVNode("tr", _hoisted_1, [_ctx.showWeekNumber ? (openBlock(), createElementBlock(
      "th",
      _hoisted_2,
      toDisplayString(_ctx.t("ui.datepicker.week")),
      1
      /* TEXT */
    )) : createCommentVNode("v-if", true), (openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.weeks, function(weekDay, key) {
        return openBlock(), createElementBlock(
          "th",
          {
            key
          },
          toDisplayString(_ctx.t("ui.datepicker.weeks." + weekDay)),
          1
          /* TEXT */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))]), (openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.rows, function(row, key) {
        return openBlock(), createElementBlock(
          "tr",
          {
            class: normalizeClass(["tiny-date-table__row", {
              current: _ctx.isWeekActive(row[1])
            }]),
            key
          },
          [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(row, function(cellValue, key2) {
              return openBlock(), createElementBlock(
                "td",
                {
                  key: key2,
                  class: normalizeClass(_ctx.getCellClasses(cellValue))
                },
                [createElementVNode("div", null, [createElementVNode(
                  "span",
                  null,
                  toDisplayString(cellValue.text),
                  1
                  /* TEXT */
                )])],
                2
                /* CLASS */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))],
          2
          /* CLASS */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))])],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

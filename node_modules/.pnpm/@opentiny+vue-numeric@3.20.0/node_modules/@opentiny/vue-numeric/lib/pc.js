import { renderless, api } from '@opentiny/vue-renderless/numeric/vue';
import { defineComponent, directive, props, setup } from '@opentiny/vue-common';
import bind from '@opentiny/vue-renderless/common/deps/repeat-click';
import { iconChevronDown, iconChevronUp, iconMinus, iconPlus } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/numeric/index.css';
import FilterPanel from '@opentiny/vue-filter-panel';
import Radio from '@opentiny/vue-radio';
import RadioGroup from '@opentiny/vue-radio-group';
import Tag from '@opentiny/vue-tag';
import { resolveComponent, resolveDirective, openBlock, createElementBlock, withModifiers, normalizeClass, createVNode, withCtx, Fragment, renderList, createBlock, createTextVNode, toDisplayString, createCommentVNode, createElementVNode, withDirectives, withKeys, resolveDynamicComponent } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  directives: directive({
    repeatClick: {
      bind
    }
  }),
  components: {
    IconChevronDown: iconChevronDown(),
    IconChevronUp: iconChevronUp(),
    IconMinus: iconMinus(),
    IconPlus: iconPlus(),
    TinyFilterPanel: FilterPanel,
    TinyRadio: Radio,
    TinyRadioGroup: RadioGroup,
    TinyTag: Tag
  },
  props: [].concat(props, ["step", "tabindex", "stepStrictly", "max", "min", "modelValue", "disabled", "size", "controls", "controlsPosition", "name", "label", "placeholder", "precision", "circulate", "mouseWheel", "validateEvent", "allowEmpty", "emptyValue", "format", "unit", "stringMode", "holdZero", "plugin", "modelTruncation", "strictInput", "hideUnit", "unitCenter", "displayOnly", "showLeft", "showEmptyValue", "title", "shape", "tip", "clearable", "filter", "blank", "changeCompat"]),
  emits: ["update:modelValue", "change", "blur", "focus", "paste-error", "filter-change", "clear"],
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0
};
var _hoisted_2 = {
  key: 0,
  class: "tiny-numeric__popover-filter-content"
};
var _hoisted_3 = {
  key: 2,
  class: "tiny-numeric__unit"
};
var _hoisted_4 = {
  class: "tiny-numeric-display-only"
};
var _hoisted_5 = {
  key: 0,
  class: "tiny-numeric-display-only__content"
};
var _hoisted_6 = {
  class: "tiny-numeric-display-only__value"
};
var _hoisted_7 = {
  key: 0,
  class: "tiny-numeric-display-only__unit"
};
var _hoisted_8 = {
  key: 1
};
var _hoisted_9 = ["tabindex", "value", "placeholder", "max", "min", "name", "aria-label"];
var _hoisted_10 = {
  key: 1,
  "data-tag": "tiny-numeric-base",
  class: "tiny-numeric-base"
};
var _hoisted_11 = {
  key: 2,
  class: "tiny-numeric__unit"
};
var _hoisted_12 = {
  class: "tiny-numeric-display-only"
};
var _hoisted_13 = {
  key: 0,
  class: "tiny-numeric-display-only__content"
};
var _hoisted_14 = {
  class: "tiny-numeric-display-only__value"
};
var _hoisted_15 = {
  key: 0,
  class: "tiny-numeric-display-only__unit"
};
var _hoisted_16 = {
  key: 1
};
var _hoisted_17 = ["tabindex", "value", "placeholder", "max", "min", "name", "aria-label"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_tag = resolveComponent("tiny-tag");
  var _component_tiny_radio = resolveComponent("tiny-radio");
  var _component_tiny_radio_group = resolveComponent("tiny-radio-group");
  var _component_tiny_filter_panel = resolveComponent("tiny-filter-panel");
  var _directive_repeat_click = resolveDirective("repeat-click");
  return openBlock(), createElementBlock(
    "div",
    {
      onDragstart: _cache[20] || (_cache[20] = withModifiers(function() {
      }, ["prevent"])),
      class: normalizeClass(["tiny-numeric", _ctx.state.inputSize ? "tiny-numeric--" + _ctx.state.inputSize : "", {
        "is-disabled": _ctx.state.inputDisabled
      }, {
        "is-without-controls": !_ctx.controls || _ctx.unit && _ctx.hideUnit
      }, {
        "is-controls-right": _ctx.state.controlsAtRight
      }, {
        "is-display-only": _ctx.state.isDisplayOnly
      }]),
      onMousewheel: _cache[21] || (_cache[21] = withModifiers(function() {
        return _ctx.mouseEvent && _ctx.mouseEvent.apply(_ctx, arguments);
      }, ["prevent"]))
    },
    [_ctx.shape === "filter" ? (openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_filter_panel, {
      ref: "filterPanel",
      label: _ctx.title,
      value: _ctx.state.filterValue,
      tip: _ctx.tip,
      disabled: _ctx.disabled,
      clearable: _ctx.clearable,
      onHandleClear: _ctx.handleClear,
      blank: _ctx.blank
    }, {
      default: withCtx(function() {
        return [_ctx.shape === "filter" && _ctx.filter ? (openBlock(), createElementBlock("div", _hoisted_2, [createVNode(_component_tiny_radio_group, {
          modelValue: _ctx.state.radioVal,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
            return _ctx.state.radioVal = $event;
          }),
          onChange: _ctx.handleChange
        }, {
          default: withCtx(function() {
            return [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.state.filterMenu, function(item, index) {
                return openBlock(), createBlock(_component_tiny_radio, {
                  key: index,
                  label: _ctx.t(item),
                  class: "popover-filter-botton"
                }, {
                  default: withCtx(function() {
                    return [createVNode(
                      _component_tiny_tag,
                      {
                        size: "mini"
                      },
                      {
                        default: withCtx(function() {
                          return [createTextVNode(
                            toDisplayString(_ctx.t(item)),
                            1
                            /* TEXT */
                          )];
                        }),
                        _: 2
                        /* DYNAMIC */
                      },
                      1024
                      /* DYNAMIC_SLOTS */
                    )];
                  }),
                  _: 2
                  /* DYNAMIC */
                }, 1032, ["label"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))];
          }),
          _: 1
          /* STABLE */
        }, 8, ["modelValue", "onChange"])])) : createCommentVNode("v-if", true), createElementVNode(
          "div",
          {
            "data-tag": "tiny-numeric-filter",
            onDragstart: _cache[9] || (_cache[9] = withModifiers(function() {
            }, ["prevent"])),
            class: normalizeClass(["tiny-numeric", _ctx.state.inputSize ? "tiny-numeric--" + _ctx.state.inputSize : "", {
              "is-disabled": _ctx.state.inputDisabled
            }, {
              "is-without-controls": !_ctx.state.controls || _ctx.unit && _ctx.hideUnit
            }, {
              "is-controls-right": _ctx.state.controlsAtRight
            }, {
              "is-display-only": _ctx.state.isDisplayOnly
            }, {
              "is-filter": _ctx.shape === "filter"
            }]),
            onMousewheelPassive: _cache[10] || (_cache[10] = function() {
              return _ctx.mouseEvent && _ctx.mouseEvent.apply(_ctx, arguments);
            })
          },
          [_ctx.state.controls && !_ctx.unit ? withDirectives((openBlock(), createElementBlock(
            "span",
            {
              key: 0,
              class: normalizeClass(["tiny-numeric__decrease", {
                "is-disabled": _ctx.state.minDisabled
              }]),
              role: "button",
              onKeydown: _cache[1] || (_cache[1] = withKeys(function() {
                return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
              }, ["enter"]))
            },
            [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-down" : "icon-minus"), {
              class: "tiny-svg-size"
            }))],
            34
            /* CLASS, NEED_HYDRATION */
          )), [[_directive_repeat_click, _ctx.decrease]]) : createCommentVNode("v-if", true), _ctx.state.controls && !_ctx.unit ? withDirectives((openBlock(), createElementBlock(
            "span",
            {
              key: 1,
              class: normalizeClass(["tiny-numeric__increase", {
                "is-disabled": _ctx.state.maxDisabled
              }]),
              role: "button",
              onKeydown: _cache[2] || (_cache[2] = withKeys(function() {
                return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
              }, ["enter"]))
            },
            [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-up" : "icon-plus"), {
              class: "tiny-svg-size"
            }))],
            34
            /* CLASS, NEED_HYDRATION */
          )), [[_directive_repeat_click, _ctx.increase]]) : createCommentVNode("v-if", true), _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
            "div",
            _hoisted_3,
            toDisplayString(_ctx.unit),
            1
            /* TEXT */
          )) : createCommentVNode("v-if", true), createElementVNode(
            "div",
            {
              class: normalizeClass(["tiny-numeric__input", {
                "tiny-numeric__read-only": _ctx.state.isDisplayOnly
              }, _ctx.state.inputSize ? "tiny-input-" + _ctx.state.inputSize : "", _ctx.state.inputDisabled ? "is-disabled" : "", {
                "has-unit": _ctx.unit && !_ctx.hideUnit
              }, {
                "text-align-left": _ctx.unit && !_ctx.unitCenter
              }, {
                "tiny-numeric__controls-position": _ctx.controlsPosition
              }])
            },
            [createElementVNode("span", _hoisted_4, [_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock("span", _hoisted_5, [createElementVNode(
              "span",
              _hoisted_6,
              toDisplayString(_ctx.state.displayOnlyText),
              1
              /* TEXT */
            ), _ctx.unit && !_ctx.hideUnit && _ctx.state.currentValue ? (openBlock(), createElementBlock(
              "span",
              _hoisted_7,
              toDisplayString(_ctx.unit),
              1
              /* TEXT */
            )) : _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
              "span",
              _hoisted_8,
              toDisplayString(_ctx.unit),
              1
              /* TEXT */
            )) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), createElementVNode("input", {
              tabindex: _ctx.tabindex,
              class: normalizeClass(["tiny-numeric__input-inner", {
                "tiny-numeric__show-left": !_ctx.state.controls && (_ctx.showLeft || _ctx.shape === "filter")
              }]),
              ref: "input",
              value: _ctx.state.displayValue,
              placeholder: _ctx.placeholder,
              max: _ctx.max,
              min: _ctx.min,
              name: _ctx.name,
              "aria-label": _ctx.label,
              onKeydown: [_cache[3] || (_cache[3] = withKeys(withModifiers(function() {
                return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
              }, ["prevent"]), ["up"])), _cache[4] || (_cache[4] = withKeys(withModifiers(function() {
                return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
              }, ["prevent"]), ["down"]))],
              onBlur: _cache[5] || (_cache[5] = function() {
                return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
              }),
              onFocus: _cache[6] || (_cache[6] = function() {
                return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
              }),
              onInput: _cache[7] || (_cache[7] = function() {
                return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
              }),
              onChange: _cache[8] || (_cache[8] = function() {
                return _ctx.handleInputChange && _ctx.handleInputChange.apply(_ctx, arguments);
              })
            }, null, 42, _hoisted_9)])],
            2
            /* CLASS */
          )],
          34
          /* CLASS, NEED_HYDRATION */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["label", "value", "tip", "disabled", "clearable", "onHandleClear", "blank"])])) : (openBlock(), createElementBlock("div", _hoisted_10, [_ctx.controls && !_ctx.unit ? withDirectives((openBlock(), createElementBlock(
      "span",
      {
        key: 0,
        class: normalizeClass(["tiny-numeric__decrease", {
          "is-disabled": _ctx.state.minDisabled
        }]),
        role: "button",
        onKeydown: _cache[11] || (_cache[11] = withKeys(function() {
          return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
        }, ["enter"]))
      },
      [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-down" : "icon-minus"), {
        class: "tiny-svg-size"
      }))],
      34
      /* CLASS, NEED_HYDRATION */
    )), [[_directive_repeat_click, _ctx.decrease]]) : createCommentVNode("v-if", true), _ctx.controls && !_ctx.unit ? withDirectives((openBlock(), createElementBlock(
      "span",
      {
        key: 1,
        class: normalizeClass(["tiny-numeric__increase", {
          "is-disabled": _ctx.state.maxDisabled
        }]),
        role: "button",
        onKeydown: _cache[12] || (_cache[12] = withKeys(function() {
          return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
        }, ["enter"]))
      },
      [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-up" : "icon-plus"), {
        class: "tiny-svg-size"
      }))],
      34
      /* CLASS, NEED_HYDRATION */
    )), [[_directive_repeat_click, _ctx.increase]]) : createCommentVNode("v-if", true), _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
      "div",
      _hoisted_11,
      toDisplayString(_ctx.unit),
      1
      /* TEXT */
    )) : createCommentVNode("v-if", true), createElementVNode(
      "div",
      {
        class: normalizeClass(["tiny-numeric__input", {
          "tiny-numeric__read-only": _ctx.state.isDisplayOnly
        }, _ctx.state.inputSize ? "tiny-input-" + _ctx.state.inputSize : "", _ctx.state.inputDisabled ? "is-disabled" : "", {
          "has-unit": _ctx.unit && !_ctx.hideUnit
        }, {
          "text-align-left": _ctx.unit && !_ctx.unitCenter
        }, {
          "tiny-numeric__controls-position": _ctx.controlsPosition
        }])
      },
      [createElementVNode("span", _hoisted_12, [_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock("span", _hoisted_13, [createElementVNode(
        "span",
        _hoisted_14,
        toDisplayString(_ctx.state.displayOnlyText),
        1
        /* TEXT */
      ), _ctx.unit && !_ctx.hideUnit && _ctx.state.currentValue ? (openBlock(), createElementBlock(
        "span",
        _hoisted_15,
        toDisplayString(_ctx.unit),
        1
        /* TEXT */
      )) : _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
        "span",
        _hoisted_16,
        toDisplayString(_ctx.unit),
        1
        /* TEXT */
      )) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), createElementVNode("input", {
        tabindex: _ctx.tabindex,
        class: normalizeClass(["tiny-numeric__input-inner", {
          "tiny-numeric__show-left": !_ctx.controls && _ctx.showLeft
        }]),
        ref: "input",
        value: _ctx.state.displayValue,
        placeholder: _ctx.placeholder,
        max: _ctx.max,
        min: _ctx.min,
        name: _ctx.name,
        "aria-label": _ctx.label,
        onKeydown: [_cache[13] || (_cache[13] = withKeys(withModifiers(function() {
          return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
        }, ["prevent"]), ["up"])), _cache[14] || (_cache[14] = withKeys(withModifiers(function() {
          return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
        }, ["prevent"]), ["down"]))],
        onBlur: _cache[15] || (_cache[15] = function() {
          return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
        }),
        onFocus: _cache[16] || (_cache[16] = function() {
          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
        }),
        onCompositionend: _cache[17] || (_cache[17] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onInput: _cache[18] || (_cache[18] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onChange: _cache[19] || (_cache[19] = function() {
          return _ctx.handleInputChange && _ctx.handleInputChange.apply(_ctx, arguments);
        })
      }, null, 42, _hoisted_17)])],
      2
      /* CLASS */
    )]))],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

import { renderless, api } from '@opentiny/vue-renderless/numeric/vue';
import { defineComponent, directive, props, setup } from '@opentiny/vue-common';
import bind from '@opentiny/vue-renderless/common/deps/repeat-click';
import { iconChevronDown, iconChevronUp, iconMinus, iconPlus } from '@opentiny/vue-icon';
import { resolveDirective, openBlock, createElementBlock, normalizeClass, createElementVNode, withModifiers, withDirectives, withKeys, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var classes = {
  "numeric": "relative flex items-center w-24 h-7 text-sm bg-color-bg-1 leading-none",
  "numeric_display_none": "hidden",
  "numeric_size": "sm:w-full sm:h-7 sm:text-sm",
  "numeric_medium": "sm:w-full sm:h-8 sm:text-sm",
  "numeric_decrease": "absolute z-10 text-center cursor-pointer left-0 flex items-center justify-center bg-color-bg-3 active:bg-color-border-separator focus:bg-border-separator sm:bg-inherit sm:active:bg-inherit sm:focus:bg-inherit w-7 h-full leading-7 border-r-0.5 border-color-border-separator rounded-l sm:border-0",
  "numeric_increase": "absolute z-10 text-center cursor-pointer right-0 flex items-center justify-center bg-color-bg-3 active:bg-color-border-separator focus:bg-border-separator sm:bg-inherit sm:active:bg-inherit sm:focus:bg-inherit w-7 h-full leading-7 border-l-0.5 border-color-border-separator rounded-r sm:border-0",
  "numeric_crease_disabled": "bg-color-bg-4 active:bg-color-bg-4 focus:bg-color-bg-4",
  "numeric_svg": "sm:w-4 sm:h-4 w-3.5 h-3.5 inline-block fill-color-icon-primary sm:hover:fill-color-brand-hover sm:active:fill-color-brand-active sm:focus:fill-color-brand-active",
  "numeric_svg_disabled": "fill-color-text-disabled cursor-not-allowed",
  "numeric_svg_size": "sm:w-7 sm:leading-7 sm:text-xs",
  "numeric_svg_medium": "sm:w-8 sm:leading-8 sm:text-sm",
  "numeric_input": "w-full block leading-3",
  "numeric_input-medium-unit": "sm:px-3 px-2 sm:w-full",
  "numeric_input-medium-num": "sm:px-8 px-9 sm:w-full",
  "numeric_input-default-unit": "px-2 sm:w-full",
  "numeric_input-default-num": "px-8 sm:px-9 sm:w-full",
  "numeric_input-active": "border-0.5 sm:border border-solid rounded border-color-border-separator sm:border-color-border text-color-text-primary",
  "numeric_input-disabled": "bg-inherit sm:bg-color-bg-6 sm:[&_input]:bg-transparent cursor-not-allowed sm:border border-0.5 border-solid rounded border-color-border-separator text-color-text-disabled sm:text-color-text-secondary",
  "numeric_input_inner": "w-full z-10 leading-7 sm:text-sm inline-block overflow-hidden outline-0",
  "numeric-text-center": "text-center",
  "numeric-text-left": "text-left",
  "numeric_input_inner_size": "leading-7 text-sm",
  "numeric_input_inner_medium": "sm:leading-8 text-sm sm:text-sm",
  "numeric_input_inner_disabled": "bg-color-bg-1 sm:bg-color-bg-6"
};
var _sfc_main = defineComponent({
  directives: directive({
    repeatClick: {
      bind
    }
  }),
  components: {
    IconChevronDown: iconChevronDown(),
    IconChevronUp: iconChevronUp(),
    IconMinus: iconMinus(),
    IconPlus: iconPlus()
  },
  props: [].concat(props, ["step", "tabindex", "stepStrictly", "max", "min", "modelValue", "disabled", "size", "controls", "controlsPosition", "name", "label", "placeholder", "precision", "circulate", "mouseWheel", "validateEvent", "allowEmpty", "emptyValue", "format", "unit", "stringMode", "holdZero", "plugin", "modelTruncation", "strictInput", "hideUnit", "unitCenter", "displayOnly", "changeCompat"]),
  emits: ["update:modelValue", "change", "blur", "focus"],
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      classes
    });
  }
});
var _hoisted_1 = ["tabindex", "disabled", "value", "placeholder", "max", "min", "name", "aria-label"];
var _hoisted_2 = {
  key: 0,
  class: "ml-2"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_repeat_click = resolveDirective("repeat-click");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["w-auto", _ctx.state.isDisplayOnly ? "" : "flex items-center"]),
      "data-tag": "tiny-numeric"
    },
    [createElementVNode(
      "div",
      {
        "data-tag": "tiny-numeric-main",
        class: normalizeClass(_ctx.m(_ctx.gcls("numeric"), _ctx.state.inputSize === "medium" ? _ctx.gcls("numeric_medium") : _ctx.gcls("numeric_size"), _ctx.state.inputDisabled ? _ctx.gcls("numeric_input-disabled") : _ctx.gcls("numeric_input-active"), _ctx.state.isDisplayOnly ? _ctx.gcls("numeric_display_none") : "")),
        onDragstart: _cache[9] || (_cache[9] = withModifiers(function() {
        }, ["prevent"])),
        onMousewheelPassive: _cache[10] || (_cache[10] = function() {
          return _ctx.mouseEvent && _ctx.mouseEvent.apply(_ctx, arguments);
        })
      },
      [_ctx.controls ? withDirectives((openBlock(), createElementBlock(
        "span",
        {
          key: 0,
          "data-tag": "tiny-numeric-decrease",
          class: normalizeClass(_ctx.m(_ctx.gcls("numeric_decrease"), _ctx.state.inputSize === "medium" ? _ctx.gcls("numeric_svg_medium") : _ctx.gcls("numeric_svg_size"), _ctx.state.minDisabled || _ctx.state.inputDisabled ? _ctx.gcls("numeric_crease_disabled") : "")),
          role: "button",
          onKeydown: _cache[0] || (_cache[0] = withKeys(function() {
            return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
          }, ["enter"]))
        },
        [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-down" : "icon-minus"), {
          class: normalizeClass(_ctx.m(_ctx.state.minDisabled || _ctx.state.inputDisabled ? _ctx.gcls("numeric_svg_disabled") : _ctx.gcls("numeric_svg")))
        }, null, 8, ["class"]))],
        34
        /* CLASS, NEED_HYDRATION */
      )), [[_directive_repeat_click, _ctx.decrease]]) : createCommentVNode("v-if", true), _ctx.controls ? (openBlock(), createElementBlock(
        "div",
        {
          key: 1,
          "data-tag": "tiny-numeric-controls",
          class: normalizeClass(["sm:w-px sm:h-4 sm:bg-color-text-disabled sm:absolute", _ctx.state.inputSize === "medium" ? "sm:left-8" : "sm:left-7"])
        },
        null,
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true), _ctx.controls ? withDirectives((openBlock(), createElementBlock(
        "span",
        {
          key: 2,
          "data-tag": "numeric-increase",
          class: normalizeClass(_ctx.m(_ctx.gcls("numeric_increase"), _ctx.state.inputSize === "medium" ? _ctx.gcls("numeric_svg_medium") : _ctx.gcls("numeric_svg_size"), _ctx.state.minDisabled || _ctx.state.inputDisabled ? _ctx.gcls("numeric_crease_disabled") : "")),
          role: "button",
          onKeydown: _cache[1] || (_cache[1] = withKeys(function() {
            return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
          }, ["enter"]))
        },
        [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-up" : "icon-plus"), {
          class: normalizeClass(_ctx.state.maxDisabled || _ctx.state.inputDisabled ? _ctx.gcls("numeric_svg_disabled") : _ctx.gcls("numeric_svg"))
        }, null, 8, ["class"]))],
        34
        /* CLASS, NEED_HYDRATION */
      )), [[_directive_repeat_click, _ctx.increase]]) : createCommentVNode("v-if", true), _ctx.controls ? (openBlock(), createElementBlock(
        "div",
        {
          key: 3,
          "data-tag": "tiny-numeric-controls",
          class: normalizeClass(["sm:w-px sm:h-4 sm:bg-color-text-disabled sm:absolute", _ctx.state.inputSize === "medium" ? "sm:right-8" : "sm:right-7"])
        },
        null,
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true), createElementVNode(
        "div",
        {
          class: normalizeClass(_ctx.m(_ctx.gcls("numeric_input-" + (_ctx.state.inputSize === "medium" ? "medium" : "default") + "-" + (_ctx.controls ? "num" : "unit"))))
        },
        [createElementVNode("input", {
          tabindex: _ctx.tabindex,
          class: normalizeClass(_ctx.m(_ctx.gcls("numeric_input_inner"), _ctx.gcls("numeric-text-" + (_ctx.controls ? "center" : "left")), _ctx.state.inputSize === "medium" ? _ctx.gcls("numeric_input_inner_medium") : _ctx.gcls("numeric_input_inner_size"), _ctx.state.inputDisabled ? _ctx.gcls("numeric_input_inner_disabled") : _ctx.gcls("numeric_input_inner_default"))),
          disabled: _ctx.state.inputDisabled,
          ref: "input",
          value: _ctx.state.displayValue,
          placeholder: _ctx.placeholder,
          max: _ctx.max,
          min: _ctx.min,
          name: _ctx.name,
          "aria-label": _ctx.label,
          onKeydown: [_cache[2] || (_cache[2] = withKeys(withModifiers(function() {
            return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
          }, ["prevent"]), ["up"])), _cache[3] || (_cache[3] = withKeys(withModifiers(function() {
            return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
          }, ["prevent"]), ["down"]))],
          onBlur: _cache[4] || (_cache[4] = function() {
            return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
          }),
          onFocus: _cache[5] || (_cache[5] = function() {
            return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
          }),
          onCompositionend: _cache[6] || (_cache[6] = function() {
            return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
          }),
          onInput: _cache[7] || (_cache[7] = function() {
            return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
          }),
          onChange: _cache[8] || (_cache[8] = function() {
            return _ctx.handleInputChange && _ctx.handleInputChange.apply(_ctx, arguments);
          })
        }, null, 42, _hoisted_1)],
        2
        /* CLASS */
      )],
      34
      /* CLASS, NEED_HYDRATION */
    ), _ctx.state.isDisplayOnly ? (openBlock(), createElementBlock(
      "div",
      {
        key: 0,
        "data-tag": "numeric-display-only",
        class: normalizeClass(["sm:leading-normal text-color-text-primary", _ctx.state.inputSize !== "mini" ? "text-sm" : "text-xs"])
      },
      [createElementVNode(
        "span",
        null,
        toDisplayString(_ctx.state.displayOnlyText),
        1
        /* TEXT */
      ), _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
        "span",
        _hoisted_2,
        toDisplayString(_ctx.unit),
        1
        /* TEXT */
      )) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true), _ctx.unit && !_ctx.hideUnit && !_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock(
      "div",
      {
        key: 1,
        "data-tag": "numeric-unit",
        class: normalizeClass(["h-0 right-0 flex text-xs sm:text-sm items-center shrink-0", _ctx.unit ? "ml-2" : ""])
      },
      toDisplayString(_ctx.unit),
      3
      /* TEXT, CLASS */
    )) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

declare const _default: import("@vue/runtime-core").DefineComponent<{
    url: StringConstructor;
    replace: BooleanConstructor;
    to: (StringConstructor | ObjectConstructor)[];
    dot: BooleanConstructor;
    icon: ObjectConstructor;
    name: (StringConstructor | NumberConstructor)[];
    text: StringConstructor;
    info: (StringConstructor | NumberConstructor)[];
    badge: (StringConstructor | NumberConstructor)[];
    customIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    url: StringConstructor;
    replace: BooleanConstructor;
    to: (StringConstructor | ObjectConstructor)[];
    dot: BooleanConstructor;
    icon: ObjectConstructor;
    name: (StringConstructor | NumberConstructor)[];
    text: StringConstructor;
    info: (StringConstructor | NumberConstructor)[];
    badge: (StringConstructor | NumberConstructor)[];
    customIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    replace: boolean;
    dot: boolean;
    customIcon: boolean;
}, {}>;
export default _default;

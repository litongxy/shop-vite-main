/**
 * MIT License
 *
 * Copyright (c) 2019 Xu Liangzhan
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */
import { hooks } from '@opentiny/vue-common';
declare const _default: hooks.DefineComponent<any, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, {
    emitter: {
        emit(eventName: any): void;
        on: (event: any, callback: any, once?: boolean) => void;
        once(event: any, callback: any): void;
        off(event: any, callback: any): void;
    };
    fetchOption: null;
    filterData: never[];
    listeners: {};
    pagerConfig: null;
    pendingRecords: never[];
    sortData: {};
    tableCustoms: never[];
    tableData: never[];
    tableLoading: boolean;
    tablePage: {
        total: number;
        pageSize: number;
        currentPage: number;
    };
    tablePageLoading: boolean;
    realTimeTablePage: {
        total: number;
        pageSize: number;
        currentPage: number;
    };
    columnAnchorParams: {};
    columnAnchorKey: string;
    tasks: {};
    fullScreenClass: string;
    isInitialLoading: boolean;
}, {
    isMsg(): boolean;
    tableProps(): {};
    proxyOpts(): object;
    vSize(): any;
    seqIndex(): any;
    isThemeSaas(): boolean;
    isModeMobileFirst(): boolean;
    isViewGantt(): boolean;
    isViewCustom(): boolean;
}, {
    updateParentHeight(): void;
    connect({ name, vm }: {
        name: any;
        vm: any;
    }): void;
    createJob(type: any, callback: any): void;
    getVm(name: any): any;
    handleColumnInitReady(): void;
    handleRowClassName(params: any): never[];
    handleActiveMethod(params: any): any;
    sortChangeEvent(params: any): void;
    viewCls(module: any): any;
    addIntersectionObserver(): void;
    removeIntersectionObserver(): void;
    filterChangeEvent(params: any): void;
}, hooks.ComponentOptionsMixin, hooks.ComponentOptionsMixin, {}, string, hooks.PublicProps, Readonly<any>, {} | {
    [x: string]: any;
}, {}>;
export default _default;

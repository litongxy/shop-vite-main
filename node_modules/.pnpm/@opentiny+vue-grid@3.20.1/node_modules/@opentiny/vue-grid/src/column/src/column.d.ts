import { hooks } from '@opentiny/vue-common';
declare const _default: hooks.DefineComponent<{
    align: StringConstructor;
    className: (StringConstructor | FunctionConstructor)[];
    editor: (ObjectConstructor | FunctionConstructor)[];
    field: StringConstructor;
    filter: {};
    filterMethod: FunctionConstructor;
    filterMultiple: {
        type: BooleanConstructor;
        default: boolean;
    };
    filterRender: ObjectConstructor;
    filters: ArrayConstructor;
    fixed: StringConstructor;
    footerAlign: StringConstructor;
    footerClassName: (StringConstructor | FunctionConstructor)[];
    formatConfig: {
        type: ObjectConstructor;
        default: () => {
            data: never[];
        };
    };
    formatText: (StringConstructor | FunctionConstructor)[];
    formatValue: FunctionConstructor;
    group: {
        type: BooleanConstructor;
        default: boolean;
    };
    headerAlign: StringConstructor;
    headerClassName: (StringConstructor | FunctionConstructor)[];
    indexMethod: FunctionConstructor;
    label: StringConstructor;
    minWidth: (StringConstructor | NumberConstructor)[];
    params: ObjectConstructor;
    prop: StringConstructor;
    remoteSort: {
        type: BooleanConstructor;
        default: null;
    };
    renderer: (ObjectConstructor | FunctionConstructor)[];
    required: {
        type: BooleanConstructor;
        default: boolean;
    };
    resizable: {
        type: BooleanConstructor;
        default: null;
    };
    rules: ObjectConstructor;
    showHeaderOverflow: {
        type: (StringConstructor | BooleanConstructor)[];
        default: null;
    };
    showHeaderTip: {
        type: BooleanConstructor;
        default: null;
    };
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    showOverflow: {
        type: (StringConstructor | BooleanConstructor)[];
        default: null;
    };
    showTip: {
        type: BooleanConstructor;
        default: null;
    };
    sortBy: (StringConstructor | ArrayConstructor)[];
    sortMethod: FunctionConstructor;
    sortable: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: (StringConstructor | FunctionConstructor)[];
    treeNode: BooleanConstructor;
    type: StringConstructor;
    width: (StringConstructor | NumberConstructor)[];
    operationConfig: ObjectConstructor;
    equals: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, {
    columnConfig: any;
    slots: Readonly<{
        [name: string]: hooks.Slot<any> | undefined;
    }>;
    firstRow: any;
}, unknown, {}, {
    createColumn($table: any, colProps: any): any;
    renderHeader(h: any, params: any, type?: string | undefined): any[];
    renderCell(h: any, params: any): any;
    renderTreeCell(h: any, params: any): any[];
    renderTreeIcon(h: any, params: any): any[];
    renderIndexHeader(h: any, params: any): any;
    renderTreeIndexCell(h: any, params: any): any[];
    renderIndexCell(h: any, params: any): any;
    renderRadioHeader(h: any, params: any): any;
    renderRadioCell(h: any, params: any): any;
    renderTreeRadioCell(h: any, params: any): any[];
    renderSelectionHeader(h: any, params: any): any;
    renderSelectionCell(h: any, params: any): any;
    renderTreeSelectionCell(h: any, params: any): any[];
    renderSelectionCellByProp(h: any, params: any): any;
    renderTreeSelectionCellByProp(h: any, params: any): any[];
    renderExpandCell(h: any, params: any): any[] | null;
    renderExpandData(h: any, params: any): any;
    renderSortAndFilterHeader(h: any, params: any): any[];
    renderSortHeader(h: any, params: any): any[];
    renderSortIcon(h: any, params: any, cls?: string): any[];
    renderFilterHeader(h: any, params: any): any[];
    renderFilterIcon(h: any, params: any, cls?: string): any[];
    renderEditHeader(h: any, params: any): any[];
    renderTreeRowEdit(h: any, params: any): any[];
    renderRowEdit(h: any, params: any): any;
    renderTreeCellEdit(h: any, params: any): any[];
    renderCellEdit(h: any, params: any): any;
    runRenderer(h: any, params: any, _vm: any, isEdit: any): any;
    getSuffixCls(params: any): string[];
    renderOperationCell(h: any, params: any): any;
}, hooks.ComponentOptionsMixin, hooks.ComponentOptionsMixin, {}, string, hooks.PublicProps, Readonly<hooks.ExtractPropTypes<{
    align: StringConstructor;
    className: (StringConstructor | FunctionConstructor)[];
    editor: (ObjectConstructor | FunctionConstructor)[];
    field: StringConstructor;
    filter: {};
    filterMethod: FunctionConstructor;
    filterMultiple: {
        type: BooleanConstructor;
        default: boolean;
    };
    filterRender: ObjectConstructor;
    filters: ArrayConstructor;
    fixed: StringConstructor;
    footerAlign: StringConstructor;
    footerClassName: (StringConstructor | FunctionConstructor)[];
    formatConfig: {
        type: ObjectConstructor;
        default: () => {
            data: never[];
        };
    };
    formatText: (StringConstructor | FunctionConstructor)[];
    formatValue: FunctionConstructor;
    group: {
        type: BooleanConstructor;
        default: boolean;
    };
    headerAlign: StringConstructor;
    headerClassName: (StringConstructor | FunctionConstructor)[];
    indexMethod: FunctionConstructor;
    label: StringConstructor;
    minWidth: (StringConstructor | NumberConstructor)[];
    params: ObjectConstructor;
    prop: StringConstructor;
    remoteSort: {
        type: BooleanConstructor;
        default: null;
    };
    renderer: (ObjectConstructor | FunctionConstructor)[];
    required: {
        type: BooleanConstructor;
        default: boolean;
    };
    resizable: {
        type: BooleanConstructor;
        default: null;
    };
    rules: ObjectConstructor;
    showHeaderOverflow: {
        type: (StringConstructor | BooleanConstructor)[];
        default: null;
    };
    showHeaderTip: {
        type: BooleanConstructor;
        default: null;
    };
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    showOverflow: {
        type: (StringConstructor | BooleanConstructor)[];
        default: null;
    };
    showTip: {
        type: BooleanConstructor;
        default: null;
    };
    sortBy: (StringConstructor | ArrayConstructor)[];
    sortMethod: FunctionConstructor;
    sortable: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: (StringConstructor | FunctionConstructor)[];
    treeNode: BooleanConstructor;
    type: StringConstructor;
    width: (StringConstructor | NumberConstructor)[];
    operationConfig: ObjectConstructor;
    equals: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    formatConfig: Record<string, any>;
    showIcon: boolean;
    sortable: boolean;
    remoteSort: boolean;
    treeNode: boolean;
    showTip: boolean;
    showHeaderTip: boolean;
    resizable: boolean;
    showHeaderOverflow: string | boolean;
    showOverflow: string | boolean;
    group: boolean;
    filterMultiple: boolean;
    required: boolean;
}, {}>;
export default _default;

declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {};
    };
    modelValue: StringConstructor;
    visible: BooleanConstructor;
    alpha: BooleanConstructor;
    predefine: ArrayConstructor;
    history: ArrayConstructor;
    size: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    format: {
        type: ArrayConstructor;
        default: () => never[];
        validator(val: string[]): boolean;
    };
    enableHistory: {
        type: BooleanConstructor;
        default: boolean;
    };
    enablePredefineColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {};
    };
    modelValue: StringConstructor;
    visible: BooleanConstructor;
    alpha: BooleanConstructor;
    predefine: ArrayConstructor;
    history: ArrayConstructor;
    size: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    format: {
        type: ArrayConstructor;
        default: () => never[];
        validator(val: string[]): boolean;
    };
    enableHistory: {
        type: BooleanConstructor;
        default: boolean;
    };
    enablePredefineColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    format: unknown[];
    size: string;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    visible: boolean;
    alpha: boolean;
    enableHistory: boolean;
    enablePredefineColor: boolean;
}, {}>;
export default _default;

import type { PropType } from '@opentiny/vue-common';
export declare const $constants: {
    PROCESS_DONE_CLS: string;
    PROCESS_CUR_CLS: string;
    PROCESS_WAIT_CLS: string;
    PROCESS_DISABLED_CLS: string;
    PROCESS_ERROR_CLS: string;
    STACK_NODES_MAX: number;
    LIMITED_STACK_NODES: number;
};
export type ShapeType = 'circle' | 'dot';
export declare const timelineProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            PROCESS_DONE_CLS: string;
            PROCESS_CUR_CLS: string;
            PROCESS_WAIT_CLS: string;
            PROCESS_DISABLED_CLS: string;
            PROCESS_ERROR_CLS: string;
            STACK_NODES_MAX: number;
            LIMITED_STACK_NODES: number;
        };
    };
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    horizontal: {
        type: BooleanConstructor;
        default: boolean;
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    nameField: {
        type: StringConstructor;
        default: string;
    };
    timeField: {
        type: StringConstructor;
        default: string;
    };
    tipsField: {
        type: StringConstructor;
        default: string;
    };
    autoColorField: {
        type: StringConstructor;
        default: string;
    };
    showIconField: {
        type: StringConstructor;
        default: string;
    };
    start: {
        type: NumberConstructor;
        default: number;
    };
    data: {
        type: ArrayConstructor;
        default: () => never[];
    };
    space: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    active: {
        type: NumberConstructor;
        default: number;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
    showStatus: {
        type: BooleanConstructor;
        default: boolean;
    };
    subField: {
        type: BooleanConstructor;
        default: boolean;
    };
    foldDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    nodeMax: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    limitedNodes: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    onlyNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    shape: {
        type: PropType<ShapeType>;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            PROCESS_DONE_CLS: string;
            PROCESS_CUR_CLS: string;
            PROCESS_WAIT_CLS: string;
            PROCESS_DISABLED_CLS: string;
            PROCESS_ERROR_CLS: string;
            STACK_NODES_MAX: number;
            LIMITED_STACK_NODES: number;
        };
    };
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    horizontal: {
        type: BooleanConstructor;
        default: boolean;
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    nameField: {
        type: StringConstructor;
        default: string;
    };
    timeField: {
        type: StringConstructor;
        default: string;
    };
    tipsField: {
        type: StringConstructor;
        default: string;
    };
    autoColorField: {
        type: StringConstructor;
        default: string;
    };
    showIconField: {
        type: StringConstructor;
        default: string;
    };
    start: {
        type: NumberConstructor;
        default: number;
    };
    data: {
        type: ArrayConstructor;
        default: () => never[];
    };
    space: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    active: {
        type: NumberConstructor;
        default: number;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
    showStatus: {
        type: BooleanConstructor;
        default: boolean;
    };
    subField: {
        type: BooleanConstructor;
        default: boolean;
    };
    foldDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    nodeMax: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    limitedNodes: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    onlyNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    shape: {
        type: PropType<ShapeType>;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            PROCESS_DONE_CLS: string;
            PROCESS_CUR_CLS: string;
            PROCESS_WAIT_CLS: string;
            PROCESS_DISABLED_CLS: string;
            PROCESS_ERROR_CLS: string;
            STACK_NODES_MAX: number;
            LIMITED_STACK_NODES: number;
        };
    };
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    horizontal: {
        type: BooleanConstructor;
        default: boolean;
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    nameField: {
        type: StringConstructor;
        default: string;
    };
    timeField: {
        type: StringConstructor;
        default: string;
    };
    tipsField: {
        type: StringConstructor;
        default: string;
    };
    autoColorField: {
        type: StringConstructor;
        default: string;
    };
    showIconField: {
        type: StringConstructor;
        default: string;
    };
    start: {
        type: NumberConstructor;
        default: number;
    };
    data: {
        type: ArrayConstructor;
        default: () => never[];
    };
    space: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    active: {
        type: NumberConstructor;
        default: number;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
    showStatus: {
        type: BooleanConstructor;
        default: boolean;
    };
    subField: {
        type: BooleanConstructor;
        default: boolean;
    };
    foldDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    nodeMax: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    limitedNodes: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    onlyNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    shape: {
        type: PropType<ShapeType>;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    data: unknown[];
    reverse: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    vertical: boolean;
    shape: ShapeType;
    start: number;
    horizontal: boolean;
    active: number;
    lineWidth: string | number;
    showNumber: boolean;
    nameField: string;
    space: string | number;
    showStatus: boolean;
    timeField: string;
    tipsField: string;
    autoColorField: string;
    subField: boolean;
    foldDisabled: boolean;
    nodeMax: string | number;
    limitedNodes: string | number;
    onlyNumber: boolean;
    showIconField: string;
}, {}>;
export default _default;

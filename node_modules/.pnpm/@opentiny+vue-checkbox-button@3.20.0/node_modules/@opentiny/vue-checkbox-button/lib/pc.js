import { renderless, api } from '@opentiny/vue-renderless/checkbox-button/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { openBlock, createElementBlock, normalizeClass, withDirectives, vModelCheckbox, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  emits: ["change", "update:modelValue"],
  props: [].concat(props, ["modelValue", "label", "text", "events", "disabled", "checked", "name", "trueLabel", "falseLabel", "tabindex"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["aria-checked", "aria-disabled"];
var _hoisted_2 = ["name", "tabindex", "disabled", "true-value", "false-value"];
var _hoisted_3 = ["name", "tabindex", "disabled", "value"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("label", {
    class: normalizeClass(["tiny-checkbox-button", [_ctx.state.size ? "tiny-checkbox-button--" + _ctx.state.size : "", {
      "is-disabled": _ctx.state.isDisabled
    }, {
      "is-checked": _ctx.state.isChecked
    }, {
      "is-focus": _ctx.state.focus
    }]]),
    role: "checkbox",
    "aria-checked": _ctx.state.isChecked,
    "aria-disabled": _ctx.state.isDisabled
  }, [_ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock("input", {
    key: 0,
    class: "tiny-checkbox-button__original",
    type: "checkbox",
    name: _ctx.name,
    tabindex: _ctx.tabindex,
    disabled: _ctx.state.isDisabled,
    "true-value": _ctx.trueLabel,
    "false-value": _ctx.falseLabel,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
      return _ctx.state.model = $event;
    }),
    onChange: _cache[1] || (_cache[1] = function() {
      return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
    }),
    onFocus: _cache[2] || (_cache[2] = function($event) {
      return _ctx.state.focus = true;
    }),
    onBlur: _cache[3] || (_cache[3] = function($event) {
      return _ctx.state.focus = false;
    })
  }, null, 40, _hoisted_2)), [[vModelCheckbox, _ctx.state.model]]) : withDirectives((openBlock(), createElementBlock("input", {
    key: 1,
    class: "tiny-checkbox-button__original",
    type: "checkbox",
    name: _ctx.name,
    tabindex: _ctx.tabindex,
    disabled: _ctx.state.isDisabled,
    value: _ctx.label,
    "onUpdate:modelValue": _cache[4] || (_cache[4] = function($event) {
      return _ctx.state.model = $event;
    }),
    onChange: _cache[5] || (_cache[5] = function() {
      return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
    }),
    onFocus: _cache[6] || (_cache[6] = function($event) {
      return _ctx.state.focus = true;
    }),
    onBlur: _cache[7] || (_cache[7] = function($event) {
      return _ctx.state.focus = false;
    })
  }, null, 40, _hoisted_3)), [[vModelCheckbox, _ctx.state.model]]), _ctx.slots.default || _ctx.state.isShowText ? (openBlock(), createElementBlock(
    "span",
    {
      key: 2,
      class: "tiny-checkbox-button__inner",
      style: normalizeStyle(_ctx.state.isChecked ? _ctx.state.activeStyle : null)
    },
    [renderSlot(_ctx.$slots, "default", {}, function() {
      return [createTextVNode(
        toDisplayString(_ctx.state.showText),
        1
        /* TEXT */
      )];
    })],
    4
    /* STYLE */
  )) : createCommentVNode("v-if", true)], 10, _hoisted_1);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

import { defineComponent, $prefix, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/popconfirm/vue';
import Popover from '@opentiny/vue-popover';
import Button from '@opentiny/vue-button';
import { iconSuccess, iconHelp, iconWarningTriangle, iconError } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/popconfirm/index.css';
import { resolveComponent, openBlock, createElementBlock, createElementVNode, createVNode, withCtx, renderSlot, createBlock, resolveDynamicComponent, normalizeClass, createCommentVNode, toDisplayString, createTextVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "Popconfirm",
  components: {
    TinyPopover: Popover,
    TinyButton: Button,
    IconSuccess: iconSuccess(),
    IconHelp: iconHelp(),
    IconWarningTriangle: iconWarningTriangle(),
    IconError: iconError()
  },
  props: {
    _constants: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    popperOptions: Object,
    message: String,
    customClass: String,
    trigger: {
      type: String,
      default: "hover",
      validator: function validator(value) {
        return ["click", "hover"].includes(value);
      }
    },
    cancelButton: {
      type: Boolean,
      default: true
    },
    closeOnClickOutside: {
      type: Boolean,
      default: true
    },
    title: String,
    placement: {
      type: String,
      default: "top"
    },
    width: {
      type: [String, Number],
      default: ""
    },
    type: [String, Object],
    reference: {},
    events: Object,
    popperAppendToBody: {
      type: Boolean,
      default: true
    }
  },
  emits: ["hide", "show", "confirm"],
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-popconfirm"
};
var _hoisted_2 = {
  class: "tiny-popconfirm-popover__container"
};
var _hoisted_3 = {
  class: "tiny-popconfirm-popover__header"
};
var _hoisted_4 = {
  class: "tiny-popconfirm-popover__title"
};
var _hoisted_5 = {
  class: "tiny-popconfirm-popover__content"
};
var _hoisted_6 = {
  class: "tiny-popconfirm-popover__footer"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_popover = resolveComponent("tiny-popover");
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("div", null, [createVNode(_component_tiny_popover, {
    ref: "popover",
    modelValue: _ctx.state.showPopover,
    "onUpdate:modelValue": _cache[2] || (_cache[2] = function($event) {
      return _ctx.state.showPopover = $event;
    }),
    placement: _ctx.placement,
    trigger: "manual",
    width: _ctx.width,
    "popper-class": "tiny-popconfirm-popover " + (_ctx.customClass || ""),
    "popper-options": _ctx.popperOptions,
    "append-to-body": _ctx.popperAppendToBody,
    reference: _ctx.reference,
    onShow: _cache[3] || (_cache[3] = function($event) {
      return _ctx.handleEmit("show");
    }),
    onHide: _cache[4] || (_cache[4] = function($event) {
      return _ctx.handleEmit("hide");
    })
  }, {
    reference: withCtx(function() {
      return [createElementVNode(
        "div",
        {
          class: "tiny-popconfirm__reference",
          onClick: _cache[0] || (_cache[0] = function($event) {
            return _ctx.show("click");
          }),
          onMouseenter: _cache[1] || (_cache[1] = function($event) {
            return _ctx.show("hover");
          })
        },
        [renderSlot(_ctx.$slots, "reference")],
        32
        /* NEED_HYDRATION */
      )];
    }),
    default: withCtx(function() {
      return [createElementVNode("div", _hoisted_2, [createElementVNode("div", _hoisted_3, [_ctx.type ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.getIcon), {
        key: 0,
        class: normalizeClass(["tiny-popconfirm-popover__icon", _ctx.type ? "tiny-popconfirm-popover--" + _ctx.type : ""])
      }, null, 8, ["class"])) : createCommentVNode("v-if", true), createElementVNode(
        "div",
        _hoisted_4,
        toDisplayString(_ctx.title),
        1
        /* TEXT */
      )]), createElementVNode(
        "div",
        _hoisted_5,
        toDisplayString(_ctx.message),
        1
        /* TEXT */
      ), createElementVNode("div", _hoisted_6, [renderSlot(_ctx.$slots, "footer", {}, function() {
        return [_ctx.cancelButton ? (openBlock(), createBlock(_component_tiny_button, {
          key: 0,
          class: "tiny-popconfirm-popover__cancel-button",
          size: "mini",
          onClick: _ctx.hide
        }, {
          default: withCtx(function() {
            return [createTextVNode(
              toDisplayString(_ctx.t("ui.button.cancel")),
              1
              /* TEXT */
            )];
          }),
          _: 1
          /* STABLE */
        }, 8, ["onClick"])) : createCommentVNode("v-if", true), createVNode(_component_tiny_button, {
          class: "tiny-popconfirm-popover__confirm-button",
          size: "mini",
          type: "primary",
          onClick: _ctx.confirm
        }, {
          default: withCtx(function() {
            return [createTextVNode(
              toDisplayString(_ctx.t("ui.button.confirm")),
              1
              /* TEXT */
            )];
          }),
          _: 1
          /* STABLE */
        }, 8, ["onClick"])];
      })])])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["modelValue", "placement", "width", "popper-class", "popper-options", "append-to-body", "reference"])])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

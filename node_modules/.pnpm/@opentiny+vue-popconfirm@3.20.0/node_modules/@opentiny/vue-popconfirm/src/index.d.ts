export declare const $constants: {
    PC_PREFIXCLS: string;
    MOBILE_PREFIXCLS: string;
    Mode: string;
    prefixcls(mode: any): string;
    ICON_MAP: {
        success: string;
        error: string;
        info: string;
        warning: string;
    };
};
export declare const popConfirmProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            PC_PREFIXCLS: string;
            MOBILE_PREFIXCLS: string;
            Mode: string;
            prefixcls(mode: any): string;
            ICON_MAP: {
                success: string;
                error: string;
                info: string;
                warning: string;
            };
        };
    };
    message: StringConstructor;
    customClass: StringConstructor;
    popperOptions: ObjectConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    closeOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    placement: {
        type: StringConstructor;
        default: string;
    };
    width: (StringConstructor | NumberConstructor)[];
    type: (StringConstructor | ObjectConstructor)[];
    reference: {};
    events: ObjectConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            PC_PREFIXCLS: string;
            MOBILE_PREFIXCLS: string;
            Mode: string;
            prefixcls(mode: any): string;
            ICON_MAP: {
                success: string;
                error: string;
                info: string;
                warning: string;
            };
        };
    };
    message: StringConstructor;
    customClass: StringConstructor;
    popperOptions: ObjectConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    closeOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    placement: {
        type: StringConstructor;
        default: string;
    };
    width: (StringConstructor | NumberConstructor)[];
    type: (StringConstructor | ObjectConstructor)[];
    reference: {};
    events: ObjectConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            PC_PREFIXCLS: string;
            MOBILE_PREFIXCLS: string;
            Mode: string;
            prefixcls(mode: any): string;
            ICON_MAP: {
                success: string;
                error: string;
                info: string;
                warning: string;
            };
        };
    };
    message: StringConstructor;
    customClass: StringConstructor;
    popperOptions: ObjectConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    closeOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    placement: {
        type: StringConstructor;
        default: string;
    };
    width: (StringConstructor | NumberConstructor)[];
    type: (StringConstructor | ObjectConstructor)[];
    reference: {};
    events: ObjectConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    trigger: string;
    placement: string;
    popperAppendToBody: boolean;
    closeOnClickOutside: boolean;
    cancelButton: boolean;
}, {}>;
export default _default;

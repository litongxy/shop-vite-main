import { renderless, api } from '@opentiny/vue-renderless/recycle-scroller/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import ObserveVisibility from '@opentiny/vue-renderless/common/deps/observe-visibility';
import '@opentiny/vue-theme/recycle-scroller/index.css';
import { resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, renderSlot, createCommentVNode, createBlock, resolveDynamicComponent, normalizeStyle, withCtx, Fragment, renderList, mergeProps, toHandlers } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["resize", "visible", "hidden", "update", "scroll-start", "scroll-end"],
  props: [].concat(props, ["items", "keyField", "direction", "listTag", "itemTag", "itemSize", "gridItems", "itemSecondarySize", "minItemSize", "sizeField", "typeField", "buffer", "pageMode", "prerender", "emitUpdate", "updateInterval", "skipHover", "listClass", "itemClass", "itemsLimit"]),
  directives: {
    ObserveVisibility
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  ref: "before",
  class: "tiny-recycle-scroller__slot"
};
var _hoisted_2 = {
  key: 1,
  ref: "after",
  class: "tiny-recycle-scroller__slot"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _ref, _normalizeStyle;
  var _directive_observe_visibility = resolveDirective("observe-visibility");
  return withDirectives((openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-recycle-scroller", (_ref = {
        ready: _ctx.state.ready,
        "page-mode": _ctx.pageMode
      }, _ref["direction-" + _ctx.direction] = true, _ref)]),
      onScrollPassive: _cache[0] || (_cache[0] = function() {
        return _ctx.handleScroll && _ctx.handleScroll.apply(_ctx, arguments);
      })
    },
    [_ctx.slots.before ? (openBlock(), createElementBlock(
      "div",
      _hoisted_1,
      [renderSlot(_ctx.$slots, "before")],
      512
      /* NEED_PATCH */
    )) : createCommentVNode("v-if", true), (openBlock(), createBlock(resolveDynamicComponent(_ctx.listTag), {
      ref: "wrapper",
      style: normalizeStyle((_normalizeStyle = {}, _normalizeStyle[_ctx.direction === "vertical" ? "minHeight" : "minWidth"] = _ctx.state.totalSize + "px", _normalizeStyle)),
      class: normalizeClass(["tiny-recycle-scroller__item-wrapper", _ctx.listClass])
    }, {
      default: withCtx(function() {
        return [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.pool, function(view) {
            return openBlock(), createBlock(resolveDynamicComponent(_ctx.itemTag), mergeProps({
              key: view.nr.id,
              style: _ctx.computeViewStyle(view),
              class: ["tiny-recycle-scroller__item-view", [_ctx.itemClass, {
                hover: !_ctx.skipHover && _ctx.state.hoverKey === view.nr.key
              }]]
            }, toHandlers(_ctx.computeViewEvent(view))), {
              default: withCtx(function() {
                return [renderSlot(_ctx.$slots, "default", {
                  item: view.item,
                  index: view.nr.index,
                  active: view.nr.used
                })];
              }),
              _: 2
              /* DYNAMIC */
            }, 1040, ["style", "class"]);
          }),
          128
          /* KEYED_FRAGMENT */
        )), renderSlot(_ctx.$slots, "empty")];
      }),
      _: 3
      /* FORWARDED */
    }, 8, ["style", "class"])), _ctx.slots.after ? (openBlock(), createElementBlock(
      "div",
      _hoisted_2,
      [renderSlot(_ctx.$slots, "after")],
      512
      /* NEED_PATCH */
    )) : createCommentVNode("v-if", true)],
    34
    /* CLASS, NEED_HYDRATION */
  )), [[_directive_observe_visibility, _ctx.handleVisibilityChange]]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

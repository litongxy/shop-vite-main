declare const _default: import("@vue/runtime-core").DefineComponent<{
    items: {
        type: ArrayConstructor;
        required: true;
    };
    keyField: {
        type: StringConstructor;
        default: string;
    };
    direction: {
        type: StringConstructor;
        default: string;
        validator: (value: unknown) => boolean;
    };
    listTag: {
        type: StringConstructor;
        default: string;
    };
    itemTag: {
        type: StringConstructor;
        default: string;
    };
    itemSize: {
        type: NumberConstructor;
        default: null;
    };
    gridItems: {
        type: NumberConstructor;
        default: undefined;
    };
    itemSecondarySize: {
        type: NumberConstructor;
        default: undefined;
    };
    minItemSize: {
        type: (StringConstructor | NumberConstructor)[];
        default: null;
    };
    sizeField: {
        type: StringConstructor;
        default: string;
    };
    typeField: {
        type: StringConstructor;
        default: string;
    };
    buffer: {
        type: NumberConstructor;
        default: number;
    };
    pageMode: {
        type: BooleanConstructor;
        default: boolean;
    };
    prerender: {
        type: NumberConstructor;
        default: number;
    };
    emitUpdate: {
        type: BooleanConstructor;
        default: boolean;
    };
    updateInterval: {
        type: NumberConstructor;
        default: number;
    };
    skipHover: {
        type: BooleanConstructor;
        default: boolean;
    };
    listClass: {
        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
        default: string;
    };
    itemClass: {
        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
        default: string;
    };
    itemsLimit: {
        type: NumberConstructor;
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    items: {
        type: ArrayConstructor;
        required: true;
    };
    keyField: {
        type: StringConstructor;
        default: string;
    };
    direction: {
        type: StringConstructor;
        default: string;
        validator: (value: unknown) => boolean;
    };
    listTag: {
        type: StringConstructor;
        default: string;
    };
    itemTag: {
        type: StringConstructor;
        default: string;
    };
    itemSize: {
        type: NumberConstructor;
        default: null;
    };
    gridItems: {
        type: NumberConstructor;
        default: undefined;
    };
    itemSecondarySize: {
        type: NumberConstructor;
        default: undefined;
    };
    minItemSize: {
        type: (StringConstructor | NumberConstructor)[];
        default: null;
    };
    sizeField: {
        type: StringConstructor;
        default: string;
    };
    typeField: {
        type: StringConstructor;
        default: string;
    };
    buffer: {
        type: NumberConstructor;
        default: number;
    };
    pageMode: {
        type: BooleanConstructor;
        default: boolean;
    };
    prerender: {
        type: NumberConstructor;
        default: number;
    };
    emitUpdate: {
        type: BooleanConstructor;
        default: boolean;
    };
    updateInterval: {
        type: NumberConstructor;
        default: number;
    };
    skipHover: {
        type: BooleanConstructor;
        default: boolean;
    };
    listClass: {
        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
        default: string;
    };
    itemClass: {
        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
        default: string;
    };
    itemsLimit: {
        type: NumberConstructor;
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    direction: string;
    keyField: string;
    listTag: string;
    itemTag: string;
    itemSize: number;
    gridItems: number;
    itemSecondarySize: number;
    minItemSize: string | number;
    sizeField: string;
    typeField: string;
    buffer: number;
    pageMode: boolean;
    prerender: number;
    emitUpdate: boolean;
    updateInterval: number;
    skipHover: boolean;
    listClass: string | Record<string, any> | unknown[];
    itemClass: string | Record<string, any> | unknown[];
    itemsLimit: number;
}, {}>;
export default _default;

declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            LOCALE_PLACEHOLDER: string;
        };
    };
    data: ArrayConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    icon: ObjectConstructor;
    defaultExpandAll: {
        type: BooleanConstructor;
        default: boolean;
    };
    draggable: {
        type: BooleanConstructor;
        default: boolean;
    };
    expandOnClickNode: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    wrap: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFilter: {
        type: BooleanConstructor;
        default: boolean;
    };
    automaticFiltering: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        default: () => {
            children: string;
            disabled: string;
            label: string;
        };
    };
    getMenuDataSync: FunctionConstructor;
    getMenuDataAsync: FunctionConstructor;
    accordion: BooleanConstructor;
    defaultCheckedKeys: ArrayConstructor;
    showCheckbox: BooleanConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            LOCALE_PLACEHOLDER: string;
        };
    };
    data: ArrayConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    icon: ObjectConstructor;
    defaultExpandAll: {
        type: BooleanConstructor;
        default: boolean;
    };
    draggable: {
        type: BooleanConstructor;
        default: boolean;
    };
    expandOnClickNode: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    wrap: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFilter: {
        type: BooleanConstructor;
        default: boolean;
    };
    automaticFiltering: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        default: () => {
            children: string;
            disabled: string;
            label: string;
        };
    };
    getMenuDataSync: FunctionConstructor;
    getMenuDataAsync: FunctionConstructor;
    accordion: BooleanConstructor;
    defaultCheckedKeys: ArrayConstructor;
    showCheckbox: BooleanConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    props: {
        children: string;
        disabled: string;
        label: string;
    };
    ellipsis: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    placeholder: string;
    wrap: boolean;
    defaultExpandAll: boolean;
    accordion: boolean;
    draggable: boolean;
    expandOnClickNode: boolean;
    showCheckbox: boolean;
    automaticFiltering: boolean;
    showFilter: boolean;
}, {}>;
export default _default;

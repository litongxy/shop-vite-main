export declare const areaProps: {
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        type: ObjectConstructor;
        default: () => {
            label: string;
            value: string;
        };
    };
    fetchJcr: {
        type: FunctionConstructor;
    };
    fetchRegion: {
        type: FunctionConstructor;
    };
    fetchRep: {
        type: FunctionConstructor;
    };
    fetchOffice: {
        type: FunctionConstructor;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        type: ObjectConstructor;
        default: () => {
            label: string;
            value: string;
        };
    };
    fetchJcr: {
        type: FunctionConstructor;
    };
    fetchRegion: {
        type: FunctionConstructor;
    };
    fetchRep: {
        type: FunctionConstructor;
    };
    fetchOffice: {
        type: FunctionConstructor;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        type: ObjectConstructor;
        default: () => {
            label: string;
            value: string;
        };
    };
    fetchJcr: {
        type: FunctionConstructor;
    };
    fetchRegion: {
        type: FunctionConstructor;
    };
    fetchRep: {
        type: FunctionConstructor;
    };
    fetchOffice: {
        type: FunctionConstructor;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    props: Record<string, any>;
    disabled: boolean;
    tiny_mode_root: boolean;
    popperAppendToBody: boolean;
    placeholder: string;
}, {}>;
export default _default;

import type { ILinkApi } from '@opentiny/vue-renderless/types/link.type';
declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    value?: any;
    disabled?: any;
    icon?: any;
    type?: any;
    href?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    underline?: any;
}>, ILinkApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, "click"[], "click", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    value?: any;
    disabled?: any;
    icon?: any;
    type?: any;
    href?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    underline?: any;
}>>> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    readonly value?: any;
    readonly disabled?: any;
    readonly icon?: any;
    readonly type?: any;
    readonly href?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly underline?: any;
}, {}>;
export default _default;

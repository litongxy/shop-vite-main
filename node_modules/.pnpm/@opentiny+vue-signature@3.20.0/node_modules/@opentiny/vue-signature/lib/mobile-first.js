import { renderless, api } from '@opentiny/vue-renderless/signature/vue';
import { defineComponent, props, Teleport, setup } from '@opentiny/vue-common';
import { IconFullscreen, IconMinscreenRight } from '@opentiny/vue-icon';
import Button from '@opentiny/vue-button';
import Modal from '@opentiny/vue-modal';
import { resolveComponent, openBlock, createBlock, Teleport as Teleport$1, createElementVNode, normalizeClass, createElementBlock, createVNode, withCtx, createTextVNode, toDisplayString, createCommentVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["submit", "rewrite", "start", "end", "signing", "cancel"],
  props: [].concat(props, ["type", "height", "penColor", "lineWidth", "rewriteButtonText", "resignButtonText", "cancelButtonText", "backgroundColor", "submitButtonText", "placeholder", "showSubmitButton", "value"]),
  components: {
    TinyButton: Button,
    Teleport,
    IconFullscreen: IconFullscreen(),
    IconMinscreenRight: IconMinscreenRight()
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        Modal
      }
    });
  }
});
var _hoisted_1 = {
  key: 0,
  class: "absolute w-full h-full flex align-middle justify-center z-[999] bg-color-bg-2"
};
var _hoisted_2 = ["src"];
var _hoisted_3 = {
  class: "w-full h-full",
  "data-tag": "tiny-signature__content"
};
var _hoisted_4 = ["width", "height"];
var _hoisted_5 = {
  "data-tag": "tiny-signature__footer",
  class: "absolute flex justify-end origin-top right-2 bottom-2"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_minscreen_right = resolveComponent("icon-minscreen-right");
  var _component_icon_fullscreen = resolveComponent("icon-fullscreen");
  var _component_tiny_button = resolveComponent("tiny-button");
  return openBlock(), createBlock(Teleport$1, {
    to: "body",
    "data-tag": "tiny-signature",
    disabled: !_ctx.state.isFullscreen,
    class: "w-full h-full"
  }, [createElementVNode(
    "div",
    {
      ref: "wrapRef",
      style: {
        "transform-origin": "calc(100vw / 2) center"
      },
      class: normalizeClass(["flex justify-center items-center bg-color-bg-2", _ctx.state.isFullscreen ? "fixed inset-0 z-[9999]" : "relative", _ctx.state.current === "default" && _ctx.state.isFullscreen ? "rotate-90 w-[100vh] h-[100vw]" : "w-full h-full"])
    },
    [createElementVNode("div", {
      onClick: _cache[0] || (_cache[0] = function() {
        return _ctx.toggleFullscreen && _ctx.toggleFullscreen.apply(_ctx, arguments);
      }),
      class: "absolute cursor-pointer p-2 right-1 top-1"
    }, [_ctx.state.isFullscreen ? (openBlock(), createBlock(_component_icon_minscreen_right, {
      key: 0,
      class: "w-6 h-6"
    })) : (openBlock(), createBlock(_component_icon_fullscreen, {
      key: 1,
      class: "w-6 h-6"
    }))]), _ctx.state.value ? (openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("img", {
      class: "block max-w-full h-auto select-none",
      draggable: "false",
      src: _ctx.value
    }, null, 8, _hoisted_2), createVNode(_component_tiny_button, {
      onClick: _ctx.rewrite,
      size: "small",
      type: "text",
      "custom-class": "absolute right-2 bottom-2 text-color-info-primary"
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.resignButtonText),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"])])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_3, [createElementVNode("canvas", {
      ref: "canvasRef",
      width: _ctx.state.width,
      height: _ctx.state.height,
      "data-tiny-touch-simulate-container": "",
      onTouchstartPassive: _cache[1] || (_cache[1] = function() {
        return _ctx.touchStart && _ctx.touchStart.apply(_ctx, arguments);
      }),
      onTouchmove: _cache[2] || (_cache[2] = function() {
        return _ctx.touchMove && _ctx.touchMove.apply(_ctx, arguments);
      }),
      onTouchend: _cache[3] || (_cache[3] = function() {
        return _ctx.touchEnd && _ctx.touchEnd.apply(_ctx, arguments);
      }),
      class: "w-full h-full"
    }, null, 40, _hoisted_4)]), createElementVNode("div", _hoisted_5, [createVNode(_component_tiny_button, {
      onClick: _ctx.rewrite,
      size: "small",
      type: "text",
      "custom-class": "mt-2 -mr-1 text-color-info-primary"
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.rewriteButtonText),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"]), _ctx.state.current !== "default" && _ctx.state.isFullscreen ? (openBlock(), createBlock(_component_tiny_button, {
      key: 0,
      size: "small",
      onClick: _ctx.cancel,
      "custom-class": "mt-2"
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.cancelButtonText),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"])) : createCommentVNode("v-if", true), _ctx.showSubmitButton ? (openBlock(), createBlock(_component_tiny_button, {
      key: 1,
      onClick: _ctx.submit,
      size: "small",
      type: "primary",
      "custom-class": "mt-2 ml-1"
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.submitButtonText),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"])) : createCommentVNode("v-if", true)])],
    2
    /* CLASS */
  )], 8, ["disabled"]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

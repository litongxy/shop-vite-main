import { defineComponent, $prefix, props, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/dropdown-item/vue';
import { iconLeftWardArrow } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/dropdown-item/index.css';
import { AutoTip } from '@opentiny/vue-directive';
import { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, createBlock, resolveDynamicComponent, createCommentVNode, renderSlot, toDisplayString, Fragment, renderList, withCtx } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "DropdownItem",
  componentName: $prefix + "DropdownItem",
  directives: {
    AutoTip
  },
  emits: ["item-click", "update:modelValue", "change", "closed", "open", "opened", "close", "confirm", "reset"],
  props: [].concat(props, [
    "disabled",
    "divided",
    "icon",
    "itemData",
    "selected",
    "currentIndex",
    "title",
    "titleClass",
    "options",
    "type",
    "label",
    "selectedField",
    "multiStage",
    // tiny新增
    "appendToBody",
    "textField",
    "tip",
    "tipPosition",
    "effect",
    "isMono"
  ]),
  components: {
    IconLeftWardArrow: iconLeftWardArrow()
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      mono: props2.isMono
    });
  }
});
var _hoisted_1 = ["aria-disabled", "tabindex"];
var _hoisted_2 = {
  class: "tiny-dropdown-item__wrap"
};
var _hoisted_3 = {
  key: 0,
  class: "tiny-dropdown-item__expand tiny-dropdown-menu__item-expand"
};
var _hoisted_4 = {
  class: "tiny-dropdown-item__content tiny-dropdown-menu__item-content"
};
var _hoisted_5 = {
  class: "tiny-dropdown-item__label"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_dropdown_item = resolveComponent("tiny-dropdown-item");
  var _directive_auto_tip = resolveDirective("auto-tip");
  return withDirectives((openBlock(), createElementBlock("li", {
    class: normalizeClass(["tiny-dropdown-item", "tiny-dropdown-menu__item", _ctx.state.sizeClass, _ctx.disabled ? "is-disabled" : "", _ctx.divided ? "tiny-dropdown-item--divided tiny-dropdown-menu__item--divided" : "", _ctx.state.checkedStatus && _ctx.selected ? "tiny-dropdown-item--check-status" : "", _ctx.itemData.children && _ctx.itemData.children.length ? "has-children" : ""]),
    ref: "dropdownItem",
    onClick: _cache[0] || (_cache[0] = withModifiers(function() {
      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);
    }, ["stop"])),
    onMousedown: _cache[1] || (_cache[1] = withModifiers(function() {
    }, ["stop"])),
    "aria-disabled": _ctx.disabled,
    tabindex: _ctx.disabled ? null : -1
  }, [createElementVNode("div", _hoisted_2, [_ctx.itemData.children && _ctx.itemData.children.length ? (openBlock(), createElementBlock("span", _hoisted_3, [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.getIcon)))])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_4, [_ctx.icon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.icon), {
    key: 0,
    class: "tiny-svg-size tiny-dropdown-item__pre-icon"
  })) : createCommentVNode("v-if", true), createElementVNode("span", _hoisted_5, [renderSlot(_ctx.$slots, "default", {
    itemData: _ctx.itemData
  }, function() {
    return [createElementVNode(
      "span",
      null,
      toDisplayString(_ctx.label),
      1
      /* TEXT */
    )];
  })])]), _ctx.itemData.children && _ctx.itemData.children.length ? (openBlock(), createElementBlock(
    "ul",
    {
      key: 1,
      class: normalizeClass(["tiny-dropdown-menu", "tiny-dropdown-item--child tiny-dropdown-menu__item--child", _ctx.state.popperClass])
    },
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.itemData.children, function(item, index) {
        return openBlock(), createBlock(_component_tiny_dropdown_item, {
          key: index,
          label: item[_ctx.state.textField],
          "item-data": item,
          _constants: _ctx._constants,
          icon: item.icon,
          "is-mono": true,
          disabled: item.disabled,
          divided: item.divided,
          tip: item.tip,
          "tip-position": item.tipPosition
        }, {
          default: withCtx(function() {
            return [renderSlot(_ctx.$slots, "default", {
              itemData: item
            })];
          }),
          _: 2
          /* DYNAMIC */
        }, 1032, ["label", "item-data", "_constants", "icon", "disabled", "divided", "tip", "tip-position"]);
      }),
      128
      /* KEYED_FRAGMENT */
    ))],
    2
    /* CLASS */
  )) : createCommentVNode("v-if", true)])], 42, _hoisted_1)), [[_directive_auto_tip, _ctx.state.computedTip ? {
    always: true,
    content: _ctx.state.computedTip,
    effect: _ctx.effect,
    placement: _ctx.tipPosition
  } : false]]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

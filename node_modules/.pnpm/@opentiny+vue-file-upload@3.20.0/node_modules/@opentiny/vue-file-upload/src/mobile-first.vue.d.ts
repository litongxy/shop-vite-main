import type { IFileUploadApi } from '@opentiny/vue-renderless/types/file-upload.type';
declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    name?: any;
    disabled?: any;
    type?: any;
    data?: any;
    title?: any;
    mode?: any;
    drag?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    customClass?: any;
    lockScroll?: any;
    action?: any;
    showTitle?: any;
    displayOnly?: any;
    multiple?: any;
    scale?: any;
    fileSize?: any;
    listType?: any;
    withCredentials?: any;
    httpRequest?: any;
    accept?: any;
    limit?: any;
    sourceType?: any;
    openDownloadFile?: any;
    isFolderTitle?: any;
    listOption?: any;
    maxNameLength?: any;
    showName?: any;
    compact?: any;
    imageBgColor?: any;
    autoUpload?: any;
    beforeUpload?: any;
    fileList?: any;
    headers?: any;
    promptTip?: any;
    showFileList?: any;
    encryptConfig?: any;
    beforeRemove?: any;
    edm?: any;
    dragger?: any;
    mergeService?: any;
    thumbOption?: any;
    hwh5?: any;
    cacheToken?: any;
}>, IFileUploadApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("error" | "progress" | "change" | "success" | "remove" | "download" | "trigger-click" | "click-file-list" | "hash-progress")[], "error" | "progress" | "change" | "success" | "remove" | "download" | "trigger-click" | "click-file-list" | "hash-progress", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    name?: any;
    disabled?: any;
    type?: any;
    data?: any;
    title?: any;
    mode?: any;
    drag?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    customClass?: any;
    lockScroll?: any;
    action?: any;
    showTitle?: any;
    displayOnly?: any;
    multiple?: any;
    scale?: any;
    fileSize?: any;
    listType?: any;
    withCredentials?: any;
    httpRequest?: any;
    accept?: any;
    limit?: any;
    sourceType?: any;
    openDownloadFile?: any;
    isFolderTitle?: any;
    listOption?: any;
    maxNameLength?: any;
    showName?: any;
    compact?: any;
    imageBgColor?: any;
    autoUpload?: any;
    beforeUpload?: any;
    fileList?: any;
    headers?: any;
    promptTip?: any;
    showFileList?: any;
    encryptConfig?: any;
    beforeRemove?: any;
    edm?: any;
    dragger?: any;
    mergeService?: any;
    thumbOption?: any;
    hwh5?: any;
    cacheToken?: any;
}>>> & {
    onError?: ((...args: any[]) => any) | undefined;
    onProgress?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
    onRemove?: ((...args: any[]) => any) | undefined;
    onSuccess?: ((...args: any[]) => any) | undefined;
    onDownload?: ((...args: any[]) => any) | undefined;
    "onTrigger-click"?: ((...args: any[]) => any) | undefined;
    "onClick-file-list"?: ((...args: any[]) => any) | undefined;
    "onHash-progress"?: ((...args: any[]) => any) | undefined;
}, {
    readonly name?: any;
    readonly disabled?: any;
    readonly type?: any;
    readonly data?: any;
    readonly title?: any;
    readonly mode?: any;
    readonly drag?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly customClass?: any;
    readonly lockScroll?: any;
    readonly action?: any;
    readonly showTitle?: any;
    readonly displayOnly?: any;
    readonly multiple?: any;
    readonly scale?: any;
    readonly fileSize?: any;
    readonly listType?: any;
    readonly withCredentials?: any;
    readonly httpRequest?: any;
    readonly accept?: any;
    readonly limit?: any;
    readonly sourceType?: any;
    readonly openDownloadFile?: any;
    readonly isFolderTitle?: any;
    readonly listOption?: any;
    readonly maxNameLength?: any;
    readonly showName?: any;
    readonly compact?: any;
    readonly imageBgColor?: any;
    readonly autoUpload?: any;
    readonly beforeUpload?: any;
    readonly fileList?: any;
    readonly headers?: any;
    readonly promptTip?: any;
    readonly showFileList?: any;
    readonly encryptConfig?: any;
    readonly beforeRemove?: any;
    readonly edm?: any;
    readonly dragger?: any;
    readonly mergeService?: any;
    readonly thumbOption?: any;
    readonly hwh5?: any;
    readonly cacheToken?: any;
}, {}>;
export default _default;

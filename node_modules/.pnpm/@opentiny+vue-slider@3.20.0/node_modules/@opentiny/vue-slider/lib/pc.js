import { renderless, api } from '@opentiny/vue-renderless/slider/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import Input from '@opentiny/vue-input';
import '@opentiny/vue-theme/slider/index.css';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, createVNode, Transition, withCtx, createCommentVNode, withDirectives, toDisplayString, vShow, Fragment, renderList, renderSlot, createBlock } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["update:modelValue", "change", "start", "stop"],
  props: [].concat(props, ["modelValue", "disabled", "max", "min", "vertical", "step", "numPages", "showTip", "marks", "showInput", "unit", "height", "range", "formatTooltip", "changeCompat"]),
  components: {
    TinyInput: Input
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = /* @__PURE__ */ createElementVNode(
  "svg",
  {
    viewBox: "0 0 1024 1024",
    class: "tiny-slider-left-svg"
  },
  [/* @__PURE__ */ createElementVNode("path", {
    class: "tiny-slider-left-svg",
    d: "M278.863 867.255c0 29.47 24.686 53.36 55.138 53.36s55.138-23.89 55.138-53.36v-838.511c0-29.47-24.686-53.36-55.138-53.36s-55.138 23.89-55.138 53.36v838.511zM3.17 791.027c0 29.47 24.686 53.36 55.138 53.36s55.138-23.89 55.138-53.36v-686.055c0-29.47-24.686-53.36-55.138-53.36s-55.138 23.89-55.138 53.36v686.055zM554.555 791.027c0 29.47 24.686 53.36 55.138 53.36s55.138-23.89 55.138-53.36v-686.055c0-29.47-24.686-53.36-55.138-53.36s-55.138 23.89-55.138 53.36v686.055z"
  })],
  -1
  /* HOISTED */
);
var _hoisted_2 = [_hoisted_1];
var _hoisted_3 = /* @__PURE__ */ createElementVNode(
  "svg",
  {
    viewBox: "0 0 1024 1024",
    class: "tiny-slider-right-svg"
  },
  [/* @__PURE__ */ createElementVNode("path", {
    class: "tiny-slider-right-svg",
    d: "M278.863 867.255c0 29.47 24.686 53.36 55.138 53.36s55.138-23.89 55.138-53.36v-838.511c0-29.47-24.686-53.36-55.138-53.36s-55.138 23.89-55.138 53.36v838.511zM3.17 791.027c0 29.47 24.686 53.36 55.138 53.36s55.138-23.89 55.138-53.36v-686.055c0-29.47-24.686-53.36-55.138-53.36s-55.138 23.89-55.138 53.36v686.055zM554.555 791.027c0 29.47 24.686 53.36 55.138 53.36s55.138-23.89 55.138-53.36v-686.055c0-29.47-24.686-53.36-55.138-53.36s-55.138 23.89-55.138 53.36v686.055z"
  })],
  -1
  /* HOISTED */
);
var _hoisted_4 = [_hoisted_3];
var _hoisted_5 = {
  key: 2
};
var _hoisted_6 = /* @__PURE__ */ createElementVNode(
  "span",
  {
    class: "tiny-slider__input__split"
  },
  "-",
  -1
  /* HOISTED */
);
var _hoisted_7 = {
  class: "tiny-slider__input__unit"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_input = resolveComponent("tiny-input");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-slider-container", [!_ctx.vertical && "tiny-slider-container__horizontal"]])
    },
    [createElementVNode(
      "div",
      {
        ref: "slider",
        role: "tiny-slider",
        class: normalizeClass(["tiny-slider", {
          "tiny-slider__vertical": _ctx.vertical,
          disabled: _ctx.state.disabled
        }, !_ctx.showInput || _ctx.state.isDouble ? _ctx.state.showAutoWidth ? "show-auto-width" : "" : ""]),
        style: normalizeStyle({
          height: _ctx.vertical ? _ctx.height : ""
        }),
        onMousedown: _cache[6] || (_cache[6] = function() {
          return _ctx.bindMouseDown && _ctx.bindMouseDown.apply(_ctx, arguments);
        })
      },
      [createVNode(Transition, {
        appear: "",
        "appear-class": "custom-appear-class",
        onBeforeAppear: _ctx.customBeforeAppearHook,
        onAfterAppear: _ctx.customAfterAppearHook
      }, {
        default: withCtx(function() {
          return [createElementVNode(
            "div",
            {
              class: normalizeClass(["tiny-slider__range", _ctx.vertical ? "tiny-slider__down" : "tiny-slider__left"]),
              style: normalizeStyle(_ctx.state.barStyle)
            },
            null,
            6
            /* CLASS, STYLE */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onBeforeAppear", "onAfterAppear"]), _ctx.state.leftBtnShow ? (openBlock(), createElementBlock(
        "div",
        {
          key: 0,
          class: normalizeClass(["tiny-slider__handle", {
            "handle-focus": _ctx.state.activeIndex === 0
          }]),
          tabindex: "0",
          style: normalizeStyle(_ctx.state.leftBtnStyle),
          onMouseenter: _cache[0] || (_cache[0] = function() {
            return _ctx.displayTip && _ctx.displayTip.apply(_ctx, arguments);
          }),
          onMouseleave: _cache[1] || (_cache[1] = function() {
            return _ctx.hideTip && _ctx.hideTip.apply(_ctx, arguments);
          }),
          onKeydown: _cache[2] || (_cache[2] = function() {
            return _ctx.bindKeyDown && _ctx.bindKeyDown.apply(_ctx, arguments);
          })
        },
        _hoisted_2,
        38
        /* CLASS, STYLE, NEED_HYDRATION */
      )) : createCommentVNode("v-if", true), _ctx.state.rightBtnShow ? (openBlock(), createElementBlock(
        "div",
        {
          key: 1,
          class: normalizeClass(["tiny-slider__handle", {
            "handle-focus": _ctx.state.activeIndex === 1
          }]),
          tabindex: "0",
          style: normalizeStyle(_ctx.state.rightBtnStyle),
          onMouseenter: _cache[3] || (_cache[3] = function() {
            return _ctx.displayTip && _ctx.displayTip.apply(_ctx, arguments);
          }),
          onMouseleave: _cache[4] || (_cache[4] = function() {
            return _ctx.hideTip && _ctx.hideTip.apply(_ctx, arguments);
          }),
          onKeydown: _cache[5] || (_cache[5] = function() {
            return _ctx.bindKeyDown && _ctx.bindKeyDown.apply(_ctx, arguments);
          })
        },
        _hoisted_4,
        38
        /* CLASS, STYLE, NEED_HYDRATION */
      )) : createCommentVNode("v-if", true), withDirectives(createElementVNode(
        "div",
        {
          ref: "sliderTip",
          class: "tiny-slider__tips",
          style: normalizeStyle(_ctx.state.tipStyle)
        },
        toDisplayString(_ctx.state.tipValue),
        5
        /* TEXT, STYLE */
      ), [[vShow, _ctx.showTip && _ctx.state.showTip]]), _ctx.state.markList ? (openBlock(), createElementBlock("div", _hoisted_5, [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.markList, function(mark) {
          return openBlock(), createElementBlock(
            Fragment,
            {
              key: mark.value
            },
            [createElementVNode(
              "div",
              {
                class: "tiny-slider__mark-point",
                style: normalizeStyle(mark.positionStyle)
              },
              null,
              4
              /* STYLE */
            ), createElementVNode(
              "div",
              {
                class: "tiny-slider__mark-label",
                style: normalizeStyle(mark.positionStyle)
              },
              toDisplayString(mark.label),
              5
              /* TEXT, STYLE */
            )],
            64
            /* STABLE_FRAGMENT */
          );
        }),
        128
        /* KEYED_FRAGMENT */
      ))])) : createCommentVNode("v-if", true)],
      38
      /* CLASS, STYLE, NEED_HYDRATION */
    ), _ctx.showInput ? (openBlock(), createElementBlock(
      "div",
      {
        key: 0,
        class: normalizeClass(["tiny-slider__input", {
          "is-disabled": _ctx.state.disabled
        }])
      },
      [renderSlot(_ctx.$slots, "default", {
        slotScope: _ctx.state.slotValue
      }, function() {
        return [!_ctx.state.isDouble ? (openBlock(), createBlock(_component_tiny_input, {
          key: 0,
          modelValue: _ctx.state.slotValue,
          "onUpdate:modelValue": _cache[7] || (_cache[7] = function($event) {
            return _ctx.state.slotValue = $event;
          }),
          type: "text",
          disabled: _ctx.state.disabled,
          onChange: _ctx.inputOnChange,
          onFocus: _ctx.handleSlotInputFocus,
          onBlur: _ctx.handleSlotInputBlur,
          onInput: _cache[8] || (_cache[8] = function($event) {
            return _ctx.handleSlotInput($event);
          })
        }, null, 8, ["modelValue", "disabled", "onChange", "onFocus", "onBlur"])) : (openBlock(), createElementBlock(
          Fragment,
          {
            key: 1
          },
          [createVNode(_component_tiny_input, {
            modelValue: _ctx.state.slotValue[0],
            "onUpdate:modelValue": _cache[9] || (_cache[9] = function($event) {
              return _ctx.state.slotValue[0] = $event;
            }),
            disabled: _ctx.state.disabled,
            onFocus: _ctx.handleSlotInputFocus,
            onBlur: _ctx.handleSlotInputBlur,
            onInput: _cache[10] || (_cache[10] = function($event) {
              return _ctx.handleSlotInput($event);
            })
          }, null, 8, ["modelValue", "disabled", "onFocus", "onBlur"]), _hoisted_6, createVNode(_component_tiny_input, {
            modelValue: _ctx.state.slotValue[1],
            "onUpdate:modelValue": _cache[11] || (_cache[11] = function($event) {
              return _ctx.state.slotValue[1] = $event;
            }),
            disabled: _ctx.state.disabled,
            onFocus: _ctx.handleSlotInputFocus,
            onBlur: _ctx.handleSlotInputBlur,
            onInput: _cache[12] || (_cache[12] = function($event) {
              return _ctx.handleSlotInput($event, false);
            })
          }, null, 8, ["modelValue", "disabled", "onFocus", "onBlur"])],
          64
          /* STABLE_FRAGMENT */
        )), createElementVNode(
          "span",
          _hoisted_7,
          toDisplayString(_ctx.unit),
          1
          /* TEXT */
        )];
      })],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

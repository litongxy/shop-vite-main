export declare const amountProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            FILTER_OPTION: string[];
        };
    };
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    currency: {
        type: StringConstructor;
        default: string;
    };
    date: (StringConstructor | DateConstructor)[];
    dateAllowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    digits: {
        type: NumberConstructor;
        default: number;
    };
    stringMode: {
        type: BooleanConstructor;
        default: boolean;
    };
    rounding: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxLen: {
        type: NumberConstructor;
        default: number;
    };
    negative: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchCurrency: FunctionConstructor;
    fields: ObjectConstructor;
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    format: ObjectConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    holdZero: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelTruncation: {
        type: BooleanConstructor;
        default: boolean;
    };
    strictInput: {
        type: BooleanConstructor;
        default: boolean;
    };
    plugin: FunctionConstructor;
    popUp: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideCurrency: {
        type: BooleanConstructor;
        default: boolean;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    numAllowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: {
        type: StringConstructor;
        default: string;
    };
    tip: StringConstructor;
    shape: StringConstructor;
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    filter: {
        type: BooleanConstructor;
        default: boolean;
    };
    blank: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            FILTER_OPTION: string[];
        };
    };
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    currency: {
        type: StringConstructor;
        default: string;
    };
    date: (StringConstructor | DateConstructor)[];
    dateAllowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    digits: {
        type: NumberConstructor;
        default: number;
    };
    stringMode: {
        type: BooleanConstructor;
        default: boolean;
    };
    rounding: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxLen: {
        type: NumberConstructor;
        default: number;
    };
    negative: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchCurrency: FunctionConstructor;
    fields: ObjectConstructor;
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    format: ObjectConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    holdZero: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelTruncation: {
        type: BooleanConstructor;
        default: boolean;
    };
    strictInput: {
        type: BooleanConstructor;
        default: boolean;
    };
    plugin: FunctionConstructor;
    popUp: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideCurrency: {
        type: BooleanConstructor;
        default: boolean;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    numAllowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: {
        type: StringConstructor;
        default: string;
    };
    tip: StringConstructor;
    shape: StringConstructor;
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    filter: {
        type: BooleanConstructor;
        default: boolean;
    };
    blank: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            FILTER_OPTION: string[];
        };
    };
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    currency: {
        type: StringConstructor;
        default: string;
    };
    date: (StringConstructor | DateConstructor)[];
    dateAllowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    digits: {
        type: NumberConstructor;
        default: number;
    };
    stringMode: {
        type: BooleanConstructor;
        default: boolean;
    };
    rounding: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxLen: {
        type: NumberConstructor;
        default: number;
    };
    negative: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchCurrency: FunctionConstructor;
    fields: ObjectConstructor;
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    format: ObjectConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    holdZero: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelTruncation: {
        type: BooleanConstructor;
        default: boolean;
    };
    strictInput: {
        type: BooleanConstructor;
        default: boolean;
    };
    plugin: FunctionConstructor;
    popUp: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideCurrency: {
        type: BooleanConstructor;
        default: boolean;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    numAllowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: {
        type: StringConstructor;
        default: string;
    };
    tip: StringConstructor;
    shape: StringConstructor;
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    filter: {
        type: BooleanConstructor;
        default: boolean;
    };
    blank: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    label: string;
    disabled: boolean;
    negative: boolean;
    rounding: boolean;
    type: string;
    filter: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    tabindex: string;
    popperAppendToBody: boolean;
    clearable: boolean;
    displayOnly: boolean;
    currency: string;
    placeholder: string;
    blank: boolean;
    digits: number;
    modelTruncation: boolean;
    dateAllowEmpty: boolean;
    stringMode: boolean;
    maxLen: number;
    holdZero: boolean;
    strictInput: boolean;
    popUp: boolean;
    hideCurrency: boolean;
    hideIcon: boolean;
    numAllowEmpty: boolean;
}, {}>;
export default _default;

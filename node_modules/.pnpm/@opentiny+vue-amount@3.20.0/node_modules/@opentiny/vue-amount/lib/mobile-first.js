import Popover from '@opentiny/vue-popover';
import Input from '@opentiny/vue-input';
import Currency from '@opentiny/vue-currency';
import Button from '@opentiny/vue-button';
import DatePicker from '@opentiny/vue-date-picker';
import DatePickerMobileFirst from '@opentiny/vue-date-picker-mobile-first';
import ActionSheet from '@opentiny/vue-action-sheet';
import { IconCoin } from '@opentiny/vue-icon';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/amount/vue';
import FilterBox from '@opentiny/vue-filter-box';
import Radio from '@opentiny/vue-radio';
import RadioGroup from '@opentiny/vue-radio-group';
import { resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, createVNode, createBlock, createCommentVNode, withCtx, normalizeClass, createSlots, createElementVNode, toDisplayString, renderList, createTextVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  inheritAttrs: false,
  components: {
    TinyPopover: Popover,
    TinyInput: Input,
    TinyButton: Button,
    TinyCurrency: Currency,
    TinyDatePicker: DatePicker,
    TinyDatePickerMobile: DatePickerMobileFirst,
    TinyActionSheet: ActionSheet,
    IconCoin: IconCoin(),
    TinyFilterBox: FilterBox,
    TinyRadio: Radio,
    TinyRadioGroup: RadioGroup
  },
  emits: ["update:modelValue", "update:currency", "update:date", "change", "clear", "filter-change"],
  props: [].concat(props, ["modelValue", "tabindex", "size", "placeholder", "currency", "date", "dateAllowEmpty", "digits", "stringMode", "rounding", "maxLen", "negative", "disabled", "fetchCurrency", "fields", "popperClass", "popperAppendToBody", "format", "type", "holdZero", "modelTruncation", "strictInput", "plugin", "popUp", "hideCurrency", "displayOnly", "hideIcon", "numAllowEmpty", "label", "tip", "shape", "clearable", "filter", "blank"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  ref: "popover"
};
var _hoisted_2 = {
  key: 0,
  class: "mb-3 text-xs cursor-pointer"
};
var _hoisted_3 = {
  key: 1,
  class: "flex justify-end items-center mb-4"
};
var _hoisted_4 = {
  class: "grow-0 shrink-0 basis-auto mr-2 w-1/5 text-sm"
};
var _hoisted_5 = {
  key: 2,
  class: "flex justify-end items-center mb-4"
};
var _hoisted_6 = {
  class: "grow-0 shrink-0 basis-auto mr-2 w-1/5 text-sm"
};
var _hoisted_7 = {
  key: 3,
  class: "flex justify-end items-center mb-4"
};
var _hoisted_8 = {
  class: "grow-0 shrink-0 basis-auto mr-2 w-1/5 text-sm"
};
var _hoisted_9 = {
  class: "flex justify-end items-center"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  var _component_tiny_currency = resolveComponent("tiny-currency");
  var _component_tiny_date_picker_mobile = resolveComponent("tiny-date-picker-mobile");
  var _component_tiny_filter_box = resolveComponent("tiny-filter-box");
  var _component_icon_coin = resolveComponent("icon-coin");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_radio = resolveComponent("tiny-radio");
  var _component_tiny_radio_group = resolveComponent("tiny-radio-group");
  var _component_tiny_date_picker = resolveComponent("tiny-date-picker");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_popover = resolveComponent("tiny-popover");
  return openBlock(), createElementBlock(
    "div",
    mergeProps({
      "data-tag": "tiny-amount",
      ref: "root"
    }, _ctx.a(_ctx.$attrs, ["^on[A-Z]"])),
    [_ctx.uiMode === "default" ? (openBlock(), createElementBlock(
      Fragment,
      {
        key: 0
      },
      [createVNode(_component_tiny_action_sheet, {
        type: "action",
        menus: [_ctx.t("ui.amount.currency"), _ctx.t("ui.amount.date")],
        visible: _ctx.state.visible && _ctx.state.editorPhase === "selection",
        "onUpdate:visible": _cache[0] || (_cache[0] = function(event) {
          return _ctx.closeDetailEidtor(!event && _ctx.state.editorPhase === "selection");
        }),
        onClick: _ctx.openDetailEditor,
        onClose: _ctx.toggleVisible
      }, null, 8, ["menus", "visible", "onClick", "onClose"]), createVNode(_component_tiny_currency, {
        modelValue: _ctx.editorState.currency,
        "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
          return _ctx.editorState.currency = $event;
        }),
        clearable: false,
        fields: _ctx.fields,
        "fetch-currency": _ctx.fetchCurrency,
        "popper-class": _ctx.popperClass,
        "popper-append-to-body": _ctx.popperAppendToBody,
        currency: _ctx.currency,
        visible: _ctx.state.visible && _ctx.state.editorPhase === "currency",
        onVisibleChange: _cache[2] || (_cache[2] = function(event) {
          return _ctx.closeDetailEidtor(!event && _ctx.state.editorPhase === "currency");
        })
      }, null, 8, ["modelValue", "fields", "fetch-currency", "popper-class", "popper-append-to-body", "currency", "visible"]), _ctx.date || _ctx.dateAllowEmpty ? (openBlock(), createBlock(_component_tiny_date_picker_mobile, {
        key: 0,
        modelValue: _ctx.editorState.date,
        "onUpdate:modelValue": _cache[3] || (_cache[3] = function($event) {
          return _ctx.editorState.date = $event;
        }),
        "popper-class": _ctx.popperClass ? " " + _ctx.popperClass : "",
        "popper-append-to-body": _ctx.popperAppendToBody,
        visible: _ctx.state.visible && _ctx.state.editorPhase === "date",
        "onUpdate:visible": _cache[4] || (_cache[4] = function(event) {
          return _ctx.closeDetailEidtor(!event && _ctx.state.editorPhase === "date");
        })
      }, null, 8, ["modelValue", "popper-class", "popper-append-to-body", "visible"])) : createCommentVNode("v-if", true)],
      64
      /* STABLE_FRAGMENT */
    )) : createCommentVNode("v-if", true), !(_ctx.state.displayOnly || _ctx.hideIcon) && _ctx.uiMode !== "default" ? (openBlock(), createBlock(_component_tiny_popover, {
      key: 1,
      modelValue: _ctx.state.visible,
      "onUpdate:modelValue": _cache[10] || (_cache[10] = function($event) {
        return _ctx.state.visible = $event;
      }),
      placement: "bottom-start",
      "popper-class": "sm:max-w-[theme(spacing.96)] sm:px-4 sm:py-4 box-border text-color-text-secondary sm:border-0 sm:[&[x-placement^=bottom]]:mt-1 sm:[&[x-placement^=top]]:mb-1" + (_ctx.popperClass ? " " + _ctx.popperClass : "") + (_ctx.shape === "filter" ? " w-80" : "") + (_ctx.state.displayOnly ? " w-auto" : ""),
      "visible-arrow": false,
      trigger: "manual",
      "append-to-body": _ctx.popperAppendToBody
    }, {
      reference: withCtx(function() {
        return [_ctx.shape === "filter" ? (openBlock(), createBlock(_component_tiny_filter_box, {
          key: 0,
          ref: "reference",
          label: _ctx.label,
          value: _ctx.state.amountValue,
          tip: _ctx.tip,
          disabled: _ctx.disabled,
          onClick: _ctx.toggleVisible,
          "show-close": _ctx.clearable,
          blank: _ctx.blank
        }, null, 8, ["label", "value", "tip", "disabled", "onClick", "show-close", "blank"])) : (openBlock(), createBlock(_component_tiny_input, {
          key: 1,
          class: normalizeClass(_ctx.shape !== "filter" && !_ctx.hideCurrency ? _ctx.size === "medium" ? "[&_[data-tag=tiny-input-display-only]_input[data-tag=tiny-input-inner]]:pl-12" : "[&_[data-tag=tiny-input-display-only]_input[data-tag=tiny-input-inner]]:pl-10" : ""),
          tabindex: _ctx.tabindex,
          size: _ctx.size,
          "model-value": _ctx.shape !== "filter" ? _ctx.state.amountNumberValue : _ctx.state.amountValue,
          maxlength: _ctx.maxLen,
          "display-only": _ctx.state.displayOnly,
          placeholder: _ctx.placeholder,
          disabled: _ctx.disabled,
          clearable: _ctx.clearable,
          onFocus: _ctx.inputFocus,
          onBlur: _ctx.inputBlur,
          "onUpdate:modelValue": _ctx.onInput
        }, createSlots({
          suffix: withCtx(function() {
            return [!_ctx.hideIcon ? (openBlock(), createElementBlock(
              "div",
              {
                key: 0,
                onClick: _cache[5] || (_cache[5] = function() {
                  return _ctx.toggleVisible && _ctx.toggleVisible.apply(_ctx, arguments);
                }),
                class: normalizeClass("fill-color-icon-secondary sm:fill-color-text-placeholder text-base hover:fill-color-brand-hover flex order-2 ml-3" + (_ctx.state.visible ? " fill-color-brand-hover" : ""))
              },
              [createVNode(_component_icon_coin, {
                class: normalizeClass(["tiny-svg-size", _ctx.disabled ? "fill-color-icon-placeholder sm:fill-color-text-placeholder" : ""]),
                "custom-class": "h-5 w-5 sm:h-4 sm:w-4"
              }, null, 8, ["class"])],
              2
              /* CLASS */
            )) : createCommentVNode("v-if", true)];
          }),
          _: 2
          /* DYNAMIC */
        }, [_ctx.shape !== "filter" && !_ctx.hideCurrency ? {
          name: "prefix",
          fn: withCtx(function() {
            return [createElementVNode(
              "div",
              {
                "data-tag": "tiny-amount-currency-mark",
                class: normalizeClass("pl-1 text-color-text-primary " + (_ctx.disabled ? "text-color-text-disabled" : "") + " " + (_ctx.size === "medium" ? "h-8 leading-8 text-sm w-9" : _ctx.size === "mini" ? "h-6 leading-6 text-xs w-7" : "h-7 leading-7 text-sm w-9 sm:text-xs sm:w-7"))
              },
              toDisplayString(_ctx.state.currency),
              3
              /* TEXT, CLASS */
            )];
          }),
          key: "0"
        } : void 0]), 1032, ["class", "tabindex", "size", "model-value", "maxlength", "display-only", "placeholder", "disabled", "clearable", "onFocus", "onBlur", "onUpdate:modelValue"]))];
      }),
      default: withCtx(function() {
        return [createElementVNode(
          "div",
          _hoisted_1,
          [_ctx.shape === "filter" && _ctx.filter ? (openBlock(), createElementBlock("div", _hoisted_2, [createVNode(_component_tiny_radio_group, {
            modelValue: _ctx.state.radioVal,
            "onUpdate:modelValue": _cache[6] || (_cache[6] = function($event) {
              return _ctx.state.radioVal = $event;
            }),
            onChange: _ctx.handleChange,
            class: "[&]:inline-block"
          }, {
            default: withCtx(function() {
              return [(openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList(_ctx.state.filterMenu, function(item, index) {
                  return openBlock(), createBlock(_component_tiny_radio, {
                    key: index,
                    label: _ctx.t(item),
                    class: normalizeClass(" bg-color-bg-2 py-px box-border mb-2 sm:[&]:mr-2 ml-0 inline-flex items-center justify-center h-6 rounded-sm min-w-[theme(spacing.12)] text-center max-w-none px-2 border border-color-bg-2 border-solid font-normal [&[aria-checked]_[data-tag=tiny-radio-label]]:text-color-brand [&[aria-checked]]:border-color-brand [&_[data-tag=tiny-radio-content]]:hidden [&_[data-tag=tiny-radio-label]]:pl-0 [&_[data-tag=tiny-radio-label]]:leading-5 [&_[data-tag=tiny-radio-label]]:h-5 [&_[data-tag=tiny-radio-label]]:inline-block")
                  }, {
                    default: withCtx(function() {
                      return [createTextVNode(
                        toDisplayString(_ctx.t(item)),
                        1
                        /* TEXT */
                      )];
                    }),
                    _: 2
                    /* DYNAMIC */
                  }, 1032, ["label", "class"]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))];
            }),
            _: 1
            /* STABLE */
          }, 8, ["modelValue", "onChange"])])) : createCommentVNode("v-if", true), _ctx.popUp ? (openBlock(), createElementBlock("div", _hoisted_3, [createElementVNode(
            "div",
            _hoisted_4,
            toDisplayString(_ctx.t("ui.amount.currency")),
            1
            /* TEXT */
          ), createVNode(_component_tiny_currency, {
            tiny_mode: "pc",
            tiny_mode_root: true,
            modelValue: _ctx.editorState.currency,
            "onUpdate:modelValue": _cache[7] || (_cache[7] = function($event) {
              return _ctx.editorState.currency = $event;
            }),
            clearable: false,
            fields: _ctx.fields,
            "fetch-currency": _ctx.fetchCurrency,
            "popper-class": _ctx.popperClass,
            "popper-append-to-body": _ctx.popperAppendToBody,
            currency: _ctx.currency
          }, null, 8, ["modelValue", "fields", "fetch-currency", "popper-class", "popper-append-to-body", "currency"])])) : createCommentVNode("v-if", true), _ctx.date || _ctx.dateAllowEmpty ? (openBlock(), createElementBlock("div", _hoisted_5, [createElementVNode(
            "div",
            _hoisted_6,
            toDisplayString(_ctx.t("ui.amount.date")),
            1
            /* TEXT */
          ), createVNode(_component_tiny_date_picker, {
            modelValue: _ctx.editorState.date,
            "onUpdate:modelValue": _cache[8] || (_cache[8] = function($event) {
              return _ctx.editorState.date = $event;
            }),
            "popper-class": _ctx.popperClass ? " " + _ctx.popperClass : "",
            "popper-append-to-body": _ctx.popperAppendToBody
          }, null, 8, ["modelValue", "popper-class", "popper-append-to-body"])])) : createCommentVNode("v-if", true), _ctx.shape === "filter" ? (openBlock(), createElementBlock("div", _hoisted_7, [createElementVNode(
            "div",
            _hoisted_8,
            toDisplayString(_ctx.t("ui.amount.amount")),
            1
            /* TEXT */
          ), createVNode(_component_tiny_input, {
            class: "inline-block",
            modelValue: _ctx.editorState.amount,
            "onUpdate:modelValue": [_cache[9] || (_cache[9] = function($event) {
              return _ctx.editorState.amount = $event;
            }), _ctx.popInput],
            maxlength: _ctx.maxLen
          }, null, 8, ["modelValue", "onUpdate:modelValue", "maxlength"])])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_9, [createVNode(_component_tiny_button, {
            type: "primary",
            onClick: _ctx.save
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.base.confirm")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          }, 8, ["onClick"])])],
          512
          /* NEED_PATCH */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["modelValue", "popper-class", "append-to-body"])) : (openBlock(), createBlock(_component_tiny_input, {
      key: 2,
      class: normalizeClass((_ctx.shape !== "filter" || _ctx.uiMode === "default") && !_ctx.hideCurrency ? _ctx.size === "medium" ? "[&_[data-tag=tiny-input-display-only]_input[data-tag=tiny-input-inner]]:pl-12" : _ctx.size === "mini" ? "[&_[data-tag=tiny-input-display-only]_input[data-tag=tiny-input-inner]]:pl-10" : "[&_[data-tag=tiny-input-display-only]_input[data-tag=tiny-input-inner]]:pl-12 sm:[&_[data-tag=tiny-input-display-only]_input[data-tag=tiny-input-inner]]:pl-10" : ""),
      tabindex: _ctx.tabindex,
      size: _ctx.size,
      "model-value": (_ctx.shape !== "filter" || _ctx.uiMode === "default") && !_ctx.state.displayOnly ? _ctx.state.amountNumberValue : _ctx.state.amountValue,
      maxlength: _ctx.maxLen,
      "display-only": _ctx.state.displayOnly,
      placeholder: _ctx.placeholder,
      disabled: _ctx.disabled,
      clearable: _ctx.clearable,
      onFocus: _ctx.inputFocus,
      onBlur: _ctx.inputBlur,
      "onUpdate:modelValue": _ctx.onInput
    }, createSlots({
      suffix: withCtx(function() {
        return [!_ctx.hideIcon ? (openBlock(), createElementBlock(
          "div",
          {
            key: 0,
            onClick: _cache[11] || (_cache[11] = function() {
              return _ctx.toggleVisible && _ctx.toggleVisible.apply(_ctx, arguments);
            }),
            class: normalizeClass("fill-color-icon-secondary sm:fill-color-text-placeholder text-base hover:fill-color-brand-hover flex order-2 ml-3" + (_ctx.state.visible ? " fill-color-brand-hover" : ""))
          },
          [createVNode(_component_icon_coin, {
            "custom-class": "h-5 w-5 sm:h-4 sm:w-4",
            class: normalizeClass(_ctx.disabled ? "fill-color-icon-placeholder sm:fill-color-text-placeholder" : "")
          }, null, 8, ["class"])],
          2
          /* CLASS */
        )) : createCommentVNode("v-if", true)];
      }),
      _: 2
      /* DYNAMIC */
    }, [(_ctx.shape !== "filter" || _ctx.uiMode === "default") && !_ctx.hideCurrency ? {
      name: "prefix",
      fn: withCtx(function() {
        return [createElementVNode(
          "div",
          {
            "data-tag": "tiny-amount-currency-mark",
            class: normalizeClass("pl-1 text-color-text-primary " + (_ctx.disabled ? "text-color-text-disabled" : "") + " " + (_ctx.size === "medium" ? "h-8 leading-8 text-sm w-9" : _ctx.size === "mini" ? "h-6 leading-6 text-xs w-7" : "h-7 leading-7 text-sm w-9 sm:text-xs sm:w-7"))
          },
          toDisplayString(_ctx.state.currency),
          3
          /* TEXT, CLASS */
        )];
      }),
      key: "0"
    } : void 0]), 1032, ["class", "tabindex", "size", "model-value", "maxlength", "display-only", "placeholder", "disabled", "clearable", "onFocus", "onBlur", "onUpdate:modelValue"]))],
    16
    /* FULL_PROPS */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

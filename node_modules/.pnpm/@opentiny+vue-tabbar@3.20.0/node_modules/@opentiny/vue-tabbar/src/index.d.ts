declare const _default: import("@vue/runtime-core").DefineComponent<{
    activeColor: StringConstructor;
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    inactiveColor: StringConstructor;
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    placeholder: BooleanConstructor;
    route: BooleanConstructor;
    safeAreaInsetBottom: BooleanConstructor;
    zIndex: (StringConstructor | NumberConstructor)[];
    showNumber: {
        type: NumberConstructor;
        default: number;
    };
    itemList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    activeColor: StringConstructor;
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    inactiveColor: StringConstructor;
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    placeholder: BooleanConstructor;
    route: BooleanConstructor;
    safeAreaInsetBottom: BooleanConstructor;
    zIndex: (StringConstructor | NumberConstructor)[];
    showNumber: {
        type: NumberConstructor;
        default: number;
    };
    itemList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    route: boolean;
    fixed: boolean;
    tiny_mode_root: boolean;
    modelValue: string | number;
    border: boolean;
    placeholder: boolean;
    showNumber: number;
    safeAreaInsetBottom: boolean;
    itemList: unknown[];
}, {}>;
export default _default;

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var floatButtonProps = _extends({}, $props, {
  trigger: {
    default: "click",
    type: String,
    validator: function validator(val) {
      return ["click", "hover", ""].includes(val);
    }
  },
  open: Boolean,
  shape: {
    type: String,
    default: "circle",
    validator: function validator2(val) {
      return ["circle", "square"].includes(val);
    }
  },
  top: {
    type: String,
    default: ""
  },
  bottom: {
    type: String,
    default: "20px"
  },
  right: {
    type: String,
    default: "20px"
  },
  left: {
    type: String,
    default: ""
  },
  href: {
    type: String,
    default: ""
  },
  target: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    default: "default"
  },
  icon: {
    type: [Object, String],
    default: ""
  },
  description: {
    type: String,
    default: ""
  },
  tooltip: {
    type: String,
    default: ""
  },
  resetTime: {
    type: Number,
    default: 1e3
  },
  size: {
    type: String,
    default: "",
    validator: function validator3(val) {
      return ["large", "medium", "small", "mini", ""].includes(val);
    }
  },
  loading: Boolean,
  disabled: Boolean,
  backTop: Boolean,
  // 以下属性只有backTop设置为true才生效
  // 滚动高度达到此参数值才出现悬浮按钮
  visibilityHeight: {
    default: 400,
    type: Number
  },
  // 设置需要监听其滚动事件的元素
  element: {
    default: document.body,
    type: HTMLElement
  }
});
var FloatButton = defineComponent({
  name: $prefix + "FloatButton",
  inject: {
    buttonGroup: {
      default: ""
    }
  },
  props: floatButtonProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
FloatButton.install = function(Vue) {
  Vue.component(FloatButton.name, FloatButton);
};
FloatButton.version = version;
export {
  FloatButton as default
};

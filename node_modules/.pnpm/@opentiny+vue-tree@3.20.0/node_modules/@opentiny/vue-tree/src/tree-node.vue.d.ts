declare const _default: import("@vue/runtime-core").DefineComponent<{
    node: {
        default(): {};
    };
    props: {};
    expandIcon: ObjectConstructor;
    shrinkIcon: ObjectConstructor;
    expandIconColor: StringConstructor;
    shrinkIconColor: StringConstructor;
    renderContent: FunctionConstructor;
    renderAfterExpand: {
        type: BooleanConstructor;
        default: boolean;
    };
    showCheckbox: {
        type: BooleanConstructor;
        default: boolean;
    };
    showRadio: {
        type: BooleanConstructor;
        default: boolean;
    };
    currentRadio: {
        type: ObjectConstructor;
        default(): {
            value: null;
        };
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    collapsible: {
        type: BooleanConstructor;
        default: boolean;
    };
    nodeHeight: NumberConstructor;
    checkEasily: {
        type: BooleanConstructor;
        default: boolean;
    };
    action: ObjectConstructor;
    nodeKey: StringConstructor;
    theme: StringConstructor;
    showCheckedMark: BooleanConstructor;
    showLine: BooleanConstructor;
    isShowFocusBg: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:modelValue" | "node-expand" | "closeMenu" | "radio-change" | "tree-node-expand")[], "update:modelValue" | "node-expand" | "closeMenu" | "radio-change" | "tree-node-expand", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    node: {
        default(): {};
    };
    props: {};
    expandIcon: ObjectConstructor;
    shrinkIcon: ObjectConstructor;
    expandIconColor: StringConstructor;
    shrinkIconColor: StringConstructor;
    renderContent: FunctionConstructor;
    renderAfterExpand: {
        type: BooleanConstructor;
        default: boolean;
    };
    showCheckbox: {
        type: BooleanConstructor;
        default: boolean;
    };
    showRadio: {
        type: BooleanConstructor;
        default: boolean;
    };
    currentRadio: {
        type: ObjectConstructor;
        default(): {
            value: null;
        };
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    collapsible: {
        type: BooleanConstructor;
        default: boolean;
    };
    nodeHeight: NumberConstructor;
    checkEasily: {
        type: BooleanConstructor;
        default: boolean;
    };
    action: ObjectConstructor;
    nodeKey: StringConstructor;
    theme: StringConstructor;
    showCheckedMark: BooleanConstructor;
    showLine: BooleanConstructor;
    isShowFocusBg: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    "onNode-expand"?: ((...args: any[]) => any) | undefined;
    onCloseMenu?: ((...args: any[]) => any) | undefined;
    "onRadio-change"?: ((...args: any[]) => any) | undefined;
    "onTree-node-expand"?: ((...args: any[]) => any) | undefined;
}, {
    node: {};
    renderAfterExpand: boolean;
    showCheckbox: boolean;
    showRadio: boolean;
    showNumber: boolean;
    collapsible: boolean;
    showCheckedMark: boolean;
    showLine: boolean;
    isShowFocusBg: boolean;
    checkEasily: boolean;
    currentRadio: Record<string, any>;
}, {}>;
export default _default;

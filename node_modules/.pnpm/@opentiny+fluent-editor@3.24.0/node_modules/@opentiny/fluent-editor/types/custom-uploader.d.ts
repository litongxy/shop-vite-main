import { Range } from 'quill/core/quill';

interface InsertFileData {
    code: number;
    message?: string;
    data: {
        title: string;
        size: number;
        src: string;
    };
}
declare const Uploader: unknown;
declare class CustomUploader extends Uploader {
    quill: any;
    options: any;
    upload(range: any, files: any, isFile?: any): void;
    isAllowedFileSize: (maxSize: number, file: File) => boolean;
    isAllowedFileType: (accept: Array<string> | string, file: File) => boolean;
    handleUploadFile(range: any, files: any, _hasRejectedFile: any): void;
    insertFileToEditor(range: Range, file: File, { code, message, data }: InsertFileData): void;
    insertImageToEditor(range: any, { code, message, data }: {
        code: any;
        message: any;
        data: any;
    }): void;
    handleUploadImage(range: any, { file, files }: {
        file: any;
        files: any;
    }, hasRejectedImage: any): void;
}
export default CustomUploader;

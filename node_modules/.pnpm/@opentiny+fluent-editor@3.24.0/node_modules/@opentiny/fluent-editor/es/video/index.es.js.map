{"version":3,"file":"index.es.js","sources":["../../../src/video/index.ts"],"sourcesContent":["import type { Parchment as TypeParchment } from 'quill'\r\nimport Quill from 'quill'\r\nimport { sanitize } from '../config/editor.utils'\r\n\r\nconst BlockEmbed = Quill.imports['blots/block/embed'] as TypeParchment.BlotConstructor\r\nconst VIDEO_ATTRIBUTES = ['id', 'title', 'src']\r\n\r\nclass Video extends BlockEmbed {\r\n  static blotName: string\r\n  static tagName: string\r\n  static SANITIZED_URL: string\r\n  static PROTOCOL_WHITELIST: string[]\r\n  static className: string\r\n  statics: any\r\n  domNode: any\r\n\r\n  static sanitize(url) {\r\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL\r\n  }\r\n\r\n  static create(value) {\r\n    const node = super.create(value) as HTMLElement\r\n    node.setAttribute('contenteditable', 'false')\r\n    node.setAttribute('controls', 'controls')\r\n    VIDEO_ATTRIBUTES.forEach((key) => {\r\n      if (value[key]) {\r\n        switch (key) {\r\n          case 'src':{ const src = Video.sanitize(value[key])\r\n            node.setAttribute(key, src)\r\n            break\r\n          }\r\n          case 'title': {\r\n            node.setAttribute(key, value[key])\r\n            break\r\n          }\r\n          default: {\r\n            node.dataset[key] = value[key]\r\n          }\r\n        }\r\n      }\r\n    })\r\n    return node\r\n  }\r\n\r\n  static value(domNode) {\r\n    const formats: any = {}\r\n    VIDEO_ATTRIBUTES.forEach((key) => {\r\n      const value = domNode.getAttribute(key) || domNode.dataset[key]\r\n      if (value) {\r\n        formats[key] = value\r\n      }\r\n    })\r\n    return formats\r\n  }\r\n}\r\nVideo.blotName = 'video'\r\nVideo.tagName = 'VIDEO'\r\nVideo.SANITIZED_URL = 'about:blank'\r\nVideo.PROTOCOL_WHITELIST = ['http', 'https']\r\nVideo.className = 'ql-video-item'\r\n\r\nexport default Video\r\n"],"names":[],"mappings":";;AAIA,MAAM,aAAa,MAAM,QAAQ,mBAAmB;AACpD,MAAM,mBAAmB,CAAC,MAAM,SAAS,KAAK;AAE9C,MAAM,cAAc,WAAW;AAAA,EAS7B,OAAO,SAAS,KAAK;AACnB,WAAO,SAAS,KAAK,KAAK,kBAAkB,IAAI,MAAM,KAAK;AAAA,EAC7D;AAAA,EAEA,OAAO,OAAO,OAAO;AACb,UAAA,OAAO,MAAM,OAAO,KAAK;AAC1B,SAAA,aAAa,mBAAmB,OAAO;AACvC,SAAA,aAAa,YAAY,UAAU;AACvB,qBAAA,QAAQ,CAAC,QAAQ;AAC5B,UAAA,MAAM,GAAG,GAAG;AACd,gBAAQ,KAAK;AAAA,UACX,KAAK,OAAM;AAAE,kBAAM,MAAM,MAAM,SAAS,MAAM,GAAG,CAAC;AAC3C,iBAAA,aAAa,KAAK,GAAG;AAC1B;AAAA,UACF;AAAA,UACA,KAAK,SAAS;AACZ,iBAAK,aAAa,KAAK,MAAM,GAAG,CAAC;AACjC;AAAA,UACF;AAAA,UACA,SAAS;AACP,iBAAK,QAAQ,GAAG,IAAI,MAAM,GAAG;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IAAA,CACD;AACM,WAAA;AAAA,EACT;AAAA,EAEA,OAAO,MAAM,SAAS;AACpB,UAAM,UAAe,CAAA;AACJ,qBAAA,QAAQ,CAAC,QAAQ;AAChC,YAAM,QAAQ,QAAQ,aAAa,GAAG,KAAK,QAAQ,QAAQ,GAAG;AAC9D,UAAI,OAAO;AACT,gBAAQ,GAAG,IAAI;AAAA,MACjB;AAAA,IAAA,CACD;AACM,WAAA;AAAA,EACT;AACF;AACA,MAAM,WAAW;AACjB,MAAM,UAAU;AAChB,MAAM,gBAAgB;AACtB,MAAM,qBAAqB,CAAC,QAAQ,OAAO;AAC3C,MAAM,YAAY;"}
{"version":3,"file":"image.es.js","sources":["../../../src/custom-image/image.ts"],"sourcesContent":["import Quill from 'quill'\r\nimport { isNullOrUndefined, sanitize } from '../config/editor.utils'\r\n\r\nconst Embed = Quill.imports['blots/embed']\r\nconst Inline = Quill.imports['blots/inline']\r\n\r\nconst ATTRIBUTES = ['alt', 'height', 'width', 'image-id']\r\n\r\n// @dynamic\r\nclass CustomImage extends Embed {\r\n  static ID_SEED = 0\r\n  static blotName: string\r\n  static tagName: string\r\n  domNode: any\r\n  parent: any\r\n  scroll: any\r\n  next: any\r\n  static create(value) {\r\n    const node = super.create(value)\r\n    const url = typeof value === 'string' ? value : value.src\r\n    if (url) {\r\n      const imgURL = this.sanitize(url)\r\n      if (!imgURL?.startsWith('data:image')) {\r\n        node.dataset.src = imgURL\r\n      }\r\n      node.setAttribute('src', imgURL)\r\n    }\r\n    node.setAttribute('data-image-id', `img${CustomImage.ID_SEED++}`)\r\n    node.setAttribute('devui-editorx-image', true)\r\n    node.style.verticalAlign = 'baseline'\r\n    return node\r\n  }\r\n\r\n  static formats(domNode) {\r\n    return ATTRIBUTES.reduce((formats, attribute) => {\r\n      if (domNode.hasAttribute(attribute)) {\r\n        formats[attribute] = domNode.getAttribute(attribute)\r\n      }\r\n      return formats\r\n    }, {})\r\n  }\r\n\r\n  static match(url) {\r\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url)\r\n  }\r\n\r\n  static register() {\r\n    if (/Firefox/i.test(navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        // Disable image resizing in Firefox\r\n        document.execCommand('enableObjectResizing', false, false)\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  static sanitize(url) {\r\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0'\r\n  }\r\n\r\n  static value(domNode) {\r\n    const formats: any = {}\r\n    const imageSrc = domNode.getAttribute('src')\r\n    formats.src = this.sanitize(imageSrc)\r\n    formats.hasExisted = domNode.getAttribute('devui-editorx-image')\r\n    formats.imageId = domNode.dataset.imageId\r\n    return formats\r\n  }\r\n\r\n  format(name, value) {\r\n    if (ATTRIBUTES.includes(name)) {\r\n      if (value) {\r\n        this.domNode.setAttribute(name, value)\r\n      }\r\n      else {\r\n        this.domNode.removeAttribute(name)\r\n      }\r\n    }\r\n    else {\r\n      super.format(name, value)\r\n    }\r\n  }\r\n\r\n  unWrap() {\r\n    this.parent.replaceWith(this)\r\n  }\r\n\r\n  wrap(name, value) {\r\n    const wrapper = typeof name === 'string' ? this.scroll.create(name, value) : name\r\n    if (!isNullOrUndefined(this.parent)) {\r\n      this.parent.insertBefore(wrapper, this.next || undefined)\r\n    }\r\n    if (typeof wrapper.appendChild !== 'function') {\r\n      throw new TypeError(`Cannot wrap ${name}`)\r\n    }\r\n    wrapper.appendChild(this)\r\n    return wrapper\r\n  }\r\n}\r\nCustomImage.blotName = 'image'\r\nCustomImage.tagName = 'IMG'\r\n\r\n// @dynamic\r\nclass CustomImageContainer extends Inline {\r\n  static tagName: string\r\n  static className: string\r\n  static blotName: string\r\n  static allowedChildren: typeof CustomImage[]\r\n  constructor(scroll, domNode) {\r\n    super(scroll, domNode)\r\n    domNode.setAttribute('contenteditable', false)\r\n  }\r\n}\r\nCustomImageContainer.blotName = 'image-container'\r\nCustomImageContainer.className = 'ql-image-container'\r\nCustomImageContainer.tagName = 'DIV'\r\n\r\nCustomImageContainer.allowedChildren = [CustomImage]\r\nexport { CustomImage as default, CustomImageContainer as ImageContainerBlot }\r\n"],"names":[],"mappings":"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"}
{"version":3,"file":"table-scroll-bar.es.js","sources":["../../../../src/table/modules/table-scroll-bar.ts"],"sourcesContent":["import { SCROLL_BAR_PANEL_HEIGHT } from '../table-config'\r\nimport { css } from '../utils'\r\n\r\nexport default class TableScrollBar {\r\n  table: any\r\n  quill: any\r\n  modulesContainer: any\r\n  domNode: any\r\n  oldRootScrollTop: any\r\n  // @ts-ignore\r\n  prev: number\r\n  columnToolDomNode: any\r\n  columnCtrlPanel: any\r\n  leftMask: any\r\n  tableViewRect: any\r\n  tableRect: any\r\n  containerRect: any\r\n  subscriber: any\r\n  // @ts-ignore\r\n  tableMoveDistance: number\r\n  // @ts-ignore\r\n  maxBarLeft: number\r\n  // @ts-ignore\r\n  scrollBar: Element\r\n  // @ts-ignore\r\n  isTableOverflow: boolean // 表格是否溢出开关，判断开关值后只改变样式一次，不重复修改\r\n\r\n  constructor(table, quill, dom) {\r\n    if (!table) {\r\n      return\r\n    }\r\n    this.table = table\r\n    this.quill = quill\r\n    this.modulesContainer = dom\r\n    this.domNode = null\r\n    this.oldRootScrollTop = this.quill.root.scrollTop\r\n    this.prev = 0\r\n\r\n    const betterTableModule = this.quill.getModule('better-table')\r\n    const tableColumnTool = betterTableModule.columnTool\r\n    this.columnToolDomNode = tableColumnTool.domNode\r\n    this.columnCtrlPanel = tableColumnTool.columnCtrlPanel\r\n    this.leftMask = tableColumnTool.leftMask\r\n\r\n    this.updateScrollBar()\r\n\r\n    if (this.quill.root === this.quill.scrollingContainer) {\r\n      this.quill.root.addEventListener('scroll', this.handleQuillRootScroll.bind(this))\r\n    }\r\n  }\r\n\r\n  handleQuillRootScroll() {\r\n    if (!this.domNode) {\r\n      return\r\n    }\r\n    const curTableRect = this.table.getBoundingClientRect()\r\n    const curContainerRect = this.quill.root.parentNode.getBoundingClientRect()\r\n    const tableTop = curTableRect.top + SCROLL_BAR_PANEL_HEIGHT\r\n    const tableBottom = curTableRect.top + curTableRect.height - 1\r\n    const containerBottom = curContainerRect.top + curContainerRect.height\r\n    if (containerBottom < tableBottom && containerBottom > tableTop) { // 表格下端溢出容器下端\r\n      if (!this.isTableOverflow) {\r\n        this.isTableOverflow = true\r\n        css(this.domNode, {\r\n          display: 'block',\r\n          top: `${this.containerRect.height - SCROLL_BAR_PANEL_HEIGHT}px`,\r\n          marginTop: '0px',\r\n        })\r\n      }\r\n    }\r\n    else if (containerBottom <= tableTop) { // 表格上端溢出容器下端\r\n      this.isTableOverflow = false\r\n      this.domNode.style.display = 'none'\r\n    }\r\n    else { // 表格下端在容器内\r\n      this.setScrollBarToBottom()\r\n      css(this.domNode, { marginTop: `${this.oldRootScrollTop - this.quill.root.scrollTop}px` })\r\n    }\r\n  }\r\n\r\n  setScrollBarToBottom() {\r\n    if (this.isTableOverflow) {\r\n      this.isTableOverflow = false\r\n      const barPos = this.tableRect.top + this.tableRect.height - this.containerRect.top - 1\r\n      css(this.domNode, { display: 'block', top: `${barPos}px` })\r\n    }\r\n  }\r\n\r\n  resetTableHeight(table) {\r\n    if (this.domNode) {\r\n      // 表格的高度改变，重置初始化tableRect的高度，但不重置其他坐标值\r\n      this.tableRect.height = table.getBoundingClientRect().height\r\n      this.isTableOverflow = !this.isTableOverflow\r\n      this.handleQuillRootScroll()\r\n    }\r\n  }\r\n\r\n  setScrollBarMove(pos, isMouse) {\r\n    // 获取当前滑块左边距和鼠标两次事件节点之间的位移差，计算当前滑块位置及是否显示左右遮罩层，通过比例计算表格位移并赋值\r\n    const currentBarLeft = Number.parseInt(getComputedStyle(this.scrollBar).left, 10)\r\n    let left = isMouse ? pos - this.prev + currentBarLeft : currentBarLeft + pos\r\n    this.showMask(left)\r\n    left = this.getLimitedDistance(left)\r\n    const scale = this.tableViewRect.width / this.tableRect.width\r\n    const move = left / scale\r\n    const columnCtrlPanelLeft = this.tableViewRect.left - this.containerRect.left - move\r\n    css(this.scrollBar, { left: `${left}px` }) // 移动表格滚动条\r\n    css(this.columnCtrlPanel, { left: `${columnCtrlPanelLeft}px` }) // 移动顶部列宽控制条\r\n    this.table.parentNode.scrollLeft = move // 移动表格\r\n    if (isMouse) {\r\n      this.prev = pos\r\n    }\r\n\r\n    // fix: 拖动滚动条时修正选区位置\r\n    const tableSelection = this.quill.getModule('better-table').tableSelection\r\n    if (tableSelection && tableSelection.selectedTds.length) {\r\n      tableSelection.refreshHelpLinesPosition()\r\n    }\r\n  }\r\n\r\n  handleScrollBarMouseDown(mouseDownEvent) {\r\n    mouseDownEvent.preventDefault()\r\n\r\n    this.prev = mouseDownEvent.clientX\r\n    this.subscriber = (mouseMoveEvent: any) => {\r\n      mouseMoveEvent.preventDefault()\r\n      mouseMoveEvent.stopPropagation()\r\n      this.setScrollBarMove(mouseMoveEvent.clientX, true)\r\n    }\r\n    this.quill.root.parentNode.addEventListener('mousemove', this.subscriber, false)\r\n    document.addEventListener('mouseup', this.handleScrollBarMouseup.bind(this), false)\r\n  }\r\n\r\n  handleScrollBarMouseup(event) {\r\n    event.preventDefault()\r\n    this.quill.root.parentNode.removeEventListener('mousemove', this.subscriber)\r\n    document.removeEventListener('mouseup', this.handleScrollBarMouseup.bind(this), false)\r\n  }\r\n\r\n  handleWheel(event) {\r\n    // 按住 Shift 滚动鼠标滚轮，可以对表格进行横向滚动\r\n    if (event.shiftKey) {\r\n      const { deltaY } = event // 每次滚动鼠标滚轮移动的距离\r\n      this.setScrollBarMove(deltaY, false)\r\n    }\r\n  }\r\n\r\n  showMask(distance) {\r\n    // 根据当前滑块左边距判断是否显示左右遮罩层\r\n    if (distance >= Math.floor(this.maxBarLeft)) {\r\n      css(this.leftMask, { display: 'block' })\r\n    }\r\n    else if (distance <= 0) {\r\n      css(this.leftMask, { display: 'none' })\r\n    }\r\n    else {\r\n      css(this.leftMask, { display: 'block' })\r\n    }\r\n  }\r\n\r\n  getLimitedDistance(distance) {\r\n    if (distance >= Math.floor(this.maxBarLeft)) {\r\n      distance = this.maxBarLeft\r\n    }\r\n    else if (distance <= 0) {\r\n      distance = 0\r\n    }\r\n    return distance\r\n  }\r\n\r\n  updateScrollBar() {\r\n    if (!this.table?.parentNode) {\r\n      return\r\n    }\r\n    // 获取表格尺寸和表格容器尺寸\r\n    const tableRect = this.table.getBoundingClientRect()\r\n    const tableViewRect = this.table.parentNode.getBoundingClientRect()\r\n    const tableMoveDistance = tableRect.width - tableViewRect.width // 表格最大移动距离\r\n    this.tableRect = tableRect\r\n    this.tableViewRect = tableViewRect\r\n    this.tableMoveDistance = tableMoveDistance\r\n    this.oldRootScrollTop = this.quill.root.scrollTop\r\n\r\n    if (tableMoveDistance > 0) {\r\n      this.createScrollBar()\r\n    }\r\n    else {\r\n      this.destroyScrollBar()\r\n    }\r\n  }\r\n\r\n  createScrollBar() {\r\n    // 列控制条增加表格相应位移\r\n    const parent = this.quill.root.parentNode\r\n    const containerRect = parent.getBoundingClientRect() // 编辑器容器宽度\r\n    this.containerRect = containerRect\r\n    css(this.columnCtrlPanel, {\r\n      left: `${this.tableViewRect.left - containerRect.left - this.table.parentNode.scrollLeft}px`,\r\n    })\r\n\r\n    // 创建滚动条\r\n    if (this.domNode) {\r\n      this.domNode.remove()\r\n    }\r\n    this.domNode = document.createElement('div')\r\n    this.domNode.classList.add('qlbt-table-scroll-bar-panel')\r\n    this.scrollBar = document.createElement('div')\r\n    this.scrollBar.classList.add('qlbt-table-scroll-bar')\r\n    this.scrollBar.addEventListener('mousedown', this.handleScrollBarMouseDown.bind(this), false)\r\n    const scale = this.tableViewRect.width / this.tableRect.width\r\n    const barWidth = this.tableViewRect.width - this.tableMoveDistance * scale // 滑块宽度\r\n    css(this.scrollBar, { width: `${barWidth}px` })\r\n    this.domNode.appendChild(this.scrollBar)\r\n\r\n    // 判断当前表格是否存在位移，如存在通过比例计算滑块当前位移并赋值\r\n    const tableScrollLeft = this.table.parentNode.scrollLeft\r\n    this.maxBarLeft = this.tableMoveDistance * scale // 滑块最大移动距离\r\n    if (tableScrollLeft) {\r\n      const barLeft = tableScrollLeft * scale\r\n      this.showMask(barLeft)\r\n      css(this.scrollBar, { left: `${this.getLimitedDistance(barLeft)}px` })\r\n    }\r\n\r\n    // 将滚动条插入到 table control panel 中\r\n    const barPos = this.tableRect.top + this.tableRect.height - containerRect.top - 1\r\n    this.isTableOverflow = containerRect.top + containerRect.height < this.tableRect.top + this.tableRect.height\r\n    this.modulesContainer.appendChild(this.domNode)\r\n    css(this.domNode, { top: `${Math.min(containerRect.height - SCROLL_BAR_PANEL_HEIGHT, barPos)}px` })\r\n\r\n    // 绑定鼠标滚轮事件：Shift+鼠标滚轮，滚动表格横向滚动条\r\n    document.addEventListener('wheel', this.handleWheel.bind(this))\r\n  }\r\n\r\n  destroyScrollBar() {\r\n    css(this.leftMask, { display: 'none' })\r\n    this.columnCtrlPanel.removeAttribute('style')\r\n    this.maxBarLeft = null\r\n    this.destroy()\r\n  }\r\n\r\n  destroy() {\r\n    if (this.domNode) {\r\n      this.domNode.remove()\r\n    }\r\n    this.quill.root.removeEventListener('scroll', this.handleQuillRootScroll.bind(this))\r\n    document.removeEventListener('wheel', this.handleWheel.bind(this))\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
{"version":3,"file":"table-operation-menu.es.js","sources":["../../../../src/table/modules/table-operation-menu.ts"],"sourcesContent":["import Quill from 'quill'\r\nimport { CHANGE_LANGUAGE_EVENT } from '../../config'\r\nimport {\r\n  ERROR_LIMIT,\r\n  MENU_ITEM_HEIGHT,\r\n  MENU_MIN_HEIGHT,\r\n  MENU_WIDTH,\r\n  OPERATE_MENU_COLORPICKER_CLASS,\r\n  OPERATE_MENU_COLORPICKER_ITEM_CLASS,\r\n  OPERATE_MENU_DIVIDING_CLASS,\r\n  OPERATE_MENU_ITEM_CLASS,\r\n  OPERATE_MENU_SUBTITLE_CLASS,\r\n} from '../table-config'\r\nimport { arrayFrom, css, elementRemove, getRelativeRect } from '../utils'\r\n\r\nconst DEFAULT_CELL_COLORS = ['white', 'red', 'yellow', 'blue']\r\nconst NODE_EVENT_MAP = new WeakMap()\r\nexport default class TableOperationMenu {\r\n  tableSelection: any\r\n  table: any\r\n  quill: any\r\n  options: any\r\n  menuItems: any\r\n  tableColumnTool: any\r\n  tableScrollBar: any\r\n  boundary: any\r\n  selectedTds: any\r\n  destroyHandler: any\r\n  columnToolCells: any\r\n  colorSubTitle: any\r\n  cellColors: any\r\n  domNode: any\r\n  DEFAULT_COLOR_SUBTITLE: string\r\n  DEFAULT_MENU: Record<string, {\r\n    text: string\r\n    handler: () => void\r\n  }>\r\n\r\n  constructor(params, quill, options) {\r\n    const betterTableModule = quill.getModule('better-table')\r\n    this.tableSelection = betterTableModule.tableSelection\r\n    this.table = params.table\r\n    this.quill = quill\r\n    this.options = options\r\n    this.setDefaultMenu()\r\n    this.menuItems = { ...this.DEFAULT_MENU, ...options.items }\r\n    this.tableColumnTool = betterTableModule.columnTool\r\n    // this.tableRowTool = betterTableModule.rowTool\r\n    this.tableScrollBar = betterTableModule.tableScrollBar\r\n    this.boundary = this.tableSelection.boundary\r\n    this.selectedTds = this.tableSelection.selectedTds\r\n    this.destroyHandler = this.destroy.bind(this)\r\n    this.columnToolCells = this.tableColumnTool.colToolCells()\r\n    this.DEFAULT_COLOR_SUBTITLE = this.quill.options.langText['sub-title-bg-color']\r\n    this.colorSubTitle\r\n      = options.color && options.color.text\r\n        ? options.color.text\r\n        : this.DEFAULT_COLOR_SUBTITLE\r\n    this.cellColors\r\n      = options.color && options.color.colors\r\n        ? options.color.colors\r\n        : DEFAULT_CELL_COLORS\r\n\r\n    this.menuInitial(params)\r\n    this.mount()\r\n    document.addEventListener('click', this.destroyHandler, false)\r\n    this.quill.on(CHANGE_LANGUAGE_EVENT, () => {\r\n      this.destroy()\r\n      this.DEFAULT_COLOR_SUBTITLE = this.quill.options.langText['sub-title-bg-color']\r\n      this.setDefaultMenu()\r\n    })\r\n  }\r\n\r\n  setDefaultMenu() {\r\n    const langText = this.quill.options.langText\r\n    this.DEFAULT_MENU = {\r\n      copyCells: {\r\n        text: langText['copy-cells'],\r\n        handler() {\r\n          this.onCopy('copy')\r\n        },\r\n      },\r\n      copyTable: {\r\n        text: langText['copy-table'],\r\n        async handler() {\r\n          this.tableColumnTool.destroy()\r\n          this.tableScrollBar.destroy()\r\n          this.tableSelection.clearSelection()\r\n          const dom = this.table.cloneNode(true)\r\n          const trArr = dom.querySelectorAll('tr[data-row]')\r\n          trArr.forEach(tr => tr.removeAttribute('data-row'))\r\n          this.setCopyRange(dom)\r\n          const blob = new Blob([dom.outerHTML], { type: 'text/html' })\r\n          const clipboardItem = new ClipboardItem({ 'text/html': blob })\r\n          try {\r\n            await navigator.clipboard.write([clipboardItem])\r\n          }\r\n          catch (_e) {\r\n            throw new Error('Failed to write to clipboard.')\r\n          }\r\n        },\r\n      },\r\n      cutCells: {\r\n        text: langText['cut-cells'],\r\n        handler() {\r\n          this.onCopy('cut')\r\n        },\r\n      },\r\n      emptyCells: {\r\n        text: langText['empty-cells'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const { selectedTds } = this.tableSelection\r\n          tableContainer.emptyCells(selectedTds)\r\n        },\r\n      },\r\n      insertColumnRight: {\r\n        text: langText['insert-column-right'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const colIndex = getColToolCellIndexByBoundary(\r\n            this.columnToolCells,\r\n            this.boundary,\r\n            (cellRect, boundary) => {\r\n              return Math.abs(cellRect.x + cellRect.width - boundary.x1) <= ERROR_LIMIT\r\n            },\r\n            this.quill.root.parentNode,\r\n          )\r\n\r\n          const newColumn = tableContainer.insertColumn(this.boundary, colIndex, true, this.quill.root.parentNode)\r\n\r\n          this.tableColumnTool.updateColToolCells()\r\n          this.quill.update(Quill.sources.USER)\r\n          // fix: the scroll bar will go to the top when insert row/column to the table\r\n          // this.quill.setSelection(\r\n          //   this.quill.getIndex(newColumn[0]),\r\n          //   0,\r\n          //   Quill.sources.SILENT\r\n          // )\r\n          this.tableSelection.setSelection(\r\n            newColumn[0].domNode.getBoundingClientRect(),\r\n            newColumn[0].domNode.getBoundingClientRect(),\r\n          )\r\n\r\n          setTimeout(() => this.tableScrollBar.updateScrollBar())\r\n        },\r\n      },\r\n      insertColumnLeft: {\r\n        text: langText['insert-column-left'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const colIndex = getColToolCellIndexByBoundary(\r\n            this.columnToolCells,\r\n            this.boundary,\r\n            (cellRect, boundary) => {\r\n              return Math.abs(cellRect.x - boundary.x) <= ERROR_LIMIT\r\n            },\r\n            this.quill.root.parentNode,\r\n          )\r\n\r\n          const newColumn = tableContainer.insertColumn(this.boundary, colIndex, false, this.quill.root.parentNode)\r\n\r\n          this.tableColumnTool.updateColToolCells()\r\n          this.quill.update(Quill.sources.USER)\r\n          // this.quill.setSelection(\r\n          //   this.quill.getIndex(newColumn[0]),\r\n          //   0,\r\n          //   Quill.sources.SILENT\r\n          // )\r\n          this.tableSelection.setSelection(\r\n            newColumn[0].domNode.getBoundingClientRect(),\r\n            newColumn[0].domNode.getBoundingClientRect(),\r\n          )\r\n\r\n          setTimeout(() => this.tableScrollBar.updateScrollBar())\r\n        },\r\n      },\r\n      insertRowUp: {\r\n        text: langText['insert-row-up'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const affectedCells = tableContainer.insertRow(this.boundary, false, this.quill.root.parentNode)\r\n\r\n          this.tableColumnTool.updateRowToolCells()\r\n          this.quill.update(Quill.sources.USER)\r\n          // this.quill.setSelection(\r\n          //   this.quill.getIndex(affectedCells[0]),\r\n          //   0,\r\n          //   Quill.sources.SILENT\r\n          // )\r\n          this.tableSelection.setSelection(\r\n            affectedCells[0].domNode.getBoundingClientRect(),\r\n            affectedCells[0].domNode.getBoundingClientRect(),\r\n          )\r\n\r\n          setTimeout(() => this.tableScrollBar.resetTableHeight(this.table))\r\n        },\r\n      },\r\n      insertRowDown: {\r\n        text: langText['insert-row-down'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const affectedCells = tableContainer.insertRow(this.boundary, true, this.quill.root.parentNode)\r\n\r\n          this.tableColumnTool.updateRowToolCells()\r\n          this.quill.update(Quill.sources.USER)\r\n          // this.quill.setSelection(\r\n          //   this.quill.getIndex(affectedCells[0]),\r\n          //   0,\r\n          //   Quill.sources.SILENT\r\n          // )\r\n          this.tableSelection.setSelection(\r\n            affectedCells[0].domNode.getBoundingClientRect(),\r\n            affectedCells[0].domNode.getBoundingClientRect(),\r\n          )\r\n\r\n          setTimeout(() => this.tableScrollBar.resetTableHeight(this.table))\r\n        },\r\n      },\r\n      mergeCells: {\r\n        text: langText['merge-cells'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          // compute merged Cell rowspan, equal to length of selected rows\r\n          const rowspan = tableContainer.rows().reduce((sum, row) => {\r\n            const rowRect = getRelativeRect(row.domNode.getBoundingClientRect(), this.quill.root.parentNode)\r\n            if (\r\n              rowRect.y > this.boundary.y - ERROR_LIMIT\r\n              && rowRect.y + rowRect.height < this.boundary.y + this.boundary.height + ERROR_LIMIT\r\n            ) {\r\n              sum += 1\r\n            }\r\n            return sum\r\n          }, 0)\r\n\r\n          // compute merged cell colspan, equal to length of selected cols\r\n          const colspan = this.columnToolCells.reduce((sum, cell) => {\r\n            const cellRect = getRelativeRect(cell.getBoundingClientRect(), this.quill.root.parentNode)\r\n            if (\r\n              cellRect.x > this.boundary.x - ERROR_LIMIT\r\n              && cellRect.x + cellRect.width < this.boundary.x + this.boundary.width + ERROR_LIMIT\r\n            ) {\r\n              sum += 1\r\n            }\r\n            return sum\r\n          }, 0)\r\n\r\n          const mergedCell = tableContainer.mergeCells(\r\n            this.boundary,\r\n            this.selectedTds,\r\n            rowspan,\r\n            colspan,\r\n            this.quill.root.parentNode,\r\n          )\r\n          this.quill.update(Quill.sources.USER)\r\n          this.tableSelection.setSelection(\r\n            mergedCell.domNode.getBoundingClientRect(),\r\n            mergedCell.domNode.getBoundingClientRect(),\r\n          )\r\n        },\r\n      },\r\n      unmergeCells: {\r\n        text: langText['unmerge-cells'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          tableContainer.unmergeCells(this.selectedTds, this.quill.root.parentNode)\r\n          this.quill.update(Quill.sources.USER)\r\n          this.tableSelection.clearSelection()\r\n        },\r\n      },\r\n      deleteColumn: {\r\n        text: langText['delete-column'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const colIndexes = getColToolCellIndexesByBoundary(\r\n            this.columnToolCells,\r\n            this.boundary,\r\n            (cellRect, boundary) => {\r\n              return cellRect.x + ERROR_LIMIT > boundary.x && cellRect.x + cellRect.width - ERROR_LIMIT < boundary.x1\r\n            },\r\n            this.quill.root.parentNode,\r\n          )\r\n\r\n          const isDeleteTable = tableContainer.deleteColumns(this.boundary, colIndexes, this.quill.root.parentNode)\r\n          if (!isDeleteTable) {\r\n            this.tableColumnTool.updateColToolCells()\r\n            this.quill.update(Quill.sources.USER)\r\n            this.tableSelection.clearSelection()\r\n          }\r\n\r\n          setTimeout(() => this.tableScrollBar.updateScrollBar())\r\n        },\r\n      },\r\n      deleteRow: {\r\n        text: langText['delete-row'],\r\n        handler() {\r\n          const tableContainer = Quill.find(this.table)\r\n          const isDeleteTable = tableContainer.deleteRow(this.boundary, this.quill.root.parentNode)\r\n          if (!isDeleteTable) {\r\n            this.tableColumnTool.updateRowToolCells()\r\n            this.quill.update(Quill.sources.USER)\r\n            this.tableSelection.clearSelection()\r\n          }\r\n        },\r\n      },\r\n      deleteTable: {\r\n        text: langText['delete-table'],\r\n        handler() {\r\n          const betterTableModule = this.quill.getModule('better-table')\r\n          const tableContainer = Quill.find(this.table)\r\n          betterTableModule.hideTableTools()\r\n          tableContainer.remove()\r\n          this.quill.update(Quill.sources.USER)\r\n          // fix: 右键菜单删除表格后编辑器失焦\r\n          this.quill.focus()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  mount() {\r\n    this.quill.root.parentNode.appendChild(this.domNode)\r\n  }\r\n\r\n  destroy() {\r\n    const menuItems = arrayFrom(\r\n      this.domNode.querySelectorAll(`.${OPERATE_MENU_ITEM_CLASS}`),\r\n    )\r\n    const colorPickerItems = arrayFrom(\r\n      this.domNode.querySelectorAll(`.${OPERATE_MENU_COLORPICKER_ITEM_CLASS}`),\r\n    )\r\n    const nodes = menuItems.concat(colorPickerItems)\r\n\r\n    nodes.forEach((node) => {\r\n      if (NODE_EVENT_MAP.has(node)) {\r\n        const unregister = NODE_EVENT_MAP.get(node)\r\n\r\n        if (unregister && typeof unregister === 'function') {\r\n          unregister()\r\n        }\r\n      }\r\n    })\r\n\r\n    elementRemove(this.domNode)\r\n    document.removeEventListener('mousedown', this.destroyHandler, false)\r\n\r\n    return null\r\n  }\r\n\r\n  menuInitial({ cell, left, top }) {\r\n    const rowspan = cell.getAttribute('rowspan')\r\n    const colspan = cell.getAttribute('colspan')\r\n    const winHeight = window.innerHeight || Math.max(document.documentElement.clientHeight, document.body.clientHeight)\r\n    const num = Object.keys(this.menuItems) || []\r\n    const menuHeight = MENU_ITEM_HEIGHT * num.length || MENU_MIN_HEIGHT\r\n    const transformOffset = checkAndGetViewPointChange(this.quill.root.parentNode, left, top)\r\n    const leftPos = left - transformOffset.offsetX\r\n    const topPos = top - transformOffset.offsetY\r\n\r\n    const cssContent = {\r\n      'left': `${leftPos}px`,\r\n      'top': `${topPos}px`,\r\n      'min-height': `${MENU_MIN_HEIGHT}px`,\r\n      'max-height': `${winHeight - topPos}px`,\r\n      'width': `${MENU_WIDTH}px`,\r\n      'overflow-y': 'auto',\r\n    }\r\n    // fix: 处理菜单超出屏幕\r\n    if (menuHeight + top > winHeight || topPos > winHeight / 2) {\r\n      delete cssContent.top\r\n      cssContent['max-height'] = `${winHeight - 20}px`\r\n      cssContent.bottom = '10px'\r\n    }\r\n\r\n    this.domNode = document.createElement('div')\r\n    this.domNode.classList.add('qlbt-operation-menu')\r\n    css(this.domNode, cssContent)\r\n    const fragment = document.createDocumentFragment()\r\n\r\n    for (const name in this.menuItems) {\r\n      if (this.menuItems[name]) {\r\n        const item = { ...this.DEFAULT_MENU[name], ...this.menuItems[name] }\r\n        const dom = this.menuItemCreator(item)\r\n        if (\r\n          (name === 'mergeCells' && this.tableSelection.selectedTds.length === 1)\r\n          || (name === 'unmergeCells' && rowspan === 1 && colspan === 1)\r\n        ) {\r\n          dom.classList.add('qlbt-operation-menu-disabled')\r\n        }\r\n        else {\r\n          dom.addEventListener('mouseup', item.handler.bind(this), false)\r\n        }\r\n        fragment.appendChild(dom)\r\n      }\r\n    }\r\n    this.domNode.appendChild(fragment)\r\n\r\n    // if colors option is false, disabled bg color\r\n    if (this.options.color && this.options.color !== false) {\r\n      this.domNode.appendChild(dividingCreator())\r\n      this.domNode.appendChild(subTitleCreator(this.colorSubTitle))\r\n      this.domNode.appendChild(this.colorsItemCreator(this.cellColors))\r\n    }\r\n\r\n    // create dividing line\r\n    function dividingCreator() {\r\n      const dividing = document.createElement('div')\r\n      dividing.classList.add(OPERATE_MENU_DIVIDING_CLASS)\r\n      return dividing\r\n    }\r\n\r\n    // create subtitle for menu\r\n    function subTitleCreator(title) {\r\n      const subTitle = document.createElement('div')\r\n      subTitle.classList.add(OPERATE_MENU_SUBTITLE_CLASS)\r\n      subTitle.textContent = title\r\n      return subTitle\r\n    }\r\n  }\r\n\r\n  colorsItemCreator(colors) {\r\n    const self = this\r\n    const node = document.createElement('div')\r\n    node.classList.add(OPERATE_MENU_COLORPICKER_CLASS)\r\n\r\n    colors.forEach((color) => {\r\n      const colorBox = colorBoxCreator(color)\r\n      node.appendChild(colorBox)\r\n    })\r\n\r\n    function colorBoxCreator(color) {\r\n      const box = document.createElement('div')\r\n      box.classList.add(OPERATE_MENU_COLORPICKER_ITEM_CLASS)\r\n      box.setAttribute('data-color', color)\r\n      box.style.backgroundColor = color\r\n\r\n      const clickHandler = function () {\r\n        const selectedTds = self.tableSelection.selectedTds\r\n        if (selectedTds && selectedTds.length > 0) {\r\n          selectedTds.forEach((tableCell) => {\r\n            tableCell.domNode.children[0].setAttribute('data-parent-bg', color)\r\n            tableCell.format('cell-bg', color)\r\n          })\r\n        }\r\n      }\r\n\r\n      box.addEventListener('click', clickHandler, false)\r\n\r\n      NODE_EVENT_MAP.set(box, () => {\r\n        box.removeEventListener('click', clickHandler, false)\r\n      })\r\n\r\n      return box\r\n    }\r\n\r\n    return node\r\n  }\r\n\r\n  menuItemCreator({ text }) {\r\n    const node = document.createElement('div')\r\n    node.classList.add('qlbt-operation-menu-item')\r\n    node.style.height = `${MENU_ITEM_HEIGHT}px`\r\n    node.textContent = text\r\n    // node.addEventListener('click', handler.bind(this), false)\r\n    return node\r\n  }\r\n\r\n  async onCopy(operation) {\r\n    const { selectedTds } = this.tableSelection\r\n    const virtualTable = this.createVirtualTable(selectedTds, operation)\r\n    this.setCopyRange(virtualTable)\r\n    this.tableSelection.preSelectedTable = virtualTable\r\n    this.tableSelection.preSelectedTds = selectedTds\r\n    const blob = new Blob([this.tableSelection.preSelectedTable.outerHTML], { type: 'text/html' })\r\n    const clipboardItem = new ClipboardItem({ 'text/html': blob })\r\n    try {\r\n      await navigator.clipboard.write([clipboardItem])\r\n    }\r\n    catch (_e) {\r\n      throw new Error('Failed to write to clipboard.')\r\n    }\r\n    if (operation === 'cut') {\r\n      const tableContainer = Quill.find(this.table)\r\n      tableContainer.emptyCells(selectedTds)\r\n    }\r\n  }\r\n\r\n  createVirtualTable(selectedTds, _operation) {\r\n    const virtualTable: any = document.createElement('table')\r\n    virtualTable.style.position = 'fixed'\r\n    virtualTable.style.top = 0\r\n    virtualTable.style.left = 0\r\n    virtualTable.style.clip = 'rect(0,0,0,0)'\r\n    let preParentSign = ''\r\n    let virtualTr = null\r\n    selectedTds.forEach((selectedCell) => {\r\n      const { domNode, parent } = selectedCell\r\n      const currentParentSign = parent.domNode.getAttribute('data-row')\r\n      const rowspan = domNode.firstChild.dataset.rowspan\r\n      const colspan = domNode.firstChild.dataset.colspan\r\n      const row = domNode.firstChild.dataset.row\r\n      const cell = domNode.firstChild.dataset.cell\r\n\r\n      selectedCell.dataCell = cell\r\n      selectedCell.dataRow = row\r\n      selectedCell.dataColSpan = colspan\r\n      selectedCell.dataRowSpan = rowspan\r\n\r\n      if (currentParentSign !== preParentSign) {\r\n        if (preParentSign !== '') {\r\n          virtualTable.appendChild(virtualTr)\r\n        }\r\n        virtualTr = document.createElement('tr')\r\n        preParentSign = currentParentSign\r\n      }\r\n\r\n      const domNodeWidth = domNode.offsetWidth\r\n      const cloneNode = domNode.cloneNode(true)\r\n      cloneNode.setAttribute('width', domNodeWidth)\r\n\r\n      virtualTr.appendChild(cloneNode)\r\n    })\r\n    virtualTable.appendChild(virtualTr)\r\n    return virtualTable\r\n  }\r\n\r\n  setCopyRange(selectedNodes) {\r\n    const range = document.createRange()\r\n    const windowSelectionRange = window.getSelection()\r\n    range.selectNodeContents(selectedNodes)\r\n    windowSelectionRange.removeAllRanges()\r\n    windowSelectionRange.addRange(range)\r\n  }\r\n\r\n  groupTableCell(selectedTds) {\r\n    const rowGroup = []\r\n    let dataRow = ''\r\n    let preDataRow = ''\r\n    let index = 0\r\n    selectedTds.forEach((tableCell) => {\r\n      dataRow = tableCell.parent.domNode.getAttribute('data-row')\r\n\r\n      if (dataRow !== preDataRow) {\r\n        if (preDataRow !== '') {\r\n          index++\r\n        }\r\n        rowGroup[index] = []\r\n        preDataRow = dataRow\r\n      }\r\n\r\n      rowGroup[index].push(tableCell)\r\n    })\r\n    return rowGroup\r\n  }\r\n}\r\n\r\nfunction getColToolCellIndexByBoundary(cells, boundary, conditionFn, container) {\r\n  return cells.reduce((findIndex, cell) => {\r\n    const cellRect = getRelativeRect(cell.getBoundingClientRect(), container)\r\n    if (conditionFn(cellRect, boundary)) {\r\n      findIndex = cells.indexOf(cell)\r\n    }\r\n    return findIndex\r\n  }, false)\r\n}\r\n\r\nfunction getColToolCellIndexesByBoundary(cells, boundary, conditionFn, container) {\r\n  return cells.reduce((findIndexes, cell) => {\r\n    const cellRect = getRelativeRect(cell.getBoundingClientRect(), container)\r\n    if (conditionFn(cellRect, boundary)) {\r\n      findIndexes.push(cells.indexOf(cell))\r\n    }\r\n    return findIndexes\r\n  }, [])\r\n}\r\n\r\nfunction checkAndGetViewPointChange(parentContainer: HTMLElement, left: number, top: number) {\r\n  if (!parentContainer) {\r\n    return {\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n    }\r\n  }\r\n  // 模拟一个元素测预测位置和最终位置是否符合，如果不符合则是有transform等造成的偏移\r\n  const testEl = document.createElement('div')\r\n  css(testEl, {\r\n    opacity: '0',\r\n    position: 'fixed',\r\n    left: `${left}px`,\r\n    top: `${top}px`,\r\n    width: '1px',\r\n    height: '1px',\r\n    zIndex: '-999999',\r\n  })\r\n  parentContainer.appendChild(testEl)\r\n  const testElPosition = testEl.getBoundingClientRect()\r\n  parentContainer.removeChild(testEl)\r\n  return {\r\n    offsetX: testElPosition.left - left,\r\n    offsetY: testElPosition.top - top,\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
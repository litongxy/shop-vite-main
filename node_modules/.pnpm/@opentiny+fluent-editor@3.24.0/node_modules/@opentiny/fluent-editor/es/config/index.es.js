import { isNullOrUndefined } from "./editor.utils.es.js";
import { getEventComposedPath, hadProtocol, hexToRgbA, imageFileToUrl, imageUrlToFile, insideTable, isInside, isPureIE, omit, replaceDeltaImage, sanitize, splitWithBreak } from "./editor.utils.es.js";
import { UNDO_ICON, REDO_ICON, CLEAN_ICON, BOLD_ICON, ITALIC_ICON, UNDERLINE_ICON, STRIKE_ICON, COLOR_ICON, TRIANGLE_DOWN_ICON, BACKGROUND_COLOR_ICON, ALIGN_LEFT_ICON, ALIGN_CENTER_ICON, ALIGN_RIGHT_ICON, LIST_UNORDERED_ICON, LIST_ORDERED_ICON, LIST_CHECK_ICON, CODE_ICON, CODE_BLOCK_ICON, BLOCKQUOTE_ICON, IMAGE_ICON, FILE_ICON, TABLE_ICON, LINK_ICON, GLOBAL_LINK_ICON, FULLSCREEN_ICON, FULLSCREEN_EXIT_ICON, EMOJI_ICON, HELP_ICON, SCREENSHOT_ICON, FORMAT_PAINTER_ICON } from "./icons.config.es.js";
import { AUDIO_VIDEO_UPLOADER_MIME_TYPES, BIG_DELTA_LIMIT, CHANGE_LANGUAGE_EVENT, COMPRESSED_UPLOADER_MIME_TYPES, DOC_UPLOADER_MIME_TYPES, FILE_UPLOADER_MIME_TYPES, IMAGE_UPLOADER_MIME_TYPES, LANG_CONF, OTHER_FILE_UPLOADER_MIME_TYPES, PPT_UPLOADER_MIME_TYPES, XSL_UPLOADER_MIME_TYPES, defaultLanguage } from "./editor.config.es.js";
const ICONS_CONFIG = {
  "undo": UNDO_ICON,
  "redo": REDO_ICON,
  "clean": CLEAN_ICON,
  "bold": BOLD_ICON,
  "italic": ITALIC_ICON,
  "underline": UNDERLINE_ICON,
  "strike": STRIKE_ICON,
  "font": "",
  "size": "",
  "color": `<span class="ql-color-inner">
    ${COLOR_ICON}
    ${TRIANGLE_DOWN_ICON}
    <span class="current-color-line"></span>
  </span>`,
  "background": `<span class="ql-color-inner">
    ${BACKGROUND_COLOR_ICON}
    ${TRIANGLE_DOWN_ICON}
    <span class="current-color-line color-line-background"></span>
  </span>`,
  "align": {
    "": ALIGN_LEFT_ICON,
    "center": ALIGN_CENTER_ICON,
    "right": ALIGN_RIGHT_ICON
  },
  "list": {
    bullet: LIST_UNORDERED_ICON,
    ordered: LIST_ORDERED_ICON,
    check: LIST_CHECK_ICON
  },
  "code": CODE_ICON,
  "code-block": CODE_BLOCK_ICON,
  "blockquote": BLOCKQUOTE_ICON,
  "image": IMAGE_ICON,
  "file": FILE_ICON,
  "better-table": TABLE_ICON,
  "link": LINK_ICON,
  "global-link": GLOBAL_LINK_ICON,
  "fullscreen": FULLSCREEN_ICON,
  "fullscreen-exit": FULLSCREEN_EXIT_ICON,
  "emoji": EMOJI_ICON,
  "help": HELP_ICON,
  "screenshot": SCREENSHOT_ICON,
  "format-painter": FORMAT_PAINTER_ICON
};
function inputFile(type, accept) {
  const defaultMIMETypes = this.quill.uploader.options[type].join(", ");
  const mimeTypes = accept || defaultMIMETypes;
  let fileInput = this.container.querySelector(`input.ql-${type}[type=file]`);
  if (isNullOrUndefined(fileInput)) {
    fileInput = document.createElement("input");
    fileInput.classList.add(`ql-${type}`);
    fileInput.setAttribute("type", "file");
    fileInput.setAttribute("accept", mimeTypes);
    if (this.quill.uploader.options.enableMultiUpload === true || this.quill.uploader.options.enableMultiUpload.file && type === "file" || this.quill.uploader.options.enableMultiUpload.image && type === "image") {
      fileInput.setAttribute("multiple", "");
    }
    fileInput.addEventListener("change", () => {
      const range = this.quill.getSelection(true);
      this.quill.uploader.upload(range, fileInput.files, type === "file");
      fileInput.value = "";
    });
    this.container.appendChild(fileInput);
  }
  fileInput.click();
}
function getListValue(value, preListValue) {
  let curListValue = value;
  if (preListValue && preListValue === value) {
    curListValue = false;
  } else if (value === "check") {
    if (preListValue === "checked" || preListValue === "unchecked") {
      curListValue = false;
    } else {
      curListValue = "unchecked";
    }
  }
  return curListValue;
}
const namespace = "fe";
export {
  AUDIO_VIDEO_UPLOADER_MIME_TYPES,
  BIG_DELTA_LIMIT,
  CHANGE_LANGUAGE_EVENT,
  COMPRESSED_UPLOADER_MIME_TYPES,
  DOC_UPLOADER_MIME_TYPES,
  FILE_UPLOADER_MIME_TYPES,
  ICONS_CONFIG,
  IMAGE_UPLOADER_MIME_TYPES,
  LANG_CONF,
  OTHER_FILE_UPLOADER_MIME_TYPES,
  PPT_UPLOADER_MIME_TYPES,
  XSL_UPLOADER_MIME_TYPES,
  defaultLanguage,
  getEventComposedPath,
  getListValue,
  hadProtocol,
  hexToRgbA,
  imageFileToUrl,
  imageUrlToFile,
  inputFile,
  insideTable,
  isInside,
  isNullOrUndefined,
  isPureIE,
  namespace,
  omit,
  replaceDeltaImage,
  sanitize,
  splitWithBreak
};
//# sourceMappingURL=index.es.js.map

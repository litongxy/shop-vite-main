{"version":3,"file":"table-column-tool.cjs.js","sources":["../../../../src/table/modules/table-column-tool.ts"],"sourcesContent":["import Quill from 'quill'\r\nimport { CELL_MIN_HEIGHT, CELL_MIN_WIDTH, COL_TOOL_HEIGHT, PRIMARY_COLOR, ROW_TOOL_WIDTH } from '../table-config'\r\nimport { css } from '../utils'\r\n\r\nexport default class TableColumnTool {\r\n  table: any\r\n  quill: any\r\n  modulesContainer: any\r\n  domNode: any\r\n  columnCtrlPanel: HTMLDivElement\r\n  leftMask: HTMLDivElement\r\n  rowCtrlPanel: HTMLDivElement\r\n  activeToolCell: HTMLElement\r\n  oldRootScrollTop: any\r\n  constructor(table, quill, dom) {\r\n    if (!table) {\r\n      return null\r\n    }\r\n    this.table = table\r\n    this.quill = quill\r\n    this.modulesContainer = dom\r\n    this.domNode = null\r\n    this.oldRootScrollTop = this.quill.root.scrollTop\r\n\r\n    this.initColTool()\r\n\r\n    if (this.quill.root === this.quill.scrollingContainer) {\r\n      this.quill.root.addEventListener('scroll', this.handleQuillRootScroll.bind(this))\r\n    }\r\n  }\r\n\r\n  handleQuillRootScroll() {\r\n    if (this.domNode) {\r\n      this.domNode.style.marginTop = `${this.oldRootScrollTop - this.quill.root.scrollTop}px`\r\n    }\r\n  }\r\n\r\n  initColTool() {\r\n    const parent = this.quill.root.parentNode\r\n    const containerRect = parent.getBoundingClientRect()\r\n    const tableViewRect = this.table.parentNode.getBoundingClientRect()\r\n\r\n    this.domNode = document.createElement('div')\r\n    this.domNode.classList.add('qlbt-table-control-panel')\r\n\r\n    // 以下添加顺序影响遮罩顺序，勿改变\r\n    this.columnCtrlPanel = document.createElement('div')\r\n    this.columnCtrlPanel.classList.add('qlbt-column-control-panel')\r\n    this.domNode.appendChild(this.columnCtrlPanel)\r\n\r\n    this.leftMask = document.createElement('div')\r\n    this.leftMask.classList.add('qlbt-left-mask')\r\n    css(this.leftMask, { height: `${tableViewRect.height + 50}px` })\r\n    this.domNode.appendChild(this.leftMask)\r\n\r\n    this.rowCtrlPanel = document.createElement('div')\r\n    this.rowCtrlPanel.classList.add('qlbt-row-control-panel')\r\n    this.domNode.appendChild(this.rowCtrlPanel)\r\n\r\n    this.updateRowToolCells()\r\n    this.updateColToolCells()\r\n\r\n    this.modulesContainer.appendChild(this.domNode)\r\n    css(this.domNode, {\r\n      width: '100%',\r\n      height: `${COL_TOOL_HEIGHT}px`,\r\n      left: '0px',\r\n      top: `${tableViewRect.top - containerRect.top + parent.scrollTop - 25}px`,\r\n    })\r\n  }\r\n\r\n  createToolCell(isRow) {\r\n    // @ts-ignore\r\n    window.quillIsIntable = true\r\n    const toolCell = document.createElement('div')\r\n    const selector = document.createElement('div')\r\n    const resizeHolder = document.createElement('div')\r\n    if (isRow) {\r\n      toolCell.classList.add('qlbt-row-tool-cell')\r\n      selector.classList.add('qlbt-row-tool-cell-selector')\r\n      resizeHolder.classList.add('qlbt-row-tool-cell-holder')\r\n      css(toolCell, { width: `${ROW_TOOL_WIDTH}px` })\r\n    }\r\n    else {\r\n      toolCell.classList.add('qlbt-col-tool-cell')\r\n      selector.classList.add('qlbt-col-tool-cell-selector')\r\n      resizeHolder.classList.add('qlbt-col-tool-cell-holder')\r\n      css(toolCell, { height: `${COL_TOOL_HEIGHT}px` })\r\n    }\r\n    toolCell.appendChild(selector)\r\n    toolCell.appendChild(resizeHolder)\r\n    return toolCell\r\n  }\r\n\r\n  updateColToolCells() {\r\n    const tableContainer = Quill.find(this.table)\r\n    if (!tableContainer) {\r\n      return\r\n    }\r\n    const tableCols = tableContainer.colGroup().children\r\n    const tableColsNum = Math.max(Array.from(tableCols).length, tableContainer.colGroup().domNode.children.length)\r\n    const existCells: any = Array.from(this.columnCtrlPanel.querySelectorAll('.qlbt-col-tool-cell'))\r\n    const cellsNumber = Math.max(existCells.length, tableColsNum)\r\n\r\n    for (let index = 0; index < cellsNumber; index++) {\r\n      let col = tableCols.at(index)\r\n      let colWidth = 0\r\n      if (!col || col.domNode !== tableContainer.colGroup().domNode.children[index]) {\r\n        col = tableContainer.colGroup().domNode.children[index]\r\n        colWidth = col ? col.width : tableContainer.colGroup().domNode.children[index - 1].width\r\n      }\r\n      else {\r\n        colWidth = Number.parseInt(col.formats()[col.statics.blotName].width, 10)\r\n      }\r\n      // if cell already exist\r\n      let colToolCell = null\r\n      if (!existCells[index]) {\r\n        colToolCell = this.createToolCell(false)\r\n        this.columnCtrlPanel.appendChild(colToolCell)\r\n        this.addColCellSelectHandler(colToolCell)\r\n        this.addColCellHolderHandler(colToolCell)\r\n        // set tool cell min-width\r\n        css(colToolCell, {\r\n          'min-width': `${colWidth}px`,\r\n        })\r\n      }\r\n      else if (existCells[index] && index >= tableColsNum) {\r\n        existCells[index].remove()\r\n      }\r\n      else {\r\n        colToolCell = existCells[index]\r\n        // set tool cell min-width\r\n        css(colToolCell, {\r\n          'min-width': `${colWidth}px`,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  updateRowToolCells() {\r\n    const tableContainer = Quill.find(this.table)\r\n    if (!tableContainer) {\r\n      return\r\n    }\r\n    let tableRows = Array.from(tableContainer.domNode.querySelectorAll('tr'))\r\n    tableRows = tableRows.filter((tr: any) => tr.children.length)\r\n    const existCells: any = Array.from(this.rowCtrlPanel.querySelectorAll('.qlbt-row-tool-cell'))\r\n    const rowNumber = Math.max(existCells.length, tableRows.length)\r\n\r\n    for (let index = 0; index < rowNumber; index++) {\r\n      const row: any = tableRows[index]\r\n\r\n      // fix: 修复 IE11/Edge 下无法拿到 height 的问题\r\n      // IE11/Edge 下 height 会变成 'auto'\r\n      let computedHeight = row && getComputedStyle(row).height\r\n      if (computedHeight === 'auto') {\r\n        computedHeight = row.querySelector('td').style.height || '30px'\r\n      }\r\n\r\n      let rowHeight = row && Number.parseFloat(computedHeight)\r\n      if (rowHeight < CELL_MIN_HEIGHT) {\r\n        const rowChildHeight = row && row.childNodes[0] && Number.parseFloat(getComputedStyle(row.childNodes[0]).height)\r\n        rowHeight = rowChildHeight\r\n      }\r\n      // if cell already exist\r\n      let rowToolCell = null\r\n      if (!existCells[index]) {\r\n        rowToolCell = this.createToolCell(true)\r\n        this.rowCtrlPanel.appendChild(rowToolCell)\r\n        this.addRowCellSelectHandler(rowToolCell)\r\n        this.addRowCellHolderHandler(rowToolCell)\r\n        // set tool cell height, ff not support min-height\r\n        css(rowToolCell, { height: `${rowHeight}px` })\r\n      }\r\n      else if (existCells[index] && index >= tableRows.length) {\r\n        existCells[index].remove()\r\n      }\r\n      else {\r\n        rowToolCell = existCells[index]\r\n        css(rowToolCell, { height: `${rowHeight}px` })\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    // @ts-ignore\r\n    window.quillIsIntable = false\r\n    this.domNode.remove()\r\n    return null\r\n  }\r\n\r\n  addRowCellSelectHandler(cell) {\r\n    const selector = cell.querySelector('.qlbt-row-tool-cell-selector')\r\n\r\n    const handleClick = (e) => {\r\n      e.preventDefault()\r\n\r\n      const dom = e.target.parentNode\r\n      const domRect = dom.getBoundingClientRect()\r\n      const containerRect = this.quill.root.parentNode.getBoundingClientRect()\r\n      const tableRect = this.table.getBoundingClientRect()\r\n      const tableSelection = this.quill.getModule('better-table').tableSelection\r\n      tableSelection.boundary = {\r\n        x: tableRect.left - containerRect.left, // 表格左上角X轴坐标\r\n        x1: tableRect.left - containerRect.left + tableRect.width - 2, // 表格右上角X轴坐标\r\n        y: domRect.top - containerRect.top, // 表格左上角Y轴坐标\r\n        y1: domRect.top - containerRect.top + domRect.height - 1, // 表格右上角Y轴坐标\r\n        width: tableRect.width - 2,\r\n        height: domRect.height - 1,\r\n      }\r\n      tableSelection.selectedTds = tableSelection.computeSelectedTds()\r\n      tableSelection.repositionHelpLines()\r\n\r\n      dom.classList.add('qlbt-tool-cell-on')\r\n      this.activeToolCell = dom\r\n    }\r\n\r\n    selector.addEventListener('click', handleClick, false)\r\n  }\r\n\r\n  addRowCellHolderHandler(cell) {\r\n    const holder = cell.querySelector('.qlbt-row-tool-cell-holder')\r\n    let dragging = false\r\n    let y0 = 0\r\n    let y = 0\r\n    let delta = 0\r\n    let height0 = 0\r\n    // helpLine relation variable\r\n    let tableRect: any = {}\r\n    let cellRect: any = {}\r\n    let helpLine = null\r\n\r\n    const handleDrag = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (dragging) {\r\n        y = e.clientY\r\n\r\n        if (height0 + y - y0 >= CELL_MIN_HEIGHT) {\r\n          delta = y - y0\r\n        }\r\n        else {\r\n          delta = CELL_MIN_HEIGHT - height0\r\n        }\r\n\r\n        css(helpLine, {\r\n          top: `${cellRect.top + cellRect.height + delta}px`,\r\n        })\r\n      }\r\n    }\r\n\r\n    const handleMouseup = (e) => {\r\n      e.preventDefault()\r\n\r\n      const existCells = Array.from(this.domNode.querySelectorAll('.qlbt-row-tool-cell'))\r\n      const rowIndex = existCells.indexOf(cell)\r\n      const rows: any = Array.from(this.table.querySelectorAll('tr'))\r\n      const tds = Array.from(rows[rowIndex].childNodes)\r\n      const hasContentTd: any = tds.find((td: any) => td.getAttribute('rowspan') === '1' && td.textContent !== '\\n')\r\n\r\n      if (dragging) {\r\n        let tdHeight = `${height0 + delta}px`\r\n        if (hasContentTd) {\r\n          tds.forEach((td: any) => td.getAttribute('rowspan') === '1' && css(td, { height: tdHeight }))\r\n          const currentHeight = getComputedStyle(hasContentTd).height\r\n          tdHeight = (Number.parseInt(currentHeight, 10) > height0 + delta && currentHeight) || tdHeight\r\n        }\r\n        css(cell, { height: tdHeight })\r\n        tds.forEach((td: any) => td.getAttribute('rowspan') === '1' && css(td, { height: tdHeight }))\r\n\r\n        const tableViewRect = this.table.parentNode.getBoundingClientRect()\r\n        css(this.leftMask, { height: `${tableViewRect.height + 50}px` })\r\n\r\n        y0 = 0\r\n        y = 0\r\n        delta = 0\r\n        height0 = 0\r\n        dragging = false\r\n        holder.classList.remove('dragging')\r\n      }\r\n\r\n      this.quill.root.parentNode.removeEventListener('mousemove', handleDrag, false)\r\n      document.removeEventListener('mouseup', handleMouseup, false)\r\n      tableRect = {}\r\n      cellRect = {}\r\n      helpLine.remove()\r\n      helpLine = null\r\n\r\n      const betterTableModule = this.quill.getModule('better-table')\r\n      const tableScrollBar = betterTableModule.tableScrollBar\r\n      tableScrollBar.resetTableHeight(this.table)\r\n\r\n      // fix: 拖动滚动条时修正选区位置\r\n      const tableSelection = betterTableModule.tableSelection\r\n      if (tableSelection && tableSelection.selectedTds.length) {\r\n        tableSelection.refreshHelpLinesPosition()\r\n      }\r\n    }\r\n\r\n    const handleMousedown = (e) => {\r\n      e.preventDefault()\r\n\r\n      this.quill.root.parentNode.addEventListener('mousemove', handleDrag, false)\r\n      document.addEventListener('mouseup', handleMouseup, false)\r\n\r\n      tableRect = this.table.getBoundingClientRect()\r\n      const tableViewRect = this.table.parentNode.getBoundingClientRect()\r\n      const width = (tableRect.width > tableViewRect.width && tableViewRect.width) || tableRect.width\r\n      cellRect = cell.getBoundingClientRect()\r\n      helpLine = document.createElement('div')\r\n      css(helpLine, {\r\n        position: 'fixed',\r\n        top: `${cellRect.top + cellRect.height}px`,\r\n        left: `${cellRect.left}px`,\r\n        zIndex: '100',\r\n        width: `${width + ROW_TOOL_WIDTH + 9}px`,\r\n        height: '1px',\r\n        backgroundColor: PRIMARY_COLOR,\r\n      })\r\n\r\n      this.quill.root.parentNode.appendChild(helpLine)\r\n      dragging = true\r\n      y0 = e.clientY\r\n      height0 = cellRect.height\r\n      holder.classList.add('dragging')\r\n    }\r\n\r\n    holder.addEventListener('mousedown', handleMousedown, false)\r\n  }\r\n\r\n  addColCellSelectHandler(cell) {\r\n    // 上方列宽控制条\r\n\r\n    const selector = cell.querySelector('.qlbt-col-tool-cell-selector')\r\n\r\n    const handleClick = (e) => {\r\n      e.preventDefault()\r\n\r\n      const dom = e.target.parentNode\r\n      const domRect = dom.getBoundingClientRect()\r\n      const containerRect = this.quill.root.parentNode.getBoundingClientRect()\r\n      const tableRect = this.table.getBoundingClientRect()\r\n      const tableSelection = this.quill.getModule('better-table').tableSelection\r\n      tableSelection.boundary = {\r\n        x: domRect.left - containerRect.left - 1,\r\n        x1: domRect.left - containerRect.left + domRect.width - 2,\r\n        y: tableRect.top - containerRect.top,\r\n        y1: tableRect.top - containerRect.top + tableRect.height - 2,\r\n        width: domRect.width,\r\n        height: tableRect.height - 2,\r\n      }\r\n      tableSelection.selectedTds = tableSelection.computeSelectedTds()\r\n      tableSelection.repositionHelpLines()\r\n\r\n      dom.classList.add('qlbt-tool-cell-on')\r\n      this.activeToolCell = dom\r\n    }\r\n    selector.addEventListener('click', handleClick, false)\r\n  }\r\n\r\n  addColCellHolderHandler(cell) {\r\n    const tableContainer = Quill.find(this.table)\r\n    const holder = cell.querySelector('.qlbt-col-tool-cell-holder')\r\n    let dragging = false\r\n    let x0 = 0\r\n    let x = 0\r\n    let delta: any = 0\r\n    let width0 = 0\r\n    // helpLine relation variable\r\n    let tableRect: any = {}\r\n    let scrollContainerRect = null\r\n    let cellRect: any = {}\r\n    let helpLine = null\r\n\r\n    const handleDrag = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (dragging) {\r\n        x = e.clientX\r\n\r\n        if (width0 + x - x0 >= CELL_MIN_WIDTH) {\r\n          delta = x - x0\r\n        }\r\n        else {\r\n          delta = CELL_MIN_WIDTH - width0\r\n        }\r\n        let left = cellRect.left + cellRect.width - 1 + delta\r\n        if (scrollContainerRect) {\r\n          left -= scrollContainerRect.left\r\n        }\r\n\r\n        css(helpLine, {\r\n          left: `${left}px`,\r\n        })\r\n      }\r\n    }\r\n\r\n    const handleMouseup = (e) => {\r\n      e.preventDefault()\r\n\r\n      const existCells = Array.from(this.domNode.querySelectorAll('.qlbt-col-tool-cell'))\r\n      const colIndex = existCells.indexOf(cell)\r\n      let colBlot = tableContainer.colGroup().children.at(colIndex)\r\n      if (!colBlot || colBlot.domNode !== tableContainer.colGroup().domNode.children[colIndex]) {\r\n        colBlot = tableContainer.colGroup().domNode.children[colIndex]\r\n      }\r\n      if (dragging) {\r\n        // fix: 防止 colWidth 是小数\r\n        const colWidth = Number.parseInt(width0 + delta, 10)\r\n        if (colBlot.format) {\r\n          colBlot.format('width', colWidth)\r\n        }\r\n        else {\r\n          colBlot.width = colWidth\r\n        }\r\n\r\n        css(cell, { 'min-width': `${colWidth}px` })\r\n\r\n        x0 = 0\r\n        x = 0\r\n        delta = 0\r\n        width0 = 0\r\n        dragging = false\r\n        holder.classList.remove('dragging')\r\n      }\r\n\r\n      this.quill.root.parentNode.removeEventListener('mousemove', handleDrag, false)\r\n      document.removeEventListener('mouseup', handleMouseup, false)\r\n      tableRect = {}\r\n      scrollContainerRect = null\r\n      cellRect = {}\r\n      helpLine.remove()\r\n      helpLine = null\r\n      tableContainer.updateTableWidth()\r\n\r\n      setTimeout(() => {\r\n        this.updateRowToolCells()\r\n        const betterTableModule = this.quill.getModule('better-table')\r\n        const tableScrollBar = betterTableModule.tableScrollBar\r\n        tableScrollBar.updateScrollBar()\r\n        // fix: 拖动滚动条时修正选区位置\r\n        const tableSelection = betterTableModule.tableSelection\r\n        if (tableSelection && tableSelection.selectedTds.length) {\r\n          tableSelection.refreshHelpLinesPosition()\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleMousedown = (e) => {\r\n      e.preventDefault()\r\n\r\n      this.quill.root.parentNode.addEventListener('mousemove', handleDrag, false)\r\n      document.addEventListener('mouseup', handleMouseup, false)\r\n\r\n      tableRect = this.table.getBoundingClientRect()\r\n      cellRect = cell.getBoundingClientRect()\r\n\r\n      let positionValue = 'fixed'\r\n      let top = cellRect.top\r\n      let left = cellRect.left + cellRect.width - 1\r\n      if (this.quill.root === this.quill.scrollingContainer) {\r\n        positionValue = 'absolute'\r\n        scrollContainerRect = this.quill.root.getBoundingClientRect()\r\n        top -= scrollContainerRect.top\r\n        left -= scrollContainerRect.left\r\n      }\r\n\r\n      helpLine = document.createElement('div')\r\n      css(helpLine, {\r\n        position: positionValue,\r\n        top: `${top}px`,\r\n        left: `${left}px`,\r\n        zIndex: '100',\r\n        height: `${tableRect.height + COL_TOOL_HEIGHT + 8}px`,\r\n        width: '1px',\r\n        backgroundColor: PRIMARY_COLOR,\r\n      })\r\n\r\n      this.quill.root.parentNode.appendChild(helpLine)\r\n      dragging = true\r\n      x0 = e.clientX\r\n      width0 = cellRect.width\r\n      holder.classList.add('dragging')\r\n    }\r\n\r\n    holder.addEventListener('mousedown', handleMousedown, false)\r\n  }\r\n\r\n  colToolCells() {\r\n    return Array.from(this.domNode.querySelectorAll('.qlbt-col-tool-cell'))\r\n  }\r\n}\r\n"],"names":["css","COL_TOOL_HEIGHT","ROW_TOOL_WIDTH","index","CELL_MIN_HEIGHT","PRIMARY_COLOR","CELL_MIN_WIDTH"],"mappings":"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"}
{"version":3,"file":"better-table.cjs.js","sources":["../../../src/table/better-table.ts"],"sourcesContent":["import Quill from 'quill'\r\nimport {\r\n  getEventComposedPath,\r\n  insideTable,\r\n  isNullOrUndefined,\r\n  isPureIE,\r\n} from '../config/editor.utils'\r\nimport Header from './formats/header'\r\nimport List from './formats/list'\r\nimport {\r\n  cellId,\r\n  rowId,\r\n  TableBody,\r\n  TableCell,\r\n  TableCellLine,\r\n  TableCol,\r\n  TableColGroup,\r\n  TableContainer,\r\n  TableRow,\r\n  TableViewWrapper,\r\n} from './formats/table'\r\nimport TableColumnTool from './modules/table-column-tool'\r\nimport TableOperationMenu from './modules/table-operation-menu'\r\nimport TableScrollBar from './modules/table-scroll-bar'\r\nimport TableSelection from './modules/table-selection'\r\nimport TableSelector from './modules/table-selector'\r\nimport { css } from './utils'\r\n// import table node matchers\r\nimport {\r\n  matchHeader,\r\n  matchInline,\r\n  matchList,\r\n  matchMentionLink,\r\n  matchTable,\r\n  matchTableCell,\r\n  matchTableHeader,\r\n  matchTableRow,\r\n  matchWordShapeImage,\r\n} from './utils/node-matchers'\r\n\r\nconst Block = Quill.imports['blots/block']\r\nconst Delta = Quill.imports.delta\r\nconst Module = Quill.imports['core/module']\r\n\r\n// @dynamic\r\nclass BetterTable extends Module {\r\n  static keyboardBindings: any\r\n  isComposition: boolean\r\n  quill: any\r\n  table: any\r\n  modulesContainer: any\r\n  tableSelection: any\r\n  subscriber: any\r\n  tableOperationMenu: any\r\n  columnTool: TableColumnTool\r\n  tableScrollBar: TableScrollBar\r\n  tableSelector: TableSelector\r\n  isTableSelectorVisible: boolean\r\n  tableSelectorWrapper: HTMLDivElement\r\n\r\n  static register() {\r\n    Quill.register(TableCol, true)\r\n    Quill.register(TableColGroup, true)\r\n    Quill.register(TableCellLine, true)\r\n    Quill.register(TableCell, true)\r\n    Quill.register(TableRow, true)\r\n    Quill.register(TableBody, true)\r\n    Quill.register(TableContainer, true)\r\n    Quill.register(TableViewWrapper, true)\r\n    // register customized Header, overwriting quill built-in Header\r\n    Quill.register('formats/header', Header, true)\r\n    // register customized List, overwriting quill built-in Header\r\n    Quill.register('formats/list', List, true)\r\n  }\r\n\r\n  constructor(quill, options) {\r\n    super(quill, options)\r\n\r\n    // handle click on quill-better-table\r\n    this.isComposition = false\r\n    this.isTableSelectorVisible = false\r\n    this.quill.root.addEventListener('mousedown', event => this.handleMouseDown(event, quill), false)\r\n    this.quill.root.addEventListener('compositionend', () => this.handleCompositionend(quill), false)\r\n    this.quill.root.addEventListener('compositionstart', () => this.handleCompositionstart(quill), false)\r\n    this.quill.root.addEventListener('keypress', event => this.handleKeyDown(event, quill), false)\r\n\r\n    // handle right click on quill-better-table\r\n    this.quill.root.addEventListener(\r\n      'contextmenu',\r\n      (evt) => {\r\n        if (!this.table) return true\r\n        evt.preventDefault()\r\n\r\n        // bugfix: evt.path is undefined in Safari, FF, Micro Edge\r\n        const path = getEventComposedPath(evt)\r\n        if (!path || path.length <= 0) return\r\n\r\n        const tableNode = path.filter((node) => {\r\n          return (\r\n            node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('quill-better-table')\r\n          )\r\n        })[0]\r\n\r\n        const rowNode = path.filter((node) => {\r\n          return node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row')\r\n        })[0]\r\n\r\n        const cellNode = path.filter((node) => {\r\n          return node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row')\r\n        })[0]\r\n\r\n        const isTargetCellSelected = this.tableSelection.selectedTds\r\n          .map(tableCell => tableCell.domNode)\r\n          .includes(cellNode)\r\n\r\n        if (this.tableSelection.selectedTds.length <= 0 || !isTargetCellSelected) {\r\n          this.tableSelection.setSelection(cellNode.getBoundingClientRect(), cellNode.getBoundingClientRect())\r\n        }\r\n\r\n        if (this.tableOperationMenu) {\r\n          this.tableOperationMenu = this.tableOperationMenu.destroy()\r\n        }\r\n\r\n        if (tableNode) {\r\n          this.tableOperationMenu = new TableOperationMenu(\r\n            {\r\n              table: tableNode,\r\n              row: rowNode,\r\n              cell: cellNode,\r\n              left: evt.x + 15,\r\n              top: evt.y,\r\n            },\r\n            quill,\r\n            options.operationMenu,\r\n          )\r\n        }\r\n      },\r\n      false,\r\n    )\r\n\r\n    // add keyboard binding：Backspace\r\n    // prevent user hits backspace to delete table cell\r\n    quill.keyboard.addBinding({ key: 'Backspace' }, {}, (range, context) => {\r\n      if (range.index === 0 || this.quill.getLength() <= 1) return true\r\n      if (context.offset === 0 && range.length === 0) {\r\n        const [prev] = this.quill.getLine(range.index - 1)\r\n        const [line] = this.quill.getLine(range.index)\r\n        if (!isNullOrUndefined(prev)) {\r\n          if (prev.statics.blotName === 'table-cell-line' && line.statics.blotName !== 'table-cell-line') {\r\n            const betterTableModule = this.quill.getModule('better-table')\r\n            let tableBlot\r\n            try {\r\n              tableBlot = prev.parent.parent.parent.parent\r\n            }\r\n            catch (_e) { }\r\n            if (tableBlot && tableBlot.domNode !== betterTableModule.table) {\r\n              betterTableModule.hideTableTools()\r\n              tableBlot.remove()\r\n              this.quill.update(Quill.sources.USER)\r\n            }\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    })\r\n    // since only one matched bindings callback will execute.\r\n    // expected my binding callback execute first\r\n    // I changed the order of binding callbacks\r\n    const thisBinding = quill.keyboard.bindings.Backspace.pop()\r\n    quill.keyboard.bindings.Backspace.splice(1, 0, thisBinding)\r\n\r\n    // add Matchers to match and render quill-better-table for initialization\r\n    // or pasting\r\n    quill.clipboard.addMatcher('td', matchTableCell)\r\n    quill.clipboard.addMatcher('th', matchTableHeader)\r\n    quill.clipboard.addMatcher('table', matchTable)\r\n    quill.clipboard.addMatcher('h1, h2, h3, h4, h5, h6', matchHeader)\r\n    quill.clipboard.addMatcher('ol, ul', matchList)\r\n    quill.clipboard.addMatcher('span', matchMentionLink)\r\n    quill.clipboard.addMatcher('v:imageData', matchWordShapeImage)\r\n    quill.clipboard.addMatcher(Node.ELEMENT_NODE, matchInline)\r\n\r\n    // remove matcher for tr tag\r\n    quill.clipboard.matchers = quill.clipboard.matchers.filter((matcher) => {\r\n      return matcher[0] !== 'tr'\r\n    })\r\n\r\n    // fix: 处理空<tr>标签被忽略的情况\r\n    quill.clipboard.addMatcher('tr', matchTableRow)\r\n\r\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\r\n      const tableContainer = Quill.find(this.table)\r\n      if (!tableContainer) {\r\n        this.hideTableTools()\r\n      }\r\n    })\r\n\r\n    this.quill.on(Quill.events.SELECTION_CHANGE, (range, _oldRange, source) => {\r\n      if (!range) return\r\n      const selectionStart = range.index\r\n      const selectionEnd = range.index + range.length\r\n      if (source === Quill.sources.USER) {\r\n        const tables = this.quill.root.getElementsByTagName('table')\r\n        if (tables && tables.length) {\r\n          [].forEach.call(tables, (table) => {\r\n            const tableContainer = Quill.find(table)\r\n            if (tableContainer) {\r\n              const tableStart = tableContainer.offset(this.quill.scroll)\r\n              const tableEnd = tableStart + tableContainer.length()\r\n              // @ts-ignore\r\n              const classes = Array.from(table.parentNode.classList)\r\n\r\n              if (selectionStart <= tableStart && tableEnd <= selectionEnd) {\r\n                // @ts-ignore\r\n                table.parentNode.classList.add('quill-better-table-selected')\r\n              }\r\n              else if (classes.includes('quill-better-table-selected')) {\r\n                // @ts-ignore\r\n                table.parentNode.classList.remove('quill-better-table-selected')\r\n              }\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n    this.initTableSelector()\r\n  }\r\n\r\n  initTableSelector() {\r\n    // feat table selector ,在better-table按钮上套一层容器，往容器添加table selector\r\n    const toolbar = this.quill.getModule('toolbar')\r\n    if (!toolbar) return\r\n    const tableButton = toolbar.container.querySelector('.ql-better-table')\r\n    if (!tableButton) return\r\n    const tableSelectorWrapper = this.tableSelectorWrapperCreator()\r\n    tableButton.parentNode.insertBefore(tableSelectorWrapper, tableButton)\r\n    tableSelectorWrapper.appendChild(tableButton)\r\n    this.tableSelectorWrapper = tableSelectorWrapper\r\n    tableSelectorWrapper.addEventListener('mouseenter', this.handleTableSelectorHover.bind(this), false)\r\n    tableSelectorWrapper.addEventListener('mouseleave', this.handleTableSelectorMouseOut.bind(this), false)\r\n  }\r\n\r\n  tableSelectorWrapperCreator() {\r\n    const wrapper = document.createElement('div')\r\n    wrapper.className = 'ql-better-table-wrapper'\r\n    const cssContent = {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      boxSizing: 'border-box',\r\n    }\r\n    css(wrapper, cssContent)\r\n    return wrapper\r\n  }\r\n\r\n  handleMouseDown(evt, quill) {\r\n    // bugfix: evt.path is undefined in Safari, FF, Micro Edge\r\n    const path = getEventComposedPath(evt)\r\n    if (!path || path.length <= 0) return\r\n    const tableNode = path.filter((node) => {\r\n      return node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('quill-better-table')\r\n    })[0]\r\n    if (tableNode) {\r\n      tableNode.parentNode.classList.remove('quill-better-table-selected')\r\n      // current table clicked\r\n      if (this.table === tableNode) return\r\n      // other table clicked\r\n      if (this.table) {\r\n        this.hideTableTools()\r\n      }\r\n      if (!quill.options.readOnly) { // not show table tool in readonly mode\r\n        this.showTableTools(tableNode, quill)\r\n      }\r\n    }\r\n    else if (this.table) {\r\n      // other clicked\r\n      this.hideTableTools()\r\n    }\r\n  }\r\n\r\n  handleKeyDown(evt, quill) {\r\n    const key = evt.key\r\n    const range = quill.getSelection()\r\n    if (this.isComposition || !range) return\r\n    const [col] = quill.getLine(range.index)\r\n    const [td] = quill.getLine(range.index - 1)\r\n    if (key && key !== 'Delete' && col && range) {\r\n      if (col.statics.blotName === 'table-col') {\r\n        const betterTableModule = this.quill.getModule('better-table')\r\n        betterTableModule.hideTableTools()\r\n        quill.insertText(range.index - 1, '\\n', Quill.sources.USER)\r\n        quill.setSelection(range.index, 0, Quill.sources.USER)\r\n      }\r\n      else if (td && td.statics.blotName === 'table-cell-line' && col.statics.blotName === 'block') {\r\n        quill.insertText(range.index, '\\n', Quill.sources.USER)\r\n        quill.setSelection(range.index, 0, Quill.sources.USER)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCompositionstart(quill) {\r\n    this.isComposition = true\r\n    const range = quill.getSelection()\r\n    const [col] = quill.getLine(range.index)\r\n    const [td] = quill.getLine(range.index - 1)\r\n    if (col && range) {\r\n      if (col.statics.blotName === 'table-col') {\r\n        const betterTableModule = this.quill.getModule('better-table')\r\n        betterTableModule.hideTableTools()\r\n        quill.insertText(range.index - 1, '\\n\\t', Quill.sources.USER)\r\n        quill.setSelection(range.index, 0, Quill.sources.USER)\r\n      }\r\n      else if (td && td.statics.blotName === 'table-cell-line' && col.statics.blotName === 'block') {\r\n        quill.setSelection(range.index, 0, Quill.sources.USER)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCompositionend(quill) {\r\n    // fix: 解决在空行行首用中文输入法输入字符，然后按退格导致插入多余空行的问题\r\n    const range = quill.getSelection()\r\n    const [line] = quill.getLine(range.index)\r\n    const domNode = line.domNode\r\n    const isInParagraph = domNode.nodeName === 'P'\r\n    const isInTableCell = line.statics.blotName === 'table-cell-line'\r\n    if ((isInParagraph || isInTableCell)\r\n      && domNode.childNodes.length > 1\r\n      && domNode.childNodes[0].nodeName === 'BR') {\r\n      domNode.childNodes[0].remove()\r\n    }\r\n\r\n    if (isPureIE && line instanceof Block) {\r\n      // 设置光标位置防止跳入下一行\r\n      quill.setSelection(range.index, 0, Quill.sources.SILENT)\r\n    }\r\n\r\n    this.isComposition = false\r\n  }\r\n\r\n  // 触发table selector\r\n  handleTableSelectorHover() {\r\n    if (this.isTableSelectorVisible) return\r\n    if (!this.tableSelectorWrapper) return\r\n    this.isTableSelectorVisible = true\r\n    this.tableSelector = new TableSelector({\r\n      onSelect: (rows, cols) => this.insertTable(rows, cols),\r\n    })\r\n    this.tableSelectorWrapper.appendChild(this.tableSelector.container)\r\n    const buttonRect = this.tableSelectorWrapper.getBoundingClientRect()\r\n    this.tableSelector.show(\r\n      0,\r\n      buttonRect.height,\r\n    )\r\n  }\r\n\r\n  // table selector 鼠标离开\r\n  handleTableSelectorMouseOut() {\r\n    if (this.tableSelector) {\r\n      this.tableSelector.destroy()\r\n    }\r\n    this.tableSelector = null\r\n    this.isTableSelectorVisible = false\r\n  }\r\n\r\n  getTable(range = this.quill.getSelection()) {\r\n    if (isNullOrUndefined(range)) return [null, null, null, -1]\r\n    const [cellLine, offset] = this.quill.getLine(range.index)\r\n    if (isNullOrUndefined(cellLine) || cellLine.statics.blotName !== TableCellLine.blotName) {\r\n      return [null, null, null, -1]\r\n    }\r\n    const cell = cellLine.tableCell()\r\n    const row = cell.row()\r\n    const table = row.table()\r\n    return [table, row, cell, offset]\r\n  }\r\n\r\n  insertTable(rows, columns) {\r\n    const range = this.quill.getSelection(true)\r\n    const isInsideTable = insideTable(range, this.quill)\r\n    if (isNullOrUndefined(range) || isInsideTable) return\r\n    // let currentBlot = this.quill.getLeaf(range.index)[0]\r\n    // let nextBlot = this.quill.getLeaf(range.index + 1)[0]\r\n    let delta = new Delta().retain(range.index)\r\n\r\n    delta.insert('\\n')\r\n    // insert table column\r\n    delta = new Array(columns).fill('\\n').reduce((memo, text) => {\r\n      memo.insert(text, { 'table-col': true })\r\n      return memo\r\n    }, delta)\r\n    // insert table cell line with empty line\r\n    delta = new Array(rows).fill(0).reduce((memo) => {\r\n      const tableRowId = rowId()\r\n      return new Array(columns).fill('\\n').reduce((op, text) => {\r\n        op.insert(text, { 'table-cell-line': { row: tableRowId, cell: cellId() } })\r\n        return op\r\n      }, memo)\r\n    }, delta)\r\n\r\n    const [col] = this.quill.getLine(range.index)\r\n    if (col && col.statics.blotName === 'table-col') {\r\n      delta.insert('\\n')\r\n    }\r\n\r\n    this.quill.updateContents(delta, Quill.sources.USER)\r\n\r\n    // feature: 新增表格后首格自动激活编辑状态，initEvent兼容IE\r\n    const [cellLine] = this.quill.getLine(range.index + columns + 1)\r\n    if (cellLine) {\r\n      const cell = cellLine.tableCell()\r\n      const td = cell.domNode\r\n      const mousedownEvent = document.createEvent('MouseEvent')\r\n      const mouseupEvent = document.createEvent('MouseEvent')\r\n      const keyEvent = document.createEvent('Event')\r\n      mousedownEvent.initEvent('mousedown', true, false)\r\n      mouseupEvent.initEvent('mouseup', true, false)\r\n      keyEvent.initEvent('keypress', true, false)\r\n      td.dispatchEvent(mousedownEvent)\r\n      td.dispatchEvent(mouseupEvent)\r\n      td.dispatchEvent(keyEvent)\r\n      this.tableSelection.endTd = td\r\n    }\r\n  }\r\n\r\n  showTableTools(table, quill) {\r\n    this.table = table\r\n    this.modulesContainer = document.createElement('div')\r\n    this.modulesContainer.classList.add('qlbt-modules-container')\r\n    // fix:表格容器插入时获取ql-tooltip容器，用insertBefore插入到它前面，避免遮挡链接浮窗\r\n    const linkContainer = this.quill.root.parentNode.querySelector('.ql-tooltip ')\r\n    this.quill.root.parentNode.insertBefore(this.modulesContainer, linkContainer)\r\n    this.tableSelection = new TableSelection(table, quill, this.modulesContainer)\r\n    this.columnTool = new TableColumnTool(table, quill, this.modulesContainer)\r\n    this.tableScrollBar = new TableScrollBar(table, quill, this.modulesContainer)\r\n    let timeoutID\r\n    this.subscriber = () => {\r\n      clearTimeout(timeoutID)\r\n      timeoutID = setTimeout(this.hideTableTools, 300)\r\n    }\r\n    window.addEventListener('resize', this.subscriber, false)\r\n  }\r\n\r\n  hideTableTools() {\r\n    if (this.columnTool) {\r\n      this.columnTool.destroy()\r\n    }\r\n    if (this.tableSelection) {\r\n      this.tableSelection.destroy()\r\n    }\r\n    if (this.tableOperationMenu) {\r\n      this.tableOperationMenu.destroy()\r\n    }\r\n    if (this.tableScrollBar) {\r\n      this.tableScrollBar.destroy()\r\n    }\r\n    if (this.modulesContainer) {\r\n      this.modulesContainer.remove()\r\n    }\r\n    this.columnTool = null\r\n    this.tableSelection = null\r\n    this.tableOperationMenu = null\r\n    this.tableScrollBar = null\r\n    this.modulesContainer = null\r\n    this.table = null\r\n    if (this.subscriber) {\r\n      window.removeEventListener('resize', this.subscriber)\r\n    }\r\n  }\r\n}\r\n\r\nBetterTable.keyboardBindings = {\r\n  'line delete': {\r\n    key: 'Delete',\r\n    shiftKey: null,\r\n    format: { 'table-col': false, 'table-cell-line': false },\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler(range, context) {\r\n      // fix: 当光标在编辑器最前且之后为表格时按delete不执行操作\r\n      if (range.index === 0 && context.line.next && context.line.next.statics.blotName === 'table-view') {\r\n        const [p] = this.quill.getLine(range.index - 1)\r\n        const [col] = this.quill.getLine(range.index + 1)\r\n        if (p && p.statics.blotName === 'block' && col && col.statics.blotName === 'table-col') {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    },\r\n  },\r\n  'table-col enter': {\r\n    key: 'Enter',\r\n    shiftKey: null,\r\n    format: ['table-col'],\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler(range, context) {\r\n      if (context.offset === 0 && range.length === 0) {\r\n        const [col] = this.quill.getLine(range.index)\r\n        if (col && col.statics.blotName === 'table-col') {\r\n          const betterTableModule = this.quill.getModule('better-table')\r\n          betterTableModule.hideTableTools()\r\n          this.quill.insertText(range.index - 1, '\\n', Quill.sources.USER)\r\n          this.quill.setSelection(range.index, 0, Quill.sources.USER)\r\n        }\r\n      }\r\n    },\r\n  },\r\n  'table-col delete': {\r\n    key: 'Delete',\r\n    shiftKey: null,\r\n    format: ['table-col'],\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler(range, context) {\r\n      if (context.offset === 0 && range.length === 0) {\r\n        const [col] = this.quill.getLine(range.index)\r\n        if (col && col.statics.blotName === 'table-col') {\r\n          const betterTableModule = this.quill.getModule('better-table')\r\n          let tableBlot\r\n          try {\r\n            tableBlot = col.parent.parent.parent\r\n          }\r\n          catch (_e) { }\r\n          if (tableBlot && tableBlot.domNode !== betterTableModule.table) {\r\n            betterTableModule.hideTableTools()\r\n            tableBlot.remove()\r\n            this.quill.update(Quill.sources.USER)\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n  'table-col backspace': {\r\n    key: 'Backspace',\r\n    shiftKey: null,\r\n    format: ['table-col'],\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler() { },\r\n  },\r\n  'table-cell-line backspace': {\r\n    key: 'Backspace',\r\n    format: ['table-cell-line'],\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler(range) {\r\n      const [line] = this.quill.getLine(range.index)\r\n      // 移除原有对非table-cell-line的阻止条件，使table-cell-line前的list等内容可以被删除\r\n      if (!line.prev) {\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n  },\r\n  'table-cell-line delete': {\r\n    key: 'Delete',\r\n    format: ['table-cell-line'],\r\n    handler(range, _context) {\r\n      // 获取table-cell-line的索引和长度\r\n      const [line] = this.quill.getLine(range.index)\r\n      const index = this.quill.getIndex(line)\r\n      const length = line.length()\r\n      if (!line.next // 当无下一个元素且满足以下情况阻止删除操作\r\n        && ((!line.prev && length === 1) // 单元格内只有一个table-cell-line且无内容\r\n          || (range.index !== index && range.index + 1 >= index + length))) { // 光标在有内容的table-cell-line最后\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n  },\r\n  'table-cell-line enter': {\r\n    key: 'Enter',\r\n    shiftKey: null,\r\n    format: ['table-cell-line'],\r\n    handler(range, context) {\r\n      // fix：通过window的光标选区当前指向判断，如果为HTMLElement且为表格容器则定位至下一行\r\n      const node = window.getSelection().anchorNode\r\n      if (node instanceof HTMLDivElement && node.classList.contains('quill-better-table-wrapper')) {\r\n        this.quill.setSelection(range.index + 1, 0, Quill.sources.USER)\r\n        this.quill.focus()\r\n        return\r\n      }\r\n      // bugfix: a unexpected new line inserted when user compositionend with hitting Enter\r\n      if (this.quill.selection && this.quill.selection.composing) return\r\n      const Scope = Quill.imports.parchment.Scope\r\n      if (range.length > 0) {\r\n        this.quill.scroll.deleteAt(range.index, range.length) // So we do not trigger text-change\r\n      }\r\n      const lineFormats = Object.keys(context.format).reduce((formats, format) => {\r\n        if (this.quill.scroll.query(format, Scope.BLOCK) && !Array.isArray(context.format[format])) {\r\n          formats[format] = context.format[format]\r\n        }\r\n        return formats\r\n      }, {})\r\n      // insert new cellLine with lineFormats\r\n      this.quill.insertText(range.index, '\\n', lineFormats['table-cell-line'], Quill.sources.USER)\r\n      // Earlier scroll.deleteAt might have messed up our selection,\r\n      // so insertText's built in selection preservation is not reliable\r\n      this.quill.setSelection(range.index + 1, Quill.sources.SILENT)\r\n      this.quill.focus()\r\n      Object.keys(context.format).forEach((name) => {\r\n        if (!isNullOrUndefined(lineFormats[name])) return\r\n        if (Array.isArray(context.format[name])) return\r\n        if (name === 'link') return\r\n        this.quill.format(name, context.format[name], Quill.sources.USER)\r\n      })\r\n    },\r\n  },\r\n}\r\n\r\nexport default BetterTable\r\n"],"names":["TableCol","TableColGroup","TableCellLine","TableCell","TableRow","TableBody","TableContainer","TableViewWrapper","Header","List","getEventComposedPath","TableOperationMenu","isNullOrUndefined","matchTableCell","matchTableHeader","matchTable","matchHeader","matchList","matchMentionLink","matchWordShapeImage","matchInline","matchTableRow","table","css","isPureIE","TableSelector","insideTable","rowId","cellId","TableSelection","TableColumnTool","TableScrollBar","index"],"mappings":"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"}
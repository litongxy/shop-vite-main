{"version":3,"file":"table-selection.cjs.js","sources":["../../../../src/table/modules/table-selection.ts"],"sourcesContent":["import Quill from 'quill'\r\nimport { TableCell } from '../formats/table'\r\nimport { ERROR_LIMIT, LINE_POSITIONS, PRIMARY_COLOR } from '../table-config'\r\nimport { css, getRelativeRect } from '../utils'\r\n\r\nexport default class TableSelection {\r\n  table: any\r\n  quill: any\r\n  modulesContainer: any\r\n  parent: any\r\n  boundary: any\r\n  // @ts-ignore\r\n  selectedTds: any[]\r\n  // @ts-ignore\r\n  dragging: boolean\r\n  preSelectedTable: any\r\n  oldRootScrollTop: any\r\n  selectingHandler: any\r\n  tdEditHandler: any\r\n  tdResizeHandler: any\r\n  endTd: any\r\n  startTd: any\r\n  editTd: any\r\n  left: any\r\n  bottom: any\r\n  top: any\r\n  right: any\r\n\r\n  constructor(table, quill, dom) {\r\n    if (!table) {\r\n      return null\r\n    }\r\n    this.table = table\r\n    this.quill = quill\r\n    this.modulesContainer = dom\r\n    this.parent = this.quill.root.parentNode\r\n    this.boundary = {} // params for selected square\r\n    this.selectedTds = [] // array for selected table-cells\r\n    this.dragging = false\r\n    this.preSelectedTable = null\r\n    this.oldRootScrollTop = this.quill.root.scrollTop\r\n\r\n    this.selectingHandler = this.mouseDownHandler.bind(this)\r\n\r\n    this.tdEditHandler = this.setTdEditable.bind(this)\r\n    this.tdResizeHandler = this.resizeTd.bind(this)\r\n\r\n    this.helpLinesInitial()\r\n    this.isEditorHasScrollBar()\r\n\r\n    this.quill.root.parentNode.addEventListener('mousedown', this.selectingHandler, false)\r\n    this.quill.on('text-change', this.tdResizeHandler)\r\n    if (this.quill.root === this.quill.scrollingContainer) {\r\n      this.quill.root.addEventListener('scroll', this.handleQuillRootScroll.bind(this))\r\n    }\r\n  }\r\n\r\n  handleQuillRootScroll() {\r\n    LINE_POSITIONS.forEach((direction) => {\r\n      const selectionLine = this[direction]\r\n      if (selectionLine) {\r\n        selectionLine.style.marginTop = `${this.oldRootScrollTop - this.quill.root.scrollTop}px`\r\n      }\r\n    })\r\n  }\r\n\r\n  isEditorHasScrollBar() {\r\n    if (this.quill.root.scrollHeight > this.quill.root.clientHeight) {\r\n      css(this.modulesContainer, { width: 'calc(100% - 23px)' })\r\n    }\r\n    else {\r\n      this.modulesContainer.removeAttribute('style')\r\n    }\r\n  }\r\n\r\n  helpLinesInitial() {\r\n    LINE_POSITIONS.forEach((direction) => {\r\n      this[direction] = document.createElement('div')\r\n      this[direction].classList.add('qlbt-selection-line')\r\n      if (direction === 'left') {\r\n        this[direction].classList.add('qlbt-selection-line-first')\r\n        const ctrlPointLeft = document.createElement('div')\r\n        this[direction].appendChild(ctrlPointLeft)\r\n      }\r\n      if (direction === 'bottom') {\r\n        this[direction].classList.add('qlbt-selection-line-last')\r\n        const ctrlPointRight = document.createElement('div')\r\n        this[direction].appendChild(ctrlPointRight)\r\n      }\r\n      css(this[direction], {\r\n        'position': 'absolute',\r\n        'display': 'none',\r\n        'background-color': PRIMARY_COLOR,\r\n      })\r\n      this.modulesContainer.appendChild(this[direction])\r\n    })\r\n  }\r\n\r\n  mouseDownHandler(e) {\r\n    if (e.button !== 0) {\r\n      return\r\n    }\r\n    const self: any = this\r\n    const betterTableModule = this.quill.getModule('better-table')\r\n    const tableColumnTool = betterTableModule.columnTool\r\n    if (tableColumnTool.activeToolCell) {\r\n      tableColumnTool.activeToolCell.classList.remove('qlbt-tool-cell-on')\r\n      tableColumnTool.activeToolCell = null\r\n    }\r\n    if (e.target.closest('.quill-better-table')) {\r\n      if (e.shiftKey) {\r\n        this.endTd = e.target.closest('td[data-row]')\r\n        this.drawSelection(this, true)\r\n        // avoid select text in multiple table-cell\r\n        if (this.startTd !== this.endTd) {\r\n          this.quill.blur()\r\n        }\r\n      }\r\n      else {\r\n        this.startTd = e.target.closest('td[data-row]')\r\n        this.drawSelection(this, false)\r\n        this.dragging = true\r\n\r\n        this.parent.addEventListener('mousemove', mouseMoveHandler, false)\r\n        document.addEventListener('mouseup', mouseUpHandler, false)\r\n      }\r\n    }\r\n    else if (e.target.closest('.qlbt-selection-line')) {\r\n      this.parent.addEventListener('mousemove', mouseMoveHandler, false)\r\n      document.addEventListener('mouseup', mouseUpHandler, false)\r\n    }\r\n\r\n    function mouseMoveHandler(event) {\r\n      event.stopPropagation()\r\n\r\n      if (event.button !== 0 || !event.target.closest('.quill-better-table')) {\r\n        return\r\n      }\r\n      self.endTd = event.target.closest('td[data-row]')\r\n      if (!self.endTd) {\r\n        return\r\n      }\r\n      self.drawSelection(self, true)\r\n      // avoid select text in multiple table-cell\r\n      if (self.startTd !== self.endTd) {\r\n        self.quill.blur()\r\n      }\r\n    }\r\n\r\n    function mouseUpHandler() {\r\n      self.parent.removeEventListener('mousemove', mouseMoveHandler, false)\r\n      document.removeEventListener('mouseup', mouseUpHandler, false)\r\n      self.dragging = false\r\n    }\r\n  }\r\n\r\n  drawSelection(self, end) {\r\n    // fix: 如果滚动条拖动，startTd的位置已经改变了，需要重置startTdRect\r\n    self.startTdRect = getRelativeRect(self.startTd.getBoundingClientRect(), self.quill.root.parentNode)\r\n    let endTdRect = self.startTdRect\r\n    if (end) {\r\n      self.endTdRect = getRelativeRect(self.endTd.getBoundingClientRect(), self.quill.root.parentNode)\r\n      endTdRect = self.endTdRect\r\n    }\r\n    self.boundary = computeBoundaryFromRects(self.startTdRect, endTdRect)\r\n    self.selectedTds = self.computeSelectedTds()\r\n    self.repositionHelpLines()\r\n  }\r\n\r\n  setTdEditable(e) {\r\n    if (!this.editTd) {\r\n      return\r\n    }\r\n    this.parent.removeEventListener('keypress', this.tdEditHandler, false)\r\n    const dom = this.editTd.domNode\r\n    dom.removeEventListener('click', this.tdEditHandler, false)\r\n    dom.classList.add('editing-select-able')\r\n    dom.setAttribute('contenteditable', true)\r\n    if (e.type === 'keypress') {\r\n      if (dom.childNodes.length > 1 || dom.firstChild.innerHTML !== '<br>') {\r\n        const blank = dom.firstChild.cloneNode()\r\n        blank.innerHTML = '<br>'\r\n        dom.innerHTML = ''\r\n        dom.appendChild(blank)\r\n      }\r\n      dom.focus()\r\n    }\r\n  }\r\n\r\n  resizeTd() {\r\n    if (!this.editTd || (this.left && !this.left.offsetParent)) {\r\n      return\r\n    }\r\n    if (this.selectedTds.length > 1) {\r\n      this.refreshHelpLinesPosition()\r\n    }\r\n    else {\r\n      const dom = this.editTd.domNode\r\n      const domRect = getRelativeRect(dom.getBoundingClientRect(), this.quill.root.parentNode)\r\n      this.boundary = computeBoundaryFromRects(domRect, domRect)\r\n      this.repositionHelpLines()\r\n    }\r\n\r\n    // 判断编辑器是否有滚动条，调整遮罩宽度\r\n    this.isEditorHasScrollBar()\r\n\r\n    // 更新行高 更新滑块位置\r\n    const betterTableModule = this.quill.getModule('better-table')\r\n    const tableColumnTool = betterTableModule.columnTool\r\n    if (tableColumnTool) {\r\n      tableColumnTool.updateRowToolCells()\r\n      const tableViewRect = this.table.parentNode.getBoundingClientRect()\r\n      if (tableColumnTool.leftMask) {\r\n        css(tableColumnTool.leftMask, { height: `${tableViewRect.height + 50}px` })\r\n      }\r\n    }\r\n\r\n    const tableScrollBar = betterTableModule.tableScrollBar\r\n    tableScrollBar.resetTableHeight(this.table)\r\n  }\r\n\r\n  resetTd(e) {\r\n    const dom = e.target\r\n    dom.classList.remove('editing-select-able')\r\n    dom.setAttribute('contenteditable', false)\r\n    dom.removeAttribute('contenteditable')\r\n  }\r\n\r\n  correctBoundary() {\r\n    const tableContainer = Quill.find(this.table)\r\n    const tableCells = tableContainer.descendants(TableCell)\r\n\r\n    tableCells.forEach((tableCell) => {\r\n      const { x, y, width, height } = getRelativeRect(tableCell.domNode.getBoundingClientRect(), this.quill.root.parentNode)\r\n      const isCellIntersected\r\n        = ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1)\r\n          || (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1))\r\n        && ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1)\r\n          || (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1))\r\n      if (isCellIntersected) {\r\n        this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height })\r\n      }\r\n    })\r\n  }\r\n\r\n  computeSelectedTds() {\r\n    const tableContainer = Quill.find(this.table)\r\n    const tableCells = tableContainer.descendants(TableCell)\r\n\r\n    const result = tableCells.reduce((selectedCells, tableCell) => {\r\n      const { x, y, width, height } = getRelativeRect(tableCell.domNode.getBoundingClientRect(), this.quill.root.parentNode)\r\n      const isCellIncluded\r\n        = x + ERROR_LIMIT >= this.boundary.x\r\n        && x - ERROR_LIMIT + width <= this.boundary.x1\r\n        && y + ERROR_LIMIT >= this.boundary.y\r\n        && y - ERROR_LIMIT + height <= this.boundary.y1\r\n\r\n      if (isCellIncluded) {\r\n        selectedCells.push(tableCell)\r\n      }\r\n\r\n      return selectedCells\r\n    }, [])\r\n\r\n    if (result.length === 1 && this.editTd !== result[0]) {\r\n      const resetTds = this.table.querySelectorAll('td[contenteditable=true]')\r\n      resetTds.forEach(td => this.resetTd({ target: td }))\r\n      this.editTd = result[0]\r\n      this.editTd.domNode.addEventListener('mousedown', this.tdEditHandler, false)\r\n      this.parent.addEventListener('keypress', this.tdEditHandler, false)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  repositionHelpLines() {\r\n    this.oldRootScrollTop = this.quill.root.scrollTop\r\n    if (!this.left) {\r\n      return\r\n    }\r\n\r\n    css(this.left, {\r\n      'display': 'block',\r\n      'left': `${this.boundary.x - 1}px`,\r\n      'top': `${this.boundary.y}px`,\r\n      'height': `${this.boundary.height + 1}px`,\r\n      'width': '1px',\r\n      'margin-top': '0px',\r\n    })\r\n\r\n    css(this.right, {\r\n      'display': 'block',\r\n      'left': `${this.boundary.x1}px`,\r\n      'top': `${this.boundary.y - 1}px`,\r\n      'height': `${this.boundary.height + 1}px`,\r\n      'width': '1px',\r\n      'margin-top': '0px',\r\n    })\r\n\r\n    css(this.top, {\r\n      'display': 'block',\r\n      'left': `${this.boundary.x - 1}px`,\r\n      'top': `${this.boundary.y - 1}px`,\r\n      'width': `${this.boundary.width + 1}px`,\r\n      'height': '1px',\r\n      'margin-top': '0px',\r\n    })\r\n\r\n    css(this.bottom, {\r\n      'display': 'block',\r\n      'left': `${this.boundary.x - 1}px`,\r\n      'top': `${this.boundary.y1}px`,\r\n      'width': `${this.boundary.width + 1}px`,\r\n      'height': '1px',\r\n      'margin-top': '0px',\r\n    })\r\n  }\r\n\r\n  // based on selectedTds compute positions of help lines\r\n  // It is useful when selectedTds are not changed\r\n  refreshHelpLinesPosition() {\r\n    const startRect = getRelativeRect(this.selectedTds[0].domNode.getBoundingClientRect(), this.quill.root.parentNode)\r\n    const endRect = getRelativeRect(\r\n      this.selectedTds[this.selectedTds.length - 1].domNode.getBoundingClientRect(),\r\n      this.quill.root.parentNode,\r\n    )\r\n    this.boundary = computeBoundaryFromRects(startRect, endRect)\r\n    this.repositionHelpLines()\r\n  }\r\n\r\n  destroy() {\r\n    const resetTds = this.table.querySelectorAll('td[contenteditable=true]')\r\n    resetTds.forEach(td => this.resetTd({ target: td }))\r\n\r\n    LINE_POSITIONS.forEach((direction) => {\r\n      if (this[direction]) {\r\n        this[direction].remove()\r\n        this[direction] = null\r\n      }\r\n    })\r\n\r\n    this.quill.root.parentNode.removeEventListener('mousedown', this.selectingHandler, false)\r\n\r\n    delete this.editTd\r\n\r\n    return null\r\n  }\r\n\r\n  setSelection(startRect, endRect) {\r\n    this.boundary = computeBoundaryFromRects(\r\n      getRelativeRect(startRect, this.quill.root.parentNode),\r\n      getRelativeRect(endRect, this.quill.root.parentNode),\r\n    )\r\n    this.correctBoundary()\r\n    this.selectedTds = this.computeSelectedTds()\r\n    this.repositionHelpLines()\r\n  }\r\n\r\n  clearSelection() {\r\n    const resetTds = this.table.querySelectorAll('td[contenteditable=true]')\r\n    resetTds.forEach(td => this.resetTd({ target: td }))\r\n    this.boundary = {}\r\n    this.selectedTds = []\r\n    LINE_POSITIONS.forEach((direction) => {\r\n      if (this[direction]) {\r\n        css(this[direction], {\r\n          display: 'none',\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction computeBoundaryFromRects(startRect, endRect) {\r\n  const x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1)\r\n\r\n  const x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1)\r\n\r\n  const y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1)\r\n\r\n  const y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1)\r\n\r\n  const width = x1 - x\r\n  const height = y1 - y\r\n\r\n  return { x, x1, y, y1, width, height }\r\n}\r\n"],"names":["table","LINE_POSITIONS","css","PRIMARY_COLOR","getRelativeRect","TableCell","ERROR_LIMIT"],"mappings":"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"}
{"version":3,"file":"Options.cjs.js","sources":["../../../src/custom-image/Options.ts"],"sourcesContent":["import ImageSpec from './specs/ImageSpec'\r\n\r\nexport interface OverlayOptions {\r\n  // classname applied to the overlay element\r\n  className: string\r\n  // style applied to overlay element, or null to prevent styles\r\n  style: Record<string, string>\r\n}\r\n\r\nexport interface ResizeOptions {\r\n  // class name applied to the resize handles\r\n  handleClassName: string\r\n  // style applied to resize handles, or null to prevent styles\r\n  handleStyle: Record<string, string>\r\n}\r\n\r\nexport interface AlignOptions {\r\n  // the name of the attribute for an element that has its alignment changed\r\n  attribute: string\r\n  // the aligner does the actual alignment switch\r\n  aligner: {\r\n    // whether or not the aligner should handle the actual alignment properties\r\n    applyStyle: boolean\r\n  }\r\n  // icons used for alignment\r\n  icons: {\r\n    left: string\r\n    center: string\r\n    right: string\r\n  }\r\n  // the toolbar so users can change alignments\r\n  toolbar: {\r\n    // whether or not users can deselect an alignment. it's up to you to set the initial alignment\r\n    allowDeselect: boolean\r\n    // class name applied to the root toolbar element\r\n    mainClassName: string\r\n    // style applied to root toolbar element, or null to prevent styles\r\n    mainStyle\r\n    // class name applied to each button in the toolbar\r\n    buttonClassName: string\r\n    /* whether or not to add the selected style to the buttons.\r\n    they'll always get the is-selected class */\r\n    addButtonSelectStyle: boolean\r\n    // style applied to buttons, or null to prevent styles\r\n    buttonStyle\r\n    // style applied to the svgs in the buttons\r\n    svgStyle\r\n  }\r\n}\r\n\r\nexport interface Options {\r\n  // the BlotSpecs supported\r\n  specs: any\r\n  overlay: OverlayOptions\r\n  align: AlignOptions\r\n  resize: ResizeOptions\r\n}\r\n\r\nconst DefaultOptions: Options = {\r\n  specs: [\r\n    ImageSpec,\r\n  ],\r\n  overlay: {\r\n    className: 'blot-formatter__overlay',\r\n    style: {\r\n      position: 'absolute',\r\n      boxSizing: 'border-box',\r\n      border: '1px dashed #444',\r\n    },\r\n  },\r\n  align: {\r\n    attribute: 'data-align',\r\n    aligner: {\r\n      applyStyle: true,\r\n    },\r\n    icons: {\r\n      left: `\r\n        <svg viewbox=\"0 0 18 18\">\r\n          <line class=\"ql-stroke\" x1=\"3\" x2=\"15\" y1=\"9\" y2=\"9\"></line>\r\n          <line class=\"ql-stroke\" x1=\"3\" x2=\"13\" y1=\"14\" y2=\"14\"></line>\r\n          <line class=\"ql-stroke\" x1=\"3\" x2=\"9\" y1=\"4\" y2=\"4\"></line>\r\n        </svg>\r\n      `,\r\n      center: `\r\n        <svg viewbox=\"0 0 18 18\">\r\n           <line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\r\n          <line class=\"ql-stroke\" x1=\"14\" x2=\"4\" y1=\"14\" y2=\"14\"></line>\r\n          <line class=\"ql-stroke\" x1=\"12\" x2=\"6\" y1=\"4\" y2=\"4\"></line>\r\n        </svg>\r\n      `,\r\n      right: `\r\n        <svg viewbox=\"0 0 18 18\">\r\n          <line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\r\n          <line class=\"ql-stroke\" x1=\"15\" x2=\"5\" y1=\"14\" y2=\"14\"></line>\r\n          <line class=\"ql-stroke\" x1=\"15\" x2=\"9\" y1=\"4\" y2=\"4\"></line>\r\n        </svg>\r\n      `,\r\n    },\r\n    toolbar: {\r\n      allowDeselect: true,\r\n      mainClassName: 'blot-formatter__toolbar',\r\n      mainStyle: {\r\n        position: 'absolute',\r\n        top: '-12px',\r\n        right: '0',\r\n        left: '0',\r\n        height: '0',\r\n        minWidth: '100px',\r\n        font: '12px/1.0 Arial, Helvetica, sans-serif',\r\n        textAlign: 'center',\r\n        color: '#333',\r\n        boxSizing: 'border-box',\r\n        cursor: 'default',\r\n        zIndex: '1',\r\n      },\r\n      buttonClassName: 'blot-formatter__toolbar-button',\r\n      addButtonSelectStyle: true,\r\n      buttonStyle: {\r\n        display: 'inline-block',\r\n        width: '24px',\r\n        height: '24px',\r\n        background: 'white',\r\n        border: '1px solid #999',\r\n        verticalAlign: 'middle',\r\n      },\r\n      svgStyle: {\r\n        display: 'inline-block',\r\n        width: '24px',\r\n        height: '24px',\r\n        background: 'white',\r\n        border: '1px solid #999',\r\n        verticalAlign: 'middle',\r\n      },\r\n    },\r\n  },\r\n  resize: {\r\n    handleClassName: 'blot-formatter__resize-handle',\r\n    handleStyle: {\r\n      position: 'absolute',\r\n      height: '12px',\r\n      width: '12px',\r\n      backgroundColor: 'white',\r\n      border: '1px solid #777',\r\n      boxSizing: 'border-box',\r\n      opacity: '0.80',\r\n    },\r\n  },\r\n}\r\n\r\nexport default DefaultOptions\r\n"],"names":["ImageSpec"],"mappings":";;;AA0DA,MAAM,iBAA0B;AAAA,EAC9B,OAAO;AAAA,IACLA,UAAA;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,WAAW;AAAA,IACX,OAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,OAAO;AAAA,IACL,WAAW;AAAA,IACX,SAAS;AAAA,MACP,YAAY;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAON,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOR,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOT;AAAA,IACA,SAAS;AAAA,MACP,eAAe;AAAA,MACf,eAAe;AAAA,MACf,WAAW;AAAA,QACT,UAAU;AAAA,QACV,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,QACN,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,MACA,iBAAiB;AAAA,MACjB,sBAAsB;AAAA,MACtB,aAAa;AAAA,QACX,SAAS;AAAA,QACT,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,eAAe;AAAA,MACjB;AAAA,MACA,UAAU;AAAA,QACR,SAAS;AAAA,QACT,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,eAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,iBAAiB;AAAA,IACjB,aAAa;AAAA,MACX,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AAAA,EACF;AACF;;"}
import { renderless, api } from '@opentiny/vue-renderless/quarter-panel/vue';
import { defineComponent, $prefix, setup } from '@opentiny/vue-common';
import YearTable from '@opentiny/vue-year-table';
import { iconDoubleRight, iconDoubleLeft } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/quarter-panel/index.css';
import { resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, createVNode, toDisplayString, createElementBlock, Fragment, renderList, normalizeClass, createCommentVNode, vShow } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "QuarterPanel",
  components: {
    YearTable,
    IconDoubleRight: iconDoubleRight(),
    IconDoubleLeft: iconDoubleLeft()
  },
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1 = {
  class: "tiny-quarter-panel tiny-picker-panel tiny-date-picker"
};
var _hoisted_2 = {
  class: "tiny-quarter-panel__header"
};
var _hoisted_3 = {
  class: "tiny-quarter-panel__content tiny-picker-panel__content"
};
var _hoisted_4 = ["textContent"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_double_left = resolveComponent("icon-double-left");
  var _component_icon_double_right = resolveComponent("icon-double-right");
  var _component_year_table = resolveComponent("year-table");
  return openBlock(), createBlock(Transition, {
    name: "tiny-zoom-in-top",
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        _hoisted_1,
        [createElementVNode("div", _hoisted_2, [createElementVNode("button", {
          type: "button",
          onClick: _cache[0] || (_cache[0] = function() {
            return _ctx.cusPrevYear && _ctx.cusPrevYear.apply(_ctx, arguments);
          }),
          class: "tiny-picker-panel__icon-btn tiny-date-picker__prev-btn tiny-icon-d-arrow-left"
        }, [createVNode(_component_icon_double_left)]), createElementVNode(
          "span",
          {
            onClick: _cache[1] || (_cache[1] = function() {
              return _ctx.showYearPicker && _ctx.showYearPicker.apply(_ctx, arguments);
            }),
            role: "button",
            class: "tiny-date-picker__header-label"
          },
          toDisplayString(_ctx.state.yearLabel),
          1
          /* TEXT */
        ), createElementVNode("button", {
          type: "button",
          onClick: _cache[2] || (_cache[2] = function() {
            return _ctx.cusNextYear && _ctx.cusNextYear.apply(_ctx, arguments);
          }),
          class: "tiny-picker-panel__icon-btn tiny-date-picker__next-btn tiny-icon-d-arrow-right"
        }, [createVNode(_component_icon_double_right)])]), createElementVNode("div", _hoisted_3, [_ctx.state.currentView === "quarter" ? (openBlock(), createElementBlock("table", {
          key: 0,
          class: "tiny-quarter-panel__table",
          onClick: _cache[3] || (_cache[3] = function() {
            return _ctx.handleQuarterTableClick && _ctx.handleQuarterTableClick.apply(_ctx, arguments);
          })
        }, [createElementVNode("tbody", null, [createElementVNode("tr", null, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.rows, function(row, key) {
            return openBlock(), createElementBlock(
              "td",
              {
                key,
                class: normalizeClass(_ctx.getCellStyle(row))
              },
              [createElementVNode("div", null, [createElementVNode("a", {
                class: "cell",
                textContent: toDisplayString(row.text)
              }, null, 8, _hoisted_4)])],
              2
              /* CLASS */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        ))])])])) : createCommentVNode("v-if", true), _ctx.state.currentView === "year" ? (openBlock(), createBlock(_component_year_table, {
          key: 1,
          ref: "yearTable",
          value: _ctx.state.value,
          "default-value": _ctx.state.defaultValue ? new Date(_ctx.state.defaultValue) : null,
          date: _ctx.state.date,
          "disabled-date": _ctx.state.disabledDate,
          "selection-mode": _ctx.state.selectionMode,
          "start-year": _ctx.state.startYear,
          onPick: _ctx.handleYearPick
        }, null, 8, ["value", "default-value", "date", "disabled-date", "selection-mode", "start-year", "onPick"])) : createCommentVNode("v-if", true)])],
        512
        /* NEED_PATCH */
      ), [[vShow, _ctx.state.visible]])];
    }),
    _: 1
    /* STABLE */
  });
}
var QuerterPanel = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.20.0";
QuerterPanel.install = function(Vue) {
  Vue.component(QuerterPanel.name, QuerterPanel);
};
QuerterPanel.version = version;

export { QuerterPanel as default };

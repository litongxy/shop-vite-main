import { defineComponent, $prefix, directive, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/multi-select/vue';
import { iconChevronDown, iconSearch } from '@opentiny/vue-icon';
import Button from '@opentiny/vue-button';
import Input from '@opentiny/vue-input';
import Mask from '@opentiny/vue-mask';
import MultiSelectItem from '@opentiny/vue-multi-select-item';
import Wheel from '@opentiny/vue-wheel';
import Clickoutside from '@opentiny/vue-renderless/common/deps/clickoutside';
import { t } from '@opentiny/vue-locale';
import { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, createElementVNode, normalizeClass, Fragment, renderList, normalizeStyle, toDisplayString, createVNode, vShow, withCtx, createBlock, renderSlot, createTextVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "MultiSelect",
  components: {
    IconChevronDown: iconChevronDown(),
    IconSearch: iconSearch(),
    TinyButton: Button,
    TinyWheel: Wheel,
    TinyMask: Mask,
    TinyMultiSelectItem: MultiSelectItem,
    TinyInput: Input
  },
  directives: directive({
    Clickoutside
  }),
  props: {
    dataSource: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    modelValue: {
      type: [String, Array],
      default: ""
    },
    searchValue: {
      type: String,
      default: ""
    },
    defaultSelectedArray: {
      type: Array,
      default: function _default2() {
        return [];
      }
    },
    filterable: {
      type: Boolean,
      default: false
    },
    searchPlaceholder: {
      type: String,
      default: function _default3() {
        return t("ui.search.placeholder");
      }
    },
    type: {
      type: String,
      default: "list"
    },
    disabled: {
      type: Boolean,
      default: false
    },
    mask: {
      type: Boolean,
      default: false
    },
    maskOptions: {
      type: Object,
      default: function _default4() {
        return {};
      }
    }
  },
  emits: ["update:modelValue", "update:searchValue", "item-click"],
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-mobile-multi-select"
};
var _hoisted_2 = {
  class: "tiny-mobile-multi-select__header-item-box"
};
var _hoisted_3 = ["onClick"];
var _hoisted_4 = {
  class: "tiny-mobile-multi-select__header-search"
};
var _hoisted_5 = {
  key: 0,
  class: "tiny-mobile-multi-select__option-list"
};
var _hoisted_6 = {
  class: "tiny-mobile-multi-select__footer"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _ctx$dataSource$_ctx$, _ctx$dataSource$_ctx$2;
  var _component_IconChevronDown = resolveComponent("IconChevronDown");
  var _component_IconSearch = resolveComponent("IconSearch");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_mask = resolveComponent("tiny-mask");
  var _component_tiny_multi_select_item = resolveComponent("tiny-multi-select-item");
  var _component_tiny_wheel = resolveComponent("tiny-wheel");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _directive_clickoutside = resolveDirective("clickoutside");
  return withDirectives((openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode(
    "div",
    {
      class: normalizeClass(["tiny-mobile-multi-select__header", {
        "show-search": _ctx.filterable,
        "is-searching": _ctx.state.isSearching,
        "is-disabled": _ctx.disabled
      }]),
      ref: "headerBox"
    },
    [!_ctx.state.isSearching ? (openBlock(), createElementBlock(
      Fragment,
      {
        key: 0
      },
      [createElementVNode("div", _hoisted_2, [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.dataSource, function(item, index) {
          var _ctx$state$headerInfo, _ctx$state$headerInfo2, _ctx$state$headerInfo3, _ctx$state$headerInfo4;
          return openBlock(), createElementBlock("div", {
            key: index,
            class: normalizeClass(["tiny-mobile-multi-select__header-item", {
              "item-disabled": item.disabled
            }]),
            onClick: function onClick($event) {
              return _ctx.handleClick(index);
            },
            style: normalizeStyle(_ctx.state.labelsStyle[index])
          }, [createElementVNode(
            "div",
            {
              class: normalizeClass(["tiny-mobile-multi-select__header__label", (_ctx$state$headerInfo = _ctx.state.headerInfo[index]) != null && _ctx$state$headerInfo.isSelected ? "tiny-mobile-multi-select__header__active" : ""])
            },
            toDisplayString((_ctx$state$headerInfo2 = _ctx.state.headerInfo[index]) == null ? void 0 : _ctx$state$headerInfo2.title),
            3
            /* TEXT, CLASS */
          ), createElementVNode(
            "div",
            {
              class: normalizeClass(["tiny-mobile-multi-select__header__icon", (_ctx$state$headerInfo3 = _ctx.state.headerInfo[index]) != null && _ctx$state$headerInfo3.isSelected ? "tiny-mobile-multi-select__header__active" : ""]),
              style: normalizeStyle({
                transform: (_ctx$state$headerInfo4 = _ctx.state.headerInfo[index]) != null && _ctx$state$headerInfo4.isUP ? "rotate(180deg)" : "none"
              })
            },
            [createVNode(_component_IconChevronDown)],
            6
            /* CLASS, STYLE */
          )], 14, _hoisted_3);
        }),
        128
        /* KEYED_FRAGMENT */
      ))]), withDirectives(createElementVNode(
        "div",
        {
          class: "tiny-mobile-multi-select__header-search-icon",
          onClick: _cache[0] || (_cache[0] = function() {
            return _ctx.handleSearchBtnClick && _ctx.handleSearchBtnClick.apply(_ctx, arguments);
          })
        },
        [createVNode(_component_IconSearch)],
        512
        /* NEED_PATCH */
      ), [[vShow, _ctx.filterable && _ctx.state.showOptions]])],
      64
      /* STABLE_FRAGMENT */
    )) : (openBlock(), createElementBlock(
      Fragment,
      {
        key: 1
      },
      [createElementVNode("div", _hoisted_4, [createVNode(_component_tiny_input, {
        ref: "searchInput",
        type: "text",
        modelValue: _ctx.state.searchValue,
        "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
          return _ctx.state.searchValue = $event;
        }),
        placeholder: _ctx.searchPlaceholder,
        onInput: _ctx.handleSearchInput
      }, {
        prefix: withCtx(function() {
          return [createVNode(_component_IconSearch, {
            class: "tiny-mobile-multi-select__header-prefix-icon"
          })];
        }),
        _: 1
        /* STABLE */
      }, 8, ["modelValue", "placeholder", "onInput"])]), createElementVNode(
        "div",
        {
          class: "tiny-mobile-multi-select__header-cancel-btn",
          onClick: _cache[2] || (_cache[2] = function() {
            return _ctx.handleSearchBtnClick && _ctx.handleSearchBtnClick.apply(_ctx, arguments);
          })
        },
        toDisplayString(_ctx.t("ui.base.cancel")),
        1
        /* TEXT */
      )],
      64
      /* STABLE_FRAGMENT */
    ))],
    2
    /* CLASS */
  ), createVNode(_component_tiny_mask, {
    visible: _ctx.state.showMask,
    onClick: _ctx.handleClose
  }, null, 8, ["visible", "onClick"]), withDirectives(createElementVNode(
    "div",
    {
      class: normalizeClass(["tiny-mobile-multi-select__content", !((_ctx$dataSource$_ctx$ = _ctx.dataSource[_ctx.state.headerIndex]) != null && _ctx$dataSource$_ctx$.hasFooter) ? "noFooter" : ""])
    },
    [_ctx.type === "list" ? (openBlock(), createElementBlock("div", _hoisted_5, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.currentOptions, function(item, index) {
        return openBlock(), createBlock(_component_tiny_multi_select_item, {
          option: item,
          key: index
        }, null, 8, ["option"]);
      }),
      128
      /* KEYED_FRAGMENT */
    ))])) : (openBlock(), createBlock(_component_tiny_wheel, {
      key: 1,
      "data-source": _ctx.state.wheelData,
      "default-selected-indexs": _ctx.state.defaultSelectedIndexs,
      "has-footer": (_ctx$dataSource$_ctx$2 = _ctx.dataSource[_ctx.state.headerIndex]) == null ? void 0 : _ctx$dataSource$_ctx$2.hasFooter,
      onChange: _ctx.wheelChange,
      onClickWheelItem: _ctx.clickWheelItem
    }, null, 8, ["data-source", "default-selected-indexs", "has-footer", "onChange", "onClickWheelItem"])), renderSlot(_ctx.$slots, "footer", {}, function() {
      var _ctx$dataSource$_ctx$3;
      return [withDirectives(createElementVNode(
        "div",
        _hoisted_6,
        [createVNode(_component_tiny_button, {
          round: "",
          size: "large",
          type: "secondary",
          onClick: _ctx.reset
        }, {
          default: withCtx(function() {
            return [createTextVNode(
              toDisplayString(_ctx.t("ui.base.reset")),
              1
              /* TEXT */
            )];
          }),
          _: 1
          /* STABLE */
        }, 8, ["onClick"]), createVNode(_component_tiny_button, {
          round: "",
          size: "large",
          type: "primary",
          onClick: _ctx.confirm
        }, {
          default: withCtx(function() {
            return [createTextVNode(
              toDisplayString(_ctx.t("ui.button.confirm")),
              1
              /* TEXT */
            )];
          }),
          _: 1
          /* STABLE */
        }, 8, ["onClick"])],
        512
        /* NEED_PATCH */
      ), [[vShow, _ctx.state.showOptions && ((_ctx$dataSource$_ctx$3 = _ctx.dataSource[_ctx.state.headerIndex]) == null ? void 0 : _ctx$dataSource$_ctx$3.hasFooter)]])];
    })],
    2
    /* CLASS */
  ), [[vShow, _ctx.state.showOptions]])])), [[_directive_clickoutside, _ctx.handleClose]]);
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobile as default };

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import { IconPopup, IconDoubleLeft, IconDoubleRight } from "@opentiny/vue-icon";
import PcTemplate from "./pc.js";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var PagerItem = defineComponent({
  name: $prefix + "PagerItem",
  props: _extends({}, $props, {
    disabled: {
      type: Boolean,
      default: false
    },
    currentPage: Number,
    pageCount: Number,
    pagerCount: Number,
    popupIcon: {
      type: Object,
      default: IconPopup
    },
    doubleLeftIcon: {
      type: Object,
      default: IconDoubleLeft
    },
    doubleRightIcon: {
      type: Object,
      default: IconDoubleRight
    },
    isBeforePageChange: Boolean
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
PagerItem.install = function(Vue) {
  Vue.component(PagerItem.name, PagerItem);
};
PagerItem.version = version;
export {
  PagerItem as default
};

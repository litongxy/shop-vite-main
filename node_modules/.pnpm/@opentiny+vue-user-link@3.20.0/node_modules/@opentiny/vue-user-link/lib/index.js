function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/user-link/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var UserLink = defineComponent({
  name: $prefix + "UserLink",
  props: _extends({}, $props, {
    modelValue: String,
    cache: {
      type: Boolean,
      default: true
    },
    cacheKey: {
      type: String,
      default: "tiny-user"
    },
    cacheFields: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    valueSplit: {
      type: String,
      default: function _default2() {
        return ",";
      }
    },
    textSplit: {
      type: String,
      default: function _default3() {
        return ",";
      }
    },
    valueField: {
      type: String,
      default: function _default4() {
        return "";
      }
    },
    textField: {
      type: String,
      default: function _default5() {
        return "";
      }
    },
    card: {
      type: Boolean,
      default: true
    },
    fetchUser: Function,
    fetchW3Accounts: Function,
    getUserImageUrl: Function,
    fetchUserByUserId: Function,
    UserCache: Object,
    batch: {
      type: [Boolean, Number],
      default: 0
    },
    popperAppendToBody: {
      type: Boolean,
      default: true
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
UserLink.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
UserLink.install = function(Vue) {
  Vue.component(UserLink.name, UserLink);
};
UserLink.version = version;
export {
  UserLink as default
};

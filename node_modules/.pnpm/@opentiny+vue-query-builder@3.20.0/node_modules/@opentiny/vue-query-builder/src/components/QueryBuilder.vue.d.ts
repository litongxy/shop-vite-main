declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    value?: any;
    disabled?: any;
    context?: any;
    path?: any;
    validator?: any;
    fields?: any;
    id?: any;
    getValues?: any;
    field?: any;
    rules?: any;
    query?: any;
    onRemove?: any;
    operator?: any;
    valueSource?: any;
    combinatorPreceding?: any;
    combinator?: any;
    not?: any;
    operators?: any;
    parseNumbers?: any;
    combinators?: any;
    defaultQuery?: any;
    listsAsArrays?: any;
    bindProps?: any;
    independentCombinators?: any;
    getOperators?: any;
    getInputType?: any;
    getValueSources?: any;
    getValueEditorType?: any;
    getValueEditorSeparator?: any;
    onLog?: any;
    getDefaultField?: any;
    getDefaultOperator?: any;
    getDefaultValue?: any;
    getRuleClassname?: any;
    getRuleGroupClassname?: any;
    onAddRule?: any;
    onAddGroup?: any;
    onQueryChange?: any;
    showCombinatorsBetweenRules?: any;
    showNotToggle?: any;
    showCloneButtons?: any;
    showLockButtons?: any;
    allowDelAll?: any;
    resetOnFieldChange?: any;
    resetOnOperatorChange?: any;
    autoSelectField?: any;
    autoSelectOperator?: any;
    addRuleToNewGroups?: any;
    validateQuery?: any;
    idGenerator?: any;
    displayOnlyField?: any;
    showBranches?: any;
}>, unknown, unknown, {
    qb(): any;
    ruleGroup(): any;
}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    value?: any;
    disabled?: any;
    context?: any;
    path?: any;
    validator?: any;
    fields?: any;
    id?: any;
    getValues?: any;
    field?: any;
    rules?: any;
    query?: any;
    onRemove?: any;
    operator?: any;
    valueSource?: any;
    combinatorPreceding?: any;
    combinator?: any;
    not?: any;
    operators?: any;
    parseNumbers?: any;
    combinators?: any;
    defaultQuery?: any;
    listsAsArrays?: any;
    bindProps?: any;
    independentCombinators?: any;
    getOperators?: any;
    getInputType?: any;
    getValueSources?: any;
    getValueEditorType?: any;
    getValueEditorSeparator?: any;
    onLog?: any;
    getDefaultField?: any;
    getDefaultOperator?: any;
    getDefaultValue?: any;
    getRuleClassname?: any;
    getRuleGroupClassname?: any;
    onAddRule?: any;
    onAddGroup?: any;
    onQueryChange?: any;
    showCombinatorsBetweenRules?: any;
    showNotToggle?: any;
    showCloneButtons?: any;
    showLockButtons?: any;
    allowDelAll?: any;
    resetOnFieldChange?: any;
    resetOnOperatorChange?: any;
    autoSelectField?: any;
    autoSelectOperator?: any;
    addRuleToNewGroups?: any;
    validateQuery?: any;
    idGenerator?: any;
    displayOnlyField?: any;
    showBranches?: any;
}>>>, {
    readonly value?: any;
    readonly disabled?: any;
    readonly context?: any;
    readonly path?: any;
    readonly validator?: any;
    readonly fields?: any;
    readonly id?: any;
    readonly getValues?: any;
    readonly field?: any;
    readonly rules?: any;
    readonly query?: any;
    readonly onRemove?: any;
    readonly operator?: any;
    readonly valueSource?: any;
    readonly combinatorPreceding?: any;
    readonly combinator?: any;
    readonly not?: any;
    readonly operators?: any;
    readonly parseNumbers?: any;
    readonly combinators?: any;
    readonly defaultQuery?: any;
    readonly listsAsArrays?: any;
    readonly bindProps?: any;
    readonly independentCombinators?: any;
    readonly getOperators?: any;
    readonly getInputType?: any;
    readonly getValueSources?: any;
    readonly getValueEditorType?: any;
    readonly getValueEditorSeparator?: any;
    readonly onLog?: any;
    readonly getDefaultField?: any;
    readonly getDefaultOperator?: any;
    readonly getDefaultValue?: any;
    readonly getRuleClassname?: any;
    readonly getRuleGroupClassname?: any;
    readonly onAddRule?: any;
    readonly onAddGroup?: any;
    readonly onQueryChange?: any;
    readonly showCombinatorsBetweenRules?: any;
    readonly showNotToggle?: any;
    readonly showCloneButtons?: any;
    readonly showLockButtons?: any;
    readonly allowDelAll?: any;
    readonly resetOnFieldChange?: any;
    readonly resetOnOperatorChange?: any;
    readonly autoSelectField?: any;
    readonly autoSelectOperator?: any;
    readonly addRuleToNewGroups?: any;
    readonly validateQuery?: any;
    readonly idGenerator?: any;
    readonly displayOnlyField?: any;
    readonly showBranches?: any;
}, {}>;
export default _default;

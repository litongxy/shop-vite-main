import { defineComponent, $prefix, props, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/upload-list/vue';
import Progress from '@opentiny/vue-progress';
import ActionSheet from '@opentiny/vue-action-sheet';
import Record from '@opentiny/vue-record';
import { iconError, iconCueL, iconEyeopen, iconDownload, iconDel, iconRefres, iconRight, iconPause, iconAudio, iconEllipsis, iconExcelType, iconFileType, iconOtherType, iconPdfType, iconPictureType, iconPptType, iconTextType, iconVideoType, iconWordType, iconZipType, iconFileuploadPro } from '@opentiny/vue-icon';
import Modal from '@opentiny/vue-modal';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, Fragment, renderList, renderSlot, createElementVNode, normalizeStyle, createCommentVNode, createBlock, resolveDynamicComponent, createVNode, toDisplayString, withModifiers, withKeys, withDirectives, vShow, withCtx } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "UploadList",
  components: {
    TinyProgress: Progress,
    IconError: iconError(),
    IconCueL: iconCueL(),
    IconEyeopen: iconEyeopen(),
    IconDownload: iconDownload(),
    IconDel: iconDel(),
    IconRefres: iconRefres(),
    IconRight: iconRight(),
    IconPause: iconPause(),
    IconAudio: iconAudio(),
    IconEllipsis: iconEllipsis(),
    TinyActionSheet: ActionSheet,
    IconExcelType: iconExcelType(),
    IconFileType: iconFileType(),
    IconOtherType: iconOtherType(),
    IconPdfType: iconPdfType(),
    IconPictureType: iconPictureType(),
    IconPptType: iconPptType(),
    IconTextType: iconTextType(),
    IconVideoType: iconVideoType(),
    IconWordType: iconWordType(),
    IconZipType: iconZipType(),
    IconFileuploadPro: iconFileuploadPro(),
    TinyRecord: Record
  },
  emits: ["remove", "start", "update:visible", "click-file-list"],
  props: [].concat(props, ["disabled", "display", "files", "filesIcon", "handlePreview", "isEdm", "isFolder", "listType", "openDownloadFile", "srcList", "isFolderTitle", "listOption", "maxNameLength", "scale", "showName", "types", "edm", "displayOnly", "handleDownloadFile", "handleReUpload", "isDragover", "selected", "triggerClick", "isHwh5", "triggerPlay", "mode", "lockScroll", "compact", "imageBgColor"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        Modal
      }
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-upload-list"
};
var _hoisted_2 = {
  key: 0,
  "data-tag": "tiny-upload-list-files",
  class: "text-[0]"
};
var _hoisted_3 = ["onClick"];
var _hoisted_4 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "w-full h-full absolute top-0 left-0 bg-black opacity-50 rounded-sm"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_5 = {
  class: "w-full h-full absolute top-0 left-0 overflow-hidden flex px-1 items-center justify-center rounded-sm"
};
var _hoisted_6 = {
  "data-tag": "tiny-upload-list-animation",
  class: "bg-color-icon-tertiary w-full h-0.5 rounded"
};
var _hoisted_7 = {
  key: 2,
  "data-tag": "tiny-upload-list-fail",
  class: "relative w-full h-full bg-black/50 rounded"
};
var _hoisted_8 = {
  "data-tag": "tiny-upload-list-content",
  class: "relative inline-block w-[calc(100%-theme(spacing.10))] text-xs pr-10 sm:pr-0"
};
var _hoisted_9 = {
  class: "flex",
  "data-tag": "tiny-upload-list-name"
};
var _hoisted_10 = {
  class: "flex-1 sm:mr-6 text-sm sm:text-xs leading-5.5 text-color-text-primary overflow-hidden text-ellipsis whitespace-nowrap"
};
var _hoisted_11 = ["title"];
var _hoisted_12 = {
  "data-tag": "tiny-upload-list-operate",
  class: "hidden sm:block sm:invisible sm:group-hover:visible min-w-fit text-color-brand-hover text-xs"
};
var _hoisted_13 = ["onClick"];
var _hoisted_14 = ["onClick"];
var _hoisted_15 = ["onClick"];
var _hoisted_16 = ["onClick"];
var _hoisted_17 = {
  class: "flex h-5 leading-5",
  "data-tag": "tiny-upload-list-content"
};
var _hoisted_18 = {
  class: "overflow-hidden text-ellipsis whitespace-nowrap sm:font-normal"
};
var _hoisted_19 = {
  key: 0
};
var _hoisted_20 = {
  class: "hidden sm:inline text-color-error-hover"
};
var _hoisted_21 = {
  class: "inline sm:hidden text-color-error-hover"
};
var _hoisted_22 = {
  key: 1,
  class: "text-color-text-placeholder"
};
var _hoisted_23 = {
  key: 2,
  class: "text-color-text-placeholder"
};
var _hoisted_24 = {
  class: "flex-1 ml-2 overflow-hidden text-ellipsis whitespace-nowrap text-right text-color-none"
};
var _hoisted_25 = {
  "data-tag": "tiny-upload-list-icon",
  class: "sm:invisible absolute top-1/2 right-2 -translate-y-1/2 cursor-pointer"
};
var _hoisted_26 = ["onClick"];
var _hoisted_27 = {
  key: 1,
  "data-tag": "tiny-upload-list-drag-single",
  class: "border-dashed border-color-border text-center"
};
var _hoisted_28 = {
  key: 0
};
var _hoisted_29 = {
  key: 1,
  class: "h-full"
};
var _hoisted_30 = {
  key: 0
};
var _hoisted_31 = {
  class: "mt-4.5"
};
var _hoisted_32 = {
  class: "mt-1 pl-1 align-middle text-color-error text-xs"
};
var _hoisted_33 = {
  key: 1
};
var _hoisted_34 = {
  class: "relative inline-block w-12 h-12 mt-6 align-top"
};
var _hoisted_35 = {
  key: 0,
  class: "w-1/2 h-full absolute top-0 left-0 rounded-l overflow-hidden"
};
var _hoisted_36 = {
  key: 1,
  class: "w-1/2 h-full absolute top-0 left-1/2 rounded-r overflow-hidden"
};
var _hoisted_37 = {
  class: "mt-3 mb-2"
};
var _hoisted_38 = ["onClick"];
var _hoisted_39 = ["onKeydown"];
var _hoisted_40 = {
  class: "absolute top-0 left-0 w-full h-full"
};
var _hoisted_41 = ["src"];
var _hoisted_42 = ["src"];
var _hoisted_43 = ["src"];
var _hoisted_44 = {
  key: 1,
  class: "flex w-full h-full justify-center items-center border rounded border-transparent bg-color-info-secondary-subtle"
};
var _hoisted_45 = ["onLoadedmetadata", "onTimeupdate"];
var _hoisted_46 = ["src"];
var _hoisted_47 = ["src"];
var _hoisted_48 = ["src"];
var _hoisted_49 = ["src"];
var _hoisted_50 = ["title"];
var _hoisted_51 = {
  class: "absolute w-full top-1/2 left-0 -translate-y-1/2 z-[1] text-center hover:cursor-pointer"
};
var _hoisted_52 = {
  key: 0
};
var _hoisted_53 = {
  class: "mt-3 text-color-text-inverse text-xs"
};
var _hoisted_54 = {
  key: 1
};
var _hoisted_55 = {
  class: "block sm:group-hover:hidden"
};
var _hoisted_56 = {
  class: "mt-1 text-color-text-inverse text-xs"
};
var _hoisted_57 = {
  class: "hidden sm:group-hover:block"
};
var _hoisted_58 = {
  key: 2
};
var _hoisted_59 = {
  key: 1
};
var _hoisted_60 = ["onClick"];
var _hoisted_61 = {
  class: "absolute top-0 left-0 w-full h-full"
};
var _hoisted_62 = {
  "data-tag": "tiny-upload-list-download",
  class: "text-center"
};
var _hoisted_63 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "h-2 bg-color-bg-2"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_64 = {
  "data-tag": "tiny-upload-list-vadio-content",
  class: "text-center"
};
var _hoisted_65 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "h-2 bg-color-bg-2"
  },
  null,
  -1
  /* HOISTED */
);
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_cue_l_o = resolveComponent("icon-cue-l-o");
  var _component_icon_ellipsis = resolveComponent("icon-ellipsis");
  var _component_icon_error = resolveComponent("icon-error");
  var _component_tiny_progress = resolveComponent("tiny-progress");
  var _component_icon_fileupload_pro = resolveComponent("icon-fileupload-pro");
  var _component_icon_cue_l = resolveComponent("icon-cue-l");
  var _component_icon_refres = resolveComponent("icon-refres");
  var _component_icon_del = resolveComponent("icon-del");
  var _component_icon_eyeopen = resolveComponent("icon-eyeopen");
  var _component_icon_download = resolveComponent("icon-download");
  var _component_icon_right = resolveComponent("icon-right");
  var _component_icon_pause = resolveComponent("icon-pause");
  var _component_icon_audio = resolveComponent("icon-audio");
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  var _component_tiny_record = resolveComponent("tiny-record");
  return openBlock(), createElementBlock("div", _hoisted_1, [_ctx.listType === "text" || _ctx.listType === "saas" ? (openBlock(), createElementBlock(
    "div",
    {
      key: 0,
      "data-tag": "tiny-upload-list-text",
      ref: "uploadList",
      class: normalizeClass(["border-dashed border-color-border", [_ctx.state.files.length || _ctx.mode === "bubble" ? "sm:border-0" : "sm:border-t", {
        "sm:h-52 overflow-y-auto overflow-x-hidden": _ctx.mode === "bubble"
      }]])
    },
    [_ctx.state.files.length ? (openBlock(), createElementBlock("div", _hoisted_2, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.files, function(file, index) {
        return openBlock(), createElementBlock("div", {
          "data-tag": "tiny-upload-list-item",
          ref_for: true,
          ref: "uploadListLi",
          class: normalizeClass(["group relative sm:inline-block min-w-full py-1.5 px-3 mr-2 border-0.5 sm:border border-color-border-separator rounded hover:bg-color-bg-2", {
            "sm:border-color-brand border-color-border-separator": file.uid === (_ctx.selected && _ctx.selected.uid),
            "mb-2": index !== _ctx.state.files.length - 1,
            "sm:min-w-[theme(spacing.112)]": _ctx.compact
          }]),
          key: file.uid,
          tabindex: "0",
          onClick: function onClick($event) {
            return _ctx.$emit("click-file-list", file);
          }
        }, [renderSlot(_ctx.$slots, "default", {
          file
        }, function() {
          return [createElementVNode(
            "div",
            {
              "data-tag": "tiny-upload-list-status",
              class: normalizeClass(["relative inline-block w-8 h-8 mr-2 align-top mt-1 pt-px", {
                "bg-color-error rounded-sm": ~["fail"].indexOf(file.status)
              }])
            },
            [~["uploading"].indexOf(file.status) ? (openBlock(), createElementBlock(
              Fragment,
              {
                key: 0
              },
              [_hoisted_4, createElementVNode("div", _hoisted_5, [createElementVNode("div", _hoisted_6, [createElementVNode(
                "div",
                {
                  class: "bg-white h-full transition-all",
                  style: normalizeStyle({
                    width: _ctx.parsePercentage(Math.max(0, Math.min(file.percentage || 0, 100))) + "%"
                  })
                },
                null,
                4
                /* STYLE */
              )])])],
              64
              /* STABLE_FRAGMENT */
            )) : createCommentVNode("v-if", true), ~["uploading", "success", "downloading"].indexOf(file.status) ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.getFileIcon({
              type: _ctx.getFileType({
                file
              })
            }).name), {
              key: 1,
              "custom-class": "w-full h-full rounded-sm",
              style: normalizeStyle({
                fill: _ctx.getFileIcon({
                  type: _ctx.getFileType({
                    file
                  })
                }).color
              })
            }, null, 8, ["style"])) : createCommentVNode("v-if", true), ~["fail"].indexOf(file.status) ? (openBlock(), createElementBlock("div", _hoisted_7, [createVNode(_component_icon_cue_l_o, {
              class: "absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 fill-color-error"
            })])) : createCommentVNode("v-if", true)],
            2
            /* CLASS */
          ), createElementVNode("div", _hoisted_8, [createElementVNode("div", _hoisted_9, [createElementVNode("div", _hoisted_10, [createElementVNode("span", {
            title: file.name
          }, toDisplayString(file.name.split(".").filter(function(item, i, arr) {
            return arr.length - 1 > i || arr.length === 1;
          }).join(".")), 9, _hoisted_11), createElementVNode(
            "span",
            null,
            "." + toDisplayString(file.name.split(".")[file.name.split(".").length - 1]),
            1
            /* TEXT */
          )]), createElementVNode("div", _hoisted_12, [renderSlot(_ctx.$slots, "operate", {
            file
          }, function() {
            return [_ctx.handlePreview && ~["success", "downloading"].indexOf(file.status) ? (openBlock(), createElementBlock("span", {
              key: 0,
              class: "mr-2 cursor-pointer",
              onClick: function onClick($event) {
                return _ctx.handlePreview(file);
              }
            }, toDisplayString(_ctx.t("ui.uploadList.preview")), 9, _hoisted_13)) : createCommentVNode("v-if", true), _ctx.handleDownloadFile && !~["fail", "uploading"].indexOf(file.status) ? (openBlock(), createElementBlock("span", {
              key: 1,
              class: "mr-2 cursor-pointer",
              onClick: function onClick($event) {
                return _ctx.handleDownloadFile(file);
              }
            }, toDisplayString(_ctx.t("ui.uploadList.download")), 9, _hoisted_14)) : createCommentVNode("v-if", true), (_ctx.isEdm ? true : _ctx.handleReUpload) && ~["fail"].indexOf(file.status) ? (openBlock(), createElementBlock("span", {
              key: 2,
              class: "mr-2 cursor-pointer",
              onClick: function onClick($event) {
                return _ctx.reUpload(file);
              }
            }, toDisplayString(_ctx.t("ui.uploadList.reUpload")), 9, _hoisted_15)) : createCommentVNode("v-if", true), !_ctx.displayOnly ? (openBlock(), createElementBlock("span", {
              key: 3,
              class: "cursor-pointer",
              onClick: withModifiers(function($event) {
                return _ctx.remove({
                  file
                });
              }, ["stop"])
            }, toDisplayString(_ctx.t("ui.uploadList.delete")), 9, _hoisted_16)) : createCommentVNode("v-if", true)];
          })])]), createElementVNode("div", _hoisted_17, [createElementVNode("span", _hoisted_18, [~["fail"].indexOf(file.status) ? (openBlock(), createElementBlock("span", _hoisted_19, [createElementVNode(
            "span",
            _hoisted_20,
            toDisplayString(_ctx.t("ui.uploadList.uploadFailed")),
            1
            /* TEXT */
          ), createElementVNode(
            "span",
            _hoisted_21,
            toDisplayString(_ctx.t("ui.uploadList.uploadFailedAndReupload")),
            1
            /* TEXT */
          )])) : ~["uploading"].indexOf(file.status) ? (openBlock(), createElementBlock(
            "span",
            _hoisted_22,
            toDisplayString(_ctx.formatFileSize(file.size * file.percentage / 100) + "/" + _ctx.formatFileSize(file.size)),
            1
            /* TEXT */
          )) : (openBlock(), createElementBlock(
            "span",
            _hoisted_23,
            toDisplayString(_ctx.formatFileSize(file.size)),
            1
            /* TEXT */
          ))]), createElementVNode("span", _hoisted_24, [renderSlot(_ctx.$slots, "assist-content", {
            file
          })])]), createElementVNode("div", _hoisted_25, [~["success", "downloading"].indexOf(file.status) ? (openBlock(), createBlock(_component_icon_ellipsis, {
            key: 0,
            onClick: function onClick($event) {
              return _ctx.showOperatePanel({
                file
              });
            },
            class: "fill-color-text-primary"
          }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), !_ctx.displayOnly && ~["uploading", "fail"].indexOf(file.status) ? (openBlock(), createBlock(_component_icon_error, {
            key: 1,
            class: "fill-color-none-hover",
            onClick: withModifiers(function($event) {
              return _ctx.remove({
                file
              });
            }, ["stop"])
          }, null, 8, ["onClick"])) : createCommentVNode("v-if", true)]), createElementVNode("div", {
            class: "absolute left-0 top-0 w-[calc(100%-theme(spacing.10))] h-full mr-10 sm:hidden sm:mr-0",
            onClick: function onClick($event) {
              return _ctx.reUpload(file);
            }
          }, null, 8, _hoisted_26)])];
        }), file.showDownloadBar ? (openBlock(), createBlock(_component_tiny_progress, {
          key: 0,
          class: "absolute left-0 bottom-0 w-full",
          "show-text": false,
          "stroke-width": 4,
          percentage: file.downloadPercentage || 0,
          status: file.downloadStatus || "default"
        }, null, 8, ["percentage", "status"])) : createCommentVNode("v-if", true)], 10, _hoisted_3);
      }),
      128
      /* KEYED_FRAGMENT */
    ))])) : (openBlock(), createElementBlock(
      "div",
      {
        key: 1,
        "data-tag": "tiny-upload-list-noattachments",
        class: normalizeClass(["mt-4 text-color-none text-xs sm:block", _ctx.displayOnly ? "" : "hidden"])
      },
      toDisplayString(_ctx.t("ui.uploadList.noAttachments")),
      3
      /* TEXT, CLASS */
    ))],
    2
    /* CLASS */
  )) : _ctx.listType === "drag-single" ? (openBlock(), createElementBlock("div", _hoisted_27, [renderSlot(_ctx.$slots, "upload"), createElementVNode(
    "div",
    {
      class: normalizeClass(["absolute w-full h-full top-0 left-0", [_ctx.files.length ? "z-0" : "z-[-1]"]])
    },
    [!_ctx.files.length ? (openBlock(), createElementBlock("div", _hoisted_28, [createVNode(_component_icon_fileupload_pro, {
      "custom-class": "w-20 h-20 mt-6",
      class: normalizeClass([_ctx.isDragover ? "fill-color-brand" : "fill-color-none-hover"])
    }, null, 8, ["class"]), createElementVNode(
      "div",
      {
        class: normalizeClass(["mb-0.5 text-sm text-color-text-secondary", _ctx.isDragover ? "mt-4" : ""])
      },
      toDisplayString(_ctx.isDragover ? _ctx.t("ui.uploadList.releaseAndUpload") : _ctx.t("ui.uploadList.dragOrClickImport")),
      3
      /* TEXT, CLASS */
    ), !_ctx.isDragover ? renderSlot(_ctx.$slots, "tip", {
      key: 0
    }) : createCommentVNode("v-if", true)])) : (openBlock(), createElementBlock("div", _hoisted_29, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.files, function(file) {
        return openBlock(), createElementBlock("div", {
          key: file.uid,
          tabindex: "0"
        }, [renderSlot(_ctx.$slots, "default", {
          file
        }, function() {
          return [["fail"].includes(file.status) ? (openBlock(), createElementBlock("div", _hoisted_30, [createVNode(_component_icon_fileupload_pro, {
            "custom-class": "w-12 h-12 mt-6",
            class: normalizeClass([_ctx.isDragover ? "fill-color-brand" : "fill-color-none-hover"])
          }, null, 8, ["class"]), createElementVNode("div", _hoisted_31, [createVNode(_component_icon_cue_l, {
            class: "fill-color-error"
          }), createElementVNode(
            "span",
            _hoisted_32,
            toDisplayString(_ctx.t("ui.uploadList.uploadFailed")),
            1
            /* TEXT */
          )])])) : (openBlock(), createElementBlock("div", _hoisted_33, [createElementVNode("div", _hoisted_34, [~["uploading"].indexOf(file.status) ? (openBlock(), createElementBlock("div", _hoisted_35, [createElementVNode(
            "div",
            {
              class: "absolute w-16 h-16 top-1/2 right-0 origin-right bg-color-bg-7",
              style: normalizeStyle({
                transform: "translateY(-50%) rotate(" + _ctx.parsePercentage(Math.max(0, Math.min(file.percentage || 0, 100) - 50) / 50 * 180) + "deg)"
              })
            },
            null,
            4
            /* STYLE */
          )])) : createCommentVNode("v-if", true), ~["uploading"].indexOf(file.status) ? (openBlock(), createElementBlock("div", _hoisted_36, [createElementVNode(
            "div",
            {
              class: "absolute w-16 h-16 top-1/2 left-0 origin-left bg-color-bg-7",
              style: normalizeStyle({
                transform: "translateY(-50%) rotate(" + _ctx.parsePercentage(Math.min(50, file.percentage || 0) / 50 * 180) + "deg)"
              })
            },
            null,
            4
            /* STYLE */
          )])) : createCommentVNode("v-if", true), ~["uploading", "success", "downloading"].indexOf(file.status) ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.getFileIcon({
            type: _ctx.getFileType({
              file
            })
          }).name), {
            key: 2,
            "custom-class": "w-full h-full rounded-sm",
            style: normalizeStyle({
              fill: _ctx.getFileIcon({
                type: _ctx.getFileType({
                  file
                })
              }).color
            })
          }, null, 8, ["style"])) : createCommentVNode("v-if", true)]), createElementVNode(
            "div",
            _hoisted_37,
            toDisplayString(file.name),
            1
            /* TEXT */
          ), createElementVNode("div", null, [createElementVNode("span", {
            class: "text-color-brand cursor-pointer",
            onClick: withModifiers(function($event) {
              return _ctx.remove({
                file
              });
            }, ["stop"])
          }, toDisplayString(_ctx.t("ui.uploadList.delete")), 9, _hoisted_38)])]))];
        })]);
      }),
      128
      /* KEYED_FRAGMENT */
    ))]))],
    2
    /* CLASS */
  )])) : (openBlock(), createElementBlock(
    "div",
    {
      key: 2,
      "data-tag": "tiny-upload-list-picture-card",
      class: normalizeClass([{
        "grid grid-cols-3 gap-x-4 sm:grid-cols-[repeat(auto-fit,theme(spacing.24))]": _ctx.listType === "picture-card"
      }, _ctx.showName ? "gap-y-8" : "gap-y-4"])
    },
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.files, function(file, index) {
        return openBlock(), createElementBlock("div", {
          class: normalizeClass(["group relative", {
            "hidden": _ctx.listType === "picture-single" && index
          }, _ctx.listType === "picture-single" ? "w-24 h-24 sm:w-[calc(" + _ctx.scale + "*theme(spacing.20))] sm:h-20" : "w-full pt-[100%]"]),
          key: file.uid,
          tabindex: "0",
          onKeydown: withKeys(function($event) {
            return !_ctx.disabled && _ctx.remove({
              file
            });
          }, ["delete"])
        }, [createElementVNode("div", _hoisted_40, [renderSlot(_ctx.$slots, "default", {
          file
        }, function() {
          return [!_ctx.displayOnly && (file.status !== "uploading" || ~["video", "audio"].indexOf(file.type)) ? (openBlock(), createBlock(_component_icon_error, {
            key: 0,
            class: normalizeClass(["absolute w-5 h-5 -top-1.5 fill-color-none-hover hover:cursor-pointer z-[1]", [{
              "sm:hidden -top-1.5": !~["video", "audio"].indexOf(file.type)
            }, _ctx.listType === "picture-single" ? "-right-1.5" : "-right-1.5"]]),
            onClick: withModifiers(function($event) {
              return _ctx.remove({
                file
              });
            }, ["stop"])
          }, null, 8, ["class", "onClick"])) : createCommentVNode("v-if", true), createElementVNode(
            "div",
            {
              style: normalizeStyle({
                background: _ctx.imageBgColor
              }),
              class: normalizeClass(["relative w-full h-full after:absolute after:w-full after:h-full after:left-0 after:top-0 after:rounded after:bg-color-bg-7", [!~["uploading", "fail"].indexOf(file.status) ? "after:hidden sm:after:group-hover:block" : "", {
                "mb-7": _ctx.listType === "picture-card" && _ctx.showName
              }, ~["video", "audio"].indexOf(file.type) ? "after:opacity-0" : "after:opacity-50"]])
            },
            [file.type === "video" ? (openBlock(), createElementBlock(
              "video",
              {
                key: 0,
                ref_for: true,
                ref: "video" + (file.uid || index),
                class: "w-full h-full border rounded object-cover"
              },
              [createElementVNode("source", {
                src: file.url,
                type: "video/mp4"
              }, null, 8, _hoisted_41), createElementVNode("source", {
                src: file.url,
                type: "video/ogg"
              }, null, 8, _hoisted_42), createElementVNode("source", {
                src: file.url,
                type: "video/webm"
              }, null, 8, _hoisted_43)],
              512
              /* NEED_PATCH */
            )) : file.type === "audio" ? (openBlock(), createElementBlock("div", _hoisted_44, [createElementVNode("audio", {
              ref_for: true,
              ref: "audio" + (file.uid || index),
              onLoadedmetadata: function onLoadedmetadata($event) {
                _ctx.handleLoadedmetadata({
                  e: $event,
                  file
                });
              },
              onTimeupdate: function onTimeupdate($event) {
                _ctx.handleTimeupdate({
                  e: $event,
                  file
                });
              }
            }, [createElementVNode("source", {
              src: file.url,
              type: "video/mp3"
            }, null, 8, _hoisted_46), createElementVNode("source", {
              src: file.url,
              type: "video/ogg"
            }, null, 8, _hoisted_47), createElementVNode("source", {
              src: file.url,
              type: "video/wav"
            }, null, 8, _hoisted_48)], 40, _hoisted_45)])) : (openBlock(), createElementBlock("img", {
              key: 2,
              class: "w-full h-full border rounded",
              src: file.url,
              alt: ""
            }, null, 8, _hoisted_49)), createElementVNode("div", {
              title: file.name,
              class: normalizeClass(["mt-2 overflow-hidden overflow-ellipsis whitespace-nowrap text-color-text-primary text-xs", {
                "hidden": !_ctx.showName
              }])
            }, toDisplayString(file.name), 11, _hoisted_50), createElementVNode("div", _hoisted_51, [~["uploading"].indexOf(file.status) ? (openBlock(), createElementBlock("div", _hoisted_52, [createVNode(_component_tiny_progress, {
              class: "inline-block w-[calc(100%-theme(spacing.10))]",
              percentage: _ctx.parsePercentage(file.percentage),
              "show-text": false,
              "stroke-width": 4,
              color: "#fff"
            }, null, 8, ["percentage"]), createElementVNode(
              "div",
              _hoisted_53,
              toDisplayString(~["video", "audio"].indexOf(file.type) ? _ctx.t("ui.uploadList.uploading") : _ctx.t("ui.uploadList.pictureUploading")),
              1
              /* TEXT */
            )])) : ~["fail"].indexOf(file.status) ? (openBlock(), createElementBlock("div", _hoisted_54, [createElementVNode("span", _hoisted_55, [createVNode(_component_icon_cue_l, {
              class: "w-6 h-6 fill-color-icon-inverse"
            }), createElementVNode(
              "div",
              _hoisted_56,
              toDisplayString(_ctx.t("ui.uploadList.uploadFailed")),
              1
              /* TEXT */
            )]), createElementVNode("span", _hoisted_57, [(_ctx.isEdm ? true : _ctx.handleReUpload) ? (openBlock(), createBlock(_component_icon_refres, {
              key: 0,
              class: "w-6 h-6 mr-2 fill-color-icon-inverse",
              onClick: function onClick($event) {
                return _ctx.reUpload(file);
              }
            }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), !_ctx.displayOnly && _ctx.listType !== "picture-single" ? (openBlock(), createBlock(_component_icon_del, {
              key: 1,
              class: "w-6 h-6 fill-color-icon-inverse",
              onClick: withModifiers(function($event) {
                return _ctx.remove({
                  file
                });
              }, ["stop"])
            }, null, 8, ["onClick"])) : createCommentVNode("v-if", true)])])) : (openBlock(), createElementBlock("div", _hoisted_58, [createElementVNode(
              "div",
              {
                class: normalizeClass(["hidden", {
                  "sm:group-hover:block": !~["video", "audio"].indexOf(file.type)
                }])
              },
              [renderSlot(_ctx.$slots, "operate", {
                file
              }, function() {
                return [_ctx.handlePreview ? (openBlock(), createBlock(_component_icon_eyeopen, {
                  key: 0,
                  class: "w-6 h-6 mr-2 fill-color-icon-inverse",
                  onClick: function onClick($event) {
                    return _ctx.handlePreview(file);
                  }
                }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), _ctx.handleDownloadFile ? (openBlock(), createBlock(_component_icon_download, {
                  key: 1,
                  class: "w-6 h-6 mr-2 fill-color-icon-inverse",
                  onClick: function onClick($event) {
                    return _ctx.handleDownloadFile(file);
                  }
                }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), !_ctx.displayOnly ? (openBlock(), createBlock(_component_icon_del, {
                  key: 2,
                  class: "w-6 h-6 fill-color-icon-inverse",
                  onClick: withModifiers(function($event) {
                    return _ctx.remove({
                      file
                    });
                  }, ["stop"])
                }, null, 8, ["onClick"])) : createCommentVNode("v-if", true)];
              })],
              2
              /* CLASS */
            ), file.type === "video" ? (openBlock(), createElementBlock(
              "div",
              {
                key: 0,
                class: normalizeClass(["inline-block w-8 h-8 text-center rounded-full group-hover:bg-color-bg-7", !file.isPlay ? "bg-color-bg-7" : "bg-opacity-0"])
              },
              [withDirectives(createVNode(_component_icon_right, {
                class: "w-4 h-4 mt-2 fill-color-icon-inverse",
                onClick: function onClick($event) {
                  return _ctx.play({
                    file,
                    index,
                    type: "video"
                  });
                }
              }, null, 8, ["onClick"]), [[vShow, !file.isPlay]]), withDirectives(createVNode(_component_icon_pause, {
                class: "w-6 h-6 hidden group-hover:inline-block mt-1 fill-color-icon-inverse",
                onClick: function onClick($event) {
                  return _ctx.pause({
                    file,
                    index,
                    type: "video"
                  });
                }
              }, null, 8, ["onClick"]), [[vShow, file.isPlay]])],
              2
              /* CLASS */
            )) : createCommentVNode("v-if", true), file.type === "audio" ? (openBlock(), createElementBlock("div", _hoisted_59, [createVNode(_component_icon_audio, {
              class: "w-6 h-6 fill-color-brand",
              onClick: function onClick($event) {
                return _ctx.play({
                  file,
                  index,
                  type: "audio"
                });
              }
            }, null, 8, ["onClick"]), createElementVNode(
              "div",
              null,
              toDisplayString((file.currentSecond || 0) + " / " + (file.totalSecond || 0)),
              1
              /* TEXT */
            )])) : createCommentVNode("v-if", true)]))])],
            6
            /* CLASS, STYLE */
          ), _ctx.handlePreview && ~["success"].indexOf(file.status) ? (openBlock(), createElementBlock("div", {
            key: 1,
            class: "absolute w-full h-full left-0 top-0 sm:hidden",
            onClick: function onClick($event) {
              return _ctx.handlePreview(file);
            }
          }, null, 8, _hoisted_60)) : createCommentVNode("v-if", true)];
        })])], 42, _hoisted_39);
      }),
      128
      /* KEYED_FRAGMENT */
    )), (openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.types, function(type, i) {
        return openBlock(), createElementBlock(
          "div",
          {
            key: i,
            class: normalizeClass(["relative", [_ctx.listType === "picture-single" ? "w-24 h-24 sm:w-[calc(" + _ctx.scale + "*theme(spacing.20))] sm:h-20" : "pt-[100%]", {
              "hidden": _ctx.displayOnly && _ctx.files.length
            }, {
              "hidden": !_ctx.displayOnly && _ctx.listType === "picture-single" && _ctx.files.length
            }]])
          },
          [createElementVNode("div", _hoisted_61, [renderSlot(_ctx.$slots, "upload", {
            type
          })])],
          2
          /* CLASS */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))],
    2
    /* CLASS */
  )), createVNode(_component_tiny_action_sheet, {
    "show-header": false,
    "lock-scroll": _ctx.lockScroll,
    visible: _ctx.state.showPanel,
    "onUpdate:visible": _cache[4] || (_cache[4] = function($event) {
      return _ctx.state.showPanel = $event;
    }),
    "custom-class": "!min-h-0 py-0"
  }, {
    default: withCtx(function() {
      return [renderSlot(_ctx.$slots, "operate", {
        file: _ctx.state.currentFile || {}
      }, function() {
        return [createElementVNode("div", _hoisted_62, [_ctx.handleDownloadFile ? (openBlock(), createElementBlock(
          "div",
          {
            key: 0,
            class: "h-12 flex items-center justify-center border-b border-color-border-separator cursor-pointer",
            onClick: _cache[0] || (_cache[0] = function() {
              _ctx.state.showPanel = false;
              _ctx.handleDownloadFile(_ctx.state.currentFile);
            })
          },
          toDisplayString(_ctx.t("ui.uploadList.download")),
          1
          /* TEXT */
        )) : createCommentVNode("v-if", true), _ctx.handlePreview ? (openBlock(), createElementBlock(
          "div",
          {
            key: 1,
            "data-tag": "tiny-upload-list-handle-preview",
            class: "h-12 flex items-center justify-center border-b border-color-border-separator cursor-pointer",
            onClick: _cache[1] || (_cache[1] = function() {
              _ctx.state.showPanel = false;
              _ctx.handlePreview(_ctx.state.currentFile);
            })
          },
          toDisplayString(_ctx.t("ui.uploadList.preview")),
          1
          /* TEXT */
        )) : createCommentVNode("v-if", true), !_ctx.displayOnly ? (openBlock(), createElementBlock(
          "div",
          {
            key: 2,
            "data-tag": "tiny-upload-list-panel",
            class: "h-12 flex items-center justify-center cursor-pointer",
            onClick: _cache[2] || (_cache[2] = withModifiers(function() {
              _ctx.state.showPanel = false;
              _ctx.remove({
                file: _ctx.state.currentFile
              });
            }, ["stop"]))
          },
          toDisplayString(_ctx.t("ui.uploadList.delete")),
          1
          /* TEXT */
        )) : createCommentVNode("v-if", true), _hoisted_63, createElementVNode(
          "div",
          {
            class: "h-12 flex items-center justify-center cursor-pointer",
            onClick: _cache[3] || (_cache[3] = function($event) {
              return _ctx.state.showPanel = false;
            })
          },
          toDisplayString(_ctx.t("ui.uploadList.cancel")),
          1
          /* TEXT */
        )])];
      })];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["lock-scroll", "visible"]), createVNode(_component_tiny_action_sheet, {
    "show-header": false,
    "lock-scroll": _ctx.lockScroll,
    visible: _ctx.state.showTriggerPanel,
    "onUpdate:visible": _cache[8] || (_cache[8] = function($event) {
      return _ctx.state.showTriggerPanel = $event;
    }),
    "custom-class": "!min-h-0 py-0"
  }, {
    default: withCtx(function() {
      return [createElementVNode("div", _hoisted_64, [createElementVNode(
        "div",
        {
          class: "h-12 flex items-center justify-center cursor-pointer",
          onClick: _cache[5] || (_cache[5] = function($event) {
            return _ctx.handleTriggerClick($event, _ctx.state.triggerClickType === "video" ? 3 : 2);
          })
        },
        toDisplayString(_ctx.t("ui.uploadList.shoot")),
        1
        /* TEXT */
      ), createElementVNode(
        "div",
        {
          class: "h-12 flex items-center justify-center cursor-pointer",
          onClick: _cache[6] || (_cache[6] = function($event) {
            return _ctx.handleTriggerClick($event, 1);
          })
        },
        toDisplayString(_ctx.t("ui.uploadList.selectFromAlbum")),
        1
        /* TEXT */
      ), _hoisted_65, createElementVNode(
        "div",
        {
          class: "h-12 flex items-center justify-center cursor-pointer",
          onClick: _cache[7] || (_cache[7] = function($event) {
            return _ctx.state.showTriggerPanel = false;
          })
        },
        toDisplayString(_ctx.t("ui.uploadList.cancel")),
        1
        /* TEXT */
      )])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["lock-scroll", "visible"]), createVNode(_component_tiny_record, {
    "is-hwh5": _ctx.isHwh5,
    onTriggerClick: _ctx.handleTriggerClick,
    modelValue: _ctx.state.showAudioPanel,
    "onUpdate:modelValue": _cache[9] || (_cache[9] = function($event) {
      return _ctx.state.showAudioPanel = $event;
    })
  }, null, 8, ["is-hwh5", "onTriggerClick", "modelValue"])]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

import { props, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/upload-list/vue';
import Progress from '@opentiny/vue-progress';
import ImageViewer from '@opentiny/vue-image-viewer';
import { IconAttachment, IconCloseCircle, IconError } from '@opentiny/vue-icon';
import Modal from '@opentiny/vue-modal';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, TransitionGroup, withCtx, Fragment, renderList, withKeys, renderSlot, createCommentVNode, createBlock, withModifiers, createElementVNode, toDisplayString } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = {
  components: {
    TinyProgress: Progress,
    TinyImageViewer: ImageViewer,
    IconAttachment: IconAttachment(),
    IconCloseCircle: IconCloseCircle(),
    IconError: IconError()
  },
  emits: ["remove", "start", "update:visible"],
  props: [].concat(props, ["disabled", "display", "files", "filesIcon", "handlePreview", "isEdm", "isFolder", "listType", "openDownloadFile", "srcList", "isFolderTitle", "listOption", "maxNameLength", "mode"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        Modal
      }
    });
  }
};
var _hoisted_1 = ["onKeydown", "onClick"];
var _hoisted_2 = {
  key: 0,
  class: "tiny-mobile-upload-list__card"
};
var _hoisted_3 = ["src"];
var _hoisted_4 = {
  key: 1,
  class: "tiny-mobile-upload-list__list"
};
var _hoisted_5 = {
  class: "file-type"
};
var _hoisted_6 = ["src"];
var _hoisted_7 = ["onClick"];
var _hoisted_8 = {
  class: "tiny-mobile-upload-list__text-details file-name"
};
var _hoisted_9 = {
  class: "tiny-mobile-upload-list__text-details file-size"
};
var _hoisted_10 = {
  class: "file-delete"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_error = resolveComponent("icon-error");
  var _component_tiny_progress = resolveComponent("tiny-progress");
  var _component_icon_attachment = resolveComponent("icon-attachment");
  var _component_icon_close_circle = resolveComponent("icon-close-circle");
  var _component_tiny_image_viewer = resolveComponent("tiny-image-viewer");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-mobile-upload-list", "tiny-mobile-upload-list--" + $props.listType, {
        "is-disabled": $props.disabled
      }])
    },
    [createVNode(TransitionGroup, {
      tag: "ul",
      name: "tiny-list"
    }, {
      default: withCtx(function() {
        return [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList($props.files, function(file, index) {
            return openBlock(), createElementBlock("li", {
              class: normalizeClass(["tiny-mobile-upload-list__item", "is-" + file.status, _ctx.state.focusing ? "focusing" : ""]),
              key: file.uid,
              tabindex: "0",
              onKeydown: withKeys(function($event) {
                return !$props.disabled && _ctx.$emit("remove", file);
              }, ["delete"]),
              onClick: function onClick($event) {
                return _ctx.picturefilePreview(index);
              }
            }, [renderSlot(_ctx.$slots, "default", {
              file
            }, function() {
              return [["picture-card"].indexOf($props.listType) > -1 ? (openBlock(), createElementBlock("div", _hoisted_2, [file.status !== "uploading" && ["picture-card"].indexOf($props.listType) > -1 ? (openBlock(), createElementBlock("img", {
                key: 0,
                class: "tiny-mobile-upload-list__item-thumbnail",
                src: file.url,
                alt: ""
              }, null, 8, _hoisted_3)) : createCommentVNode("v-if", true), $props.listType === "picture-card" && $props.display ? (openBlock(), createBlock(_component_icon_error, {
                key: 1,
                class: "icon-close card-close",
                onClick: withModifiers(function($event) {
                  return _ctx.$emit("remove", file);
                }, ["stop"])
              }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), file.status === "uploading" ? (openBlock(), createBlock(_component_tiny_progress, {
                key: 2,
                type: "circle",
                percentage: _ctx.parsePercentage(file.percentage),
                "stroke-width": 1.4,
                width: 32
              }, null, 8, ["percentage"])) : createCommentVNode("v-if", true)])) : (openBlock(), createElementBlock("div", _hoisted_4, [createElementVNode("div", _hoisted_5, [$props.filesIcon.length === 0 ? (openBlock(), createBlock(_component_icon_attachment, {
                key: 0
              })) : createCommentVNode("v-if", true), (openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList($props.filesIcon, function(item) {
                  return openBlock(), createElementBlock(
                    Fragment,
                    null,
                    [$props.filesIcon && _ctx.state.screenType && file.fileType === item.type ? (openBlock(), createElementBlock("img", {
                      class: normalizeClass(["file-type-icon", "is-" + item.type]),
                      key: item.type,
                      src: item.url
                    }, null, 10, _hoisted_6)) : createCommentVNode("v-if", true)],
                    64
                    /* STABLE_FRAGMENT */
                  );
                }),
                256
                /* UNKEYED_FRAGMENT */
              ))]), createElementVNode("div", {
                class: "tiny-mobile-upload-list__text file-content",
                onClick: function onClick($event) {
                  return _ctx.handleClick(file);
                }
              }, [createElementVNode(
                "p",
                _hoisted_8,
                toDisplayString(file.name),
                1
                /* TEXT */
              ), createElementVNode(
                "p",
                _hoisted_9,
                toDisplayString(file.size),
                1
                /* TEXT */
              ), file.status === "uploading" ? (openBlock(), createBlock(_component_tiny_progress, {
                key: 0,
                "show-text": false,
                "stroke-width": 2,
                percentage: _ctx.parsePercentage(file.percentage)
              }, null, 8, ["percentage"])) : createCommentVNode("v-if", true)], 8, _hoisted_7), createElementVNode("div", _hoisted_10, [$props.listType !== "picture-card" && $props.display ? (openBlock(), createBlock(_component_icon_close_circle, {
                key: 0,
                class: "icon-close",
                onClick: function onClick($event) {
                  return _ctx.$emit("remove", file);
                }
              }, null, 8, ["onClick"])) : createCommentVNode("v-if", true)])]))];
            })], 42, _hoisted_1);
          }),
          128
          /* KEYED_FRAGMENT */
        ))];
      }),
      _: 3
      /* FORWARDED */
    }), $props.listType === "picture-card" ? (openBlock(), createBlock(_component_tiny_image_viewer, {
      key: 0,
      "url-list": $props.srcList,
      "close-show": true,
      "show-index": true,
      startPosition: _ctx.state.startPostion,
      "tool-show": "",
      "onUpdate:previewVisible": _cache[0] || (_cache[0] = function($event) {
        return _ctx.state.shows = $event;
      }),
      "delete-button": "",
      onNewImageList: _ctx.getDeleteData
    }, null, 8, ["url-list", "startPosition", "onNewImageList"])) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  );
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobile as default };

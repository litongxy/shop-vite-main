import { renderless, api } from '@opentiny/vue-renderless/card-template/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { iconEdit, iconHelp, iconMore, iconClose, iconExcel } from '@opentiny/vue-icon';
import { openBlock, createElementBlock, normalizeClass, renderSlot, createElementVNode, toDisplayString, Fragment, renderList, withModifiers, createBlock, resolveDynamicComponent, withDirectives, createTextVNode, vShow, createCommentVNode, normalizeStyle } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["tools", "header", "bodyStyle", "headerLine"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  },
  components: {
    IconEdit: iconEdit(),
    IconHelp: iconHelp(),
    IconMore: iconMore(),
    IconClose: iconClose(),
    IconExcel: iconExcel()
  }
});
var _hoisted_1 = {
  ref: "item",
  class: "tiny-card-template"
};
var _hoisted_2 = {
  class: "tiny-card-template__title"
};
var _hoisted_3 = {
  key: 0,
  class: "tiny-card-template__tools"
};
var _hoisted_4 = {
  class: "tiny-card-template__list"
};
var _hoisted_5 = ["title", "onClick"];
var _hoisted_6 = {
  class: "tiny-poplist"
};
var _hoisted_7 = ["title", "onClick"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "div",
    _hoisted_1,
    [_ctx.slots.header || _ctx.header || _ctx.tools && _ctx.tools.length ? (openBlock(), createElementBlock(
      "div",
      {
        key: 0,
        class: normalizeClass([{
          "is-line": _ctx.headerLine
        }, "tiny-card-template__header"])
      },
      [renderSlot(_ctx.$slots, "header", {}, function() {
        return [createElementVNode(
          "span",
          _hoisted_2,
          toDisplayString(_ctx.header),
          1
          /* TEXT */
        )];
      }), _ctx.tools && _ctx.tools.length ? (openBlock(), createElementBlock("div", _hoisted_3, [createElementVNode("ul", _hoisted_4, [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.currentTools, function(item, index) {
          return openBlock(), createElementBlock("li", {
            key: index,
            title: item.title,
            onClick: withModifiers(item.click, ["stop"])
          }, [(openBlock(), createBlock(resolveDynamicComponent(item.icon), {
            class: "tiny-svg-size"
          }))], 8, _hoisted_5);
        }),
        128
        /* KEYED_FRAGMENT */
      ))]), withDirectives(createElementVNode(
        "div",
        {
          ref: "selector",
          class: "tiny-selector tiny-card-template__more",
          onMouseleave: _cache[0] || (_cache[0] = function($event) {
            return _ctx.state.showMoreTools = false;
          })
        },
        [createElementVNode("ul", _hoisted_6, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.moreTools, function(item, index) {
            return openBlock(), createElementBlock("li", {
              key: index,
              title: item.title,
              class: normalizeClass({
                "select-pre": _ctx.state.isEnter
              }),
              onClick: function onClick($event) {
                return _ctx.toolClick(item.click);
              }
            }, [(openBlock(), createBlock(resolveDynamicComponent(item.icon), {
              class: "tiny-svg-size"
            })), createTextVNode(
              " " + toDisplayString(item.title),
              1
              /* TEXT */
            )], 10, _hoisted_7);
          }),
          128
          /* KEYED_FRAGMENT */
        ))])],
        544
        /* NEED_HYDRATION, NEED_PATCH */
      ), [[vShow, _ctx.state.moreTools && _ctx.state.moreTools.length && _ctx.state.showMoreTools]])])) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true), createElementVNode(
      "div",
      {
        style: normalizeStyle(_ctx.bodyStyle),
        class: "tiny-card-template__body"
      },
      [renderSlot(_ctx.$slots, "default")],
      4
      /* STYLE */
    ), renderSlot(_ctx.$slots, "footer")],
    512
    /* NEED_PATCH */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

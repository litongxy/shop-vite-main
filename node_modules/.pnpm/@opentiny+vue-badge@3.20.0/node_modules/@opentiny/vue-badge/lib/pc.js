import { renderless, api } from '@opentiny/vue-renderless/badge/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import '@opentiny/vue-theme/badge/index.css';
import { openBlock, createElementBlock, toDisplayString, renderSlot, normalizeClass, normalizeStyle, createCommentVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["isDot", "hidden", "type", "max", "value", "modelValue", "href", "target", "badgeClass", "offset", "data"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-badge__wrapper"
};
var _hoisted_2 = {
  key: 0
};
var _hoisted_3 = ["href", "target"];
var _hoisted_4 = {
  key: 1,
  class: "tiny-badge__content-text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [_ctx.data ? (openBlock(), createElementBlock(
    "span",
    _hoisted_2,
    toDisplayString(_ctx.data),
    1
    /* TEXT */
  )) : renderSlot(_ctx.$slots, "default", {
    key: 1
  }), !_ctx.hidden && (_ctx.state.content || _ctx.state.content === 0 || _ctx.isDot) ? (openBlock(), createElementBlock(
    "div",
    {
      key: 2,
      class: normalizeClass(["tiny-badge", [_ctx.isDot ? "tiny-badge--default" : "", _ctx.state.isOverstep ? "tiny-badge--max" : "", _ctx.type ? "tiny-badge--" + _ctx.type : "", _ctx.badgeClass || ""]]),
      style: normalizeStyle(!_ctx.isDot ? _ctx.state.transform : "")
    },
    [renderSlot(_ctx.$slots, "content", {}, function() {
      return [_ctx.state.href ? (openBlock(), createElementBlock("a", {
        key: 0,
        href: _ctx.state.href,
        target: _ctx.target,
        rel: "noopener noreferrer"
      }, toDisplayString(_ctx.state.content), 9, _hoisted_3)) : createCommentVNode("v-if", true), !_ctx.state.href ? (openBlock(), createElementBlock(
        "span",
        _hoisted_4,
        toDisplayString(_ctx.state.content),
        1
        /* TEXT */
      )) : createCommentVNode("v-if", true)];
    })],
    6
    /* CLASS, STYLE */
  )) : createCommentVNode("v-if", true)]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

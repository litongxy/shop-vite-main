import { renderless, api } from '@opentiny/vue-renderless/badge/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { openBlock, createElementBlock, normalizeClass, toDisplayString, renderSlot, createCommentVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var classes = {
  "primary-status": "inline-flex items-center justify-center leading-4 relative",
  "dot-showleft": "ml-2.5",
  "dot-showleft-child": "w-1.5 h-1.5 absolute -left-2.5 ml-0",
  "primary-status-child": "rounded-xl bg-color-error",
  "type-danger": "bg-color-error",
  "type-primary": "bg-color-brand",
  "type-success": "bg-color-success",
  "type-warning": "bg-color-alert",
  "type-default": "bg-color-error",
  "type-info": "bg-color-border",
  "type-icon": "h-1.5 self-start -ml-1.5 z-10",
  "circle": "min-w-[theme(spacing.4)] h-4 px-1 py-0 ml-1 text-color-bg-1 text-xs text-center box-border",
  "circle-icon-label": "box-border -ml-2 -mt-1.5",
  "dot-default-icon-label": "w-1.5 h-1.5 self-start z-10",
  "dot-default": "w-1.5 h-1.5 ml-1",
  "state-href": "!text-color-bg-1 !no-underline",
  "state-not-href": "inline-block align-top"
};
var _sfc_main = defineComponent({
  props: [].concat(props, ["showLeft", "isDot", "hidden", "type", "max", "value", "modelValue", "href", "target", "data"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      classes
    });
  }
});
var _hoisted_1 = {
  key: 0
};
var _hoisted_2 = ["href", "target"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-badge",
      class: normalizeClass(_ctx.m(_ctx.gcls("primary-status"), _ctx.gcls({
        "dot-showleft": _ctx.isDot && _ctx.showLeft
      })))
    },
    [_ctx.data ? (openBlock(), createElementBlock(
      "span",
      _hoisted_1,
      toDisplayString(_ctx.data),
      1
      /* TEXT */
    )) : renderSlot(_ctx.$slots, "default", {
      key: 1
    }), !_ctx.hidden && (_ctx.state.content || _ctx.state.content === 0 || _ctx.isDot || _ctx.showLeft) ? (openBlock(), createElementBlock(
      "div",
      {
        key: 2,
        "data-tag": "tiny-badge-content",
        class: normalizeClass(_ctx.m(_ctx.gcls("primary-status-child"), _ctx.gcls({
          "dot-showleft-child": _ctx.showLeft && _ctx.isDot
        }), _ctx.gcls("type-" + (_ctx.type || "default")), _ctx.gcls({
          "circle": !_ctx.isDot
        }), _ctx.gcls({
          "dot-default-icon-label": !_ctx.showLeft && _ctx.isDot && ["icon", "label"].includes(_ctx.type)
        }), _ctx.gcls({
          "dot-default": !_ctx.showLeft && _ctx.isDot && !["icon", "label"].includes(_ctx.type)
        }), _ctx.gcls({
          "circle-icon-label": !_ctx.isDot && ["icon", "label"].includes(_ctx.type)
        })))
      },
      [renderSlot(_ctx.$slots, "content", {}, function() {
        return [_ctx.state.href ? (openBlock(), createElementBlock("a", {
          key: 0,
          class: normalizeClass(_ctx.m(_ctx.gcls("state-href"))),
          href: _ctx.state.href,
          target: _ctx.target,
          rel: "noopener noreferrer"
        }, toDisplayString(_ctx.state.content), 11, _hoisted_2)) : (openBlock(), createElementBlock(
          "span",
          {
            key: 1,
            class: normalizeClass(_ctx.m(_ctx.gcls("state-not-href")))
          },
          toDisplayString(_ctx.state.content),
          3
          /* TEXT, CLASS */
        ))];
      })],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

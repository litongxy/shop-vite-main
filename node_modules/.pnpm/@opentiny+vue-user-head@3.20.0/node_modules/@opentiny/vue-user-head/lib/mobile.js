import { renderless, api } from '@opentiny/vue-renderless/user-head/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import { iconUser } from '@opentiny/vue-icon';
import '@opentiny/vue-theme-mobile/user-head/index.css';
import { openBlock, createElementBlock, createElementVNode, normalizeStyle, normalizeClass, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var _sfc_main = defineComponent({
  components: {
    IconUser: iconUser()
  },
  props: [].concat(props, ["min", "round", "color", "backgroundColor", "type", "modelValue", "messageTotal", "messageType", "messageUpperLimit", "size"]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-mobile-user-head"
};
var _hoisted_2 = ["title"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode(
    "div",
    {
      style: normalizeStyle(_extends({}, _ctx.state.style, {
        width: _ctx.state.size + "px",
        height: _ctx.state.size + "px"
      })),
      class: normalizeClass(["tiny-mobile-user-head__portrait", {
        min: _ctx.min,
        round: _ctx.round
      }, _ctx.type])
    },
    [renderSlot(_ctx.$slots, "default", {}, function() {
      return [_ctx.type === "icon" ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.internalValue), {
        key: 0,
        class: "tiny-mobile-svg-size"
      })) : createCommentVNode("v-if", true), _ctx.type === "label" ? (openBlock(), createElementBlock("span", {
        key: 1,
        style: normalizeStyle({
          fontSize: _ctx.state.size * 0.3 + "px"
        }),
        title: _ctx.state.internalValue
      }, toDisplayString(_ctx.state.label), 13, _hoisted_2)) : createCommentVNode("v-if", true)];
    })],
    6
    /* CLASS, STYLE */
  ), _ctx.messageTotal ? (openBlock(), createElementBlock(
    "div",
    {
      key: 0,
      style: normalizeStyle({
        left: _ctx.state.size * 0.9 + "px"
      }),
      class: normalizeClass(["tiny-mobile-user-head__message", {
        min: _ctx.min,
        round: _ctx.round,
        basic: _ctx.messageType === "basic" || _ctx.messageType === "icon"
      }])
    },
    toDisplayString(_ctx.state.message),
    7
    /* TEXT, CLASS, STYLE */
  )) : createCommentVNode("v-if", true)]);
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobile as default };

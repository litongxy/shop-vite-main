import { renderless, api } from '@opentiny/vue-renderless/dropdown-menu/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import DropdownItem from '@opentiny/vue-dropdown-item';
import '@opentiny/vue-theme/dropdown-menu/index.css';
import { resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, renderSlot, createElementBlock, Fragment, renderList, createCommentVNode, vShow } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    TinyDropdownItem: DropdownItem
  },
  emits: ["mouseenter", "mouseleave", "click", "update:modelValue", "created"],
  props: [].concat(props, [
    "visibleArrow",
    "arrowOffset",
    "placement",
    "popperClass",
    "popperAppendToBody",
    "checkedStatus",
    // tiny 新增
    "textField",
    "options"
  ]),
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_dropdown_item = resolveComponent("tiny-dropdown-item");
  return openBlock(), createBlock(Transition, {
    name: "tiny-zoom-in-top",
    onAfterLeave: _ctx.doDestroy,
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "ul",
        {
          class: normalizeClass(["tiny-dropdown-menu tiny-popper", [_ctx.state.size && "tiny-dropdown-menu--" + _ctx.state.size, _ctx.popperClass]]),
          onMouseenter: _cache[0] || (_cache[0] = function() {
            return _ctx.handleMouseenter && _ctx.handleMouseenter.apply(_ctx, arguments);
          }),
          onMouseleave: _cache[1] || (_cache[1] = function() {
            return _ctx.handleMouseleave && _ctx.handleMouseleave.apply(_ctx, arguments);
          })
        },
        [_ctx.state.initShowPopper || _ctx.state.showPopper ? renderSlot(_ctx.$slots, "default", {
          key: 0,
          selectedIndex: _ctx.state.selectedIndex
        }, function() {
          return [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(_ctx.options, function(item, index) {
              return openBlock(), createBlock(_component_tiny_dropdown_item, {
                "item-data": item,
                label: item[_ctx.textField],
                key: index,
                icon: item.icon,
                disabled: item.disabled,
                divided: item.divided,
                tip: item.tip,
                "tip-position": item.tipPosition
              }, null, 8, ["item-data", "label", "icon", "disabled", "divided", "tip", "tip-position"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))];
        }) : createCommentVNode("v-if", true)],
        34
        /* CLASS, NEED_HYDRATION */
      ), [[vShow, _ctx.state.showPopper]])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["onAfterLeave"]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

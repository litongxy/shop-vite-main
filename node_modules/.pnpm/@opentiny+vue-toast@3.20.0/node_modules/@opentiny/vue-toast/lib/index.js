function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props, createComponent } from "@opentiny/vue-common";
import MobileTemplate from "./mobile.js";
import "@opentiny/vue-theme-mobile/toast/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return MobileTemplate;
};
var toastProps = _extends({}, $props, {
  type: {
    type: String,
    validator: function validator(value) {
      return Boolean(~["text", "correct", "error"].indexOf(value));
    }
  },
  zIndex: {
    type: Number,
    default: 100
  },
  text: {
    type: String,
    default: "text"
  },
  time: {
    type: [String, Number],
    default: 2e3
  },
  timeout: {
    type: Function,
    default: null
  }
});
var Toast$1 = defineComponent({
  name: $prefix + "Toast",
  emits: ["timeout"],
  props: toastProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var defaults = {
  type: "text"
};
var service = function service2(configs) {
  if (configs === void 0) {
    configs = {};
  }
  configs = _extends({}, defaults, configs);
  var parent = document.body;
  var instance = createComponent({
    component: Toast$1,
    propsData: {},
    el: document.createElement("div")
  });
  for (var key in configs) {
    if (Object.prototype.hasOwnProperty.call(configs, key)) {
      instance.state[key] = configs[key];
    }
  }
  parent.appendChild(instance.$el);
  setTimeout(function() {
    if (instance.state.timeout) {
      instance.state.timeout();
    }
    parent.removeChild(instance.$el);
  }, instance.state.time);
  return instance;
};
var version = "3.20.0";
var Toast = {
  install: function install() {
  },
  service,
  version
};
export {
  Toast as default
};

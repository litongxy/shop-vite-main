import type { PropType } from '@opentiny/vue-common';
import type { ICascaderNodeApi, ICascaderNodeRenderlessParams } from '@opentiny/vue-renderless/types/cascader-node.type';
declare const _default: import("@vue/runtime-core").DefineComponent<{
    node: {
        type: PropType<import("../../../../renderless/src/cascader-panel/node").default>;
        required: true;
    };
    nodeId: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, ICascaderNodeApi & Pick<ICascaderNodeRenderlessParams, "panel">, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("change" | "update:modelValue" | "expand" | "expand-change" | "active-item-change")[], "change" | "update:modelValue" | "expand" | "expand-change" | "active-item-change", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    node: {
        type: PropType<import("../../../../renderless/src/cascader-panel/node").default>;
        required: true;
    };
    nodeId: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onExpand?: ((...args: any[]) => any) | undefined;
    "onExpand-change"?: ((...args: any[]) => any) | undefined;
    "onActive-item-change"?: ((...args: any[]) => any) | undefined;
}, {
    tiny_mode_root: boolean;
}, {}>;
export default _default;

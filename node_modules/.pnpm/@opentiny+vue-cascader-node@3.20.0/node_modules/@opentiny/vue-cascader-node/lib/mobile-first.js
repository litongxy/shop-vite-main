import { renderless, api } from '@opentiny/vue-renderless/cascader-node/vue';
import { defineComponent, $prefix, setup, $props } from '@opentiny/vue-common';
import { IconLoading, IconChevronRight } from '@opentiny/vue-icon';
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, createBlock, withCtx, createTextVNode, createCommentVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var classes = {
  "cascader-node__postfix": "text-sm fill-color-text-primary absolute top-1/2 right-4 -translate-y-2/4",
  "cascader-node__label_disabled": "max-w-[theme(spacing.80)] flex-1 whitespace-nowrap overflow-hidden text-ellipsis",
  // 正常状态
  "cascader-node": "relative flex items-center pt-0 pr-10 pb-0 pl-3 h-8 leading-8 outline-0 m-1 cursor-pointer rounded hover:bg-color-bg-4",
  "is-selectable": "",
  "in-active-path": "text-color-brand bg-color-fill-6 fill-color-brand",
  "in-checked-path": "text-color-brand bg-color-fill-6 fill-color-brand",
  "in-active": "text-color-brand bg-color-fill-6 ",
  "node-active": "fill-color-brand",
  // 禁用时
  "cascader-node_disabled": "cursor-not-allowed text-color-text-disabled rounded hover:bg-color-bg-1",
  "in-active_disabled": "text-color-text-disabled"
};
var _sfc_main = defineComponent({
  name: $prefix + "CascaderNode",
  components: {
    IconLoading: IconLoading(),
    IconChevronRight: IconChevronRight()
  },
  inheritAttrs: false,
  emits: ["expand", "update:modelValue", "expand-change", "active-item-change", "change"],
  inject: ["panel"],
  props: _extends({}, $props, {
    node: {
      required: true
    },
    nodeId: String
  }),
  setup: function setup$1(props, context) {
    return setup({
      props,
      context,
      renderless,
      api,
      classes
    });
  }
});
var _hoisted_1 = ["id"];
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_icon_loading = resolveComponent("icon-loading");
  var _component_icon_chevron_right = resolveComponent("icon-chevron-right");
  return openBlock(), createElementBlock("div", {
    id: _ctx.nodeId,
    role: "menuitem",
    "data-tag": "tiny-cascader-node",
    onClick: _cache[0] || (_cache[0] = function() {
      return _ctx.handleNodeClick && _ctx.handleNodeClick.apply(_ctx, arguments);
    }),
    class: normalizeClass(_ctx.m(_ctx.gcls("cascader-node"), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.config.checkStrictly ? "is-selectable" : ""), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.inActivePath ? "in-active-path" : ""), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.inCheckedPath ? "in-checked-path" : ""), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.isChecked ? "in-active" : ""), _ctx.gcls(_ctx.state.isDisabled ? "cascader-node_disabled" : ""), _ctx.gcls(_ctx.state.isDisabled ? "in-active_disabled" : "")))
  }, [createElementVNode(
    "span",
    {
      class: normalizeClass([_ctx.node ? _ctx.gcls("cascader-node__label_disabled") : ""])
    },
    toDisplayString(_ctx.state.nodeLabel),
    3
    /* TEXT, CLASS */
  ), _ctx.node.loading ? (openBlock(), createBlock(_component_icon_loading, {
    key: 0,
    class: normalizeClass(_ctx.gcls("cascader-node__postfix"))
  }, null, 8, ["class"])) : !_ctx.state.isLeaf ? (openBlock(), createBlock(_component_icon_chevron_right, {
    key: 1,
    class: normalizeClass(_ctx.m(_ctx.gcls("cascader-node__postfix"), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.inActivePath ? "node-active" : ""), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.inCheckedPath ? "node-active" : ""), _ctx.gcls(!_ctx.state.isDisabled && _ctx.state.isChecked ? "node-active" : "")))
  }, {
    default: withCtx(function() {
      return [createTextVNode(">")];
    }),
    _: 1
    /* STABLE */
  }, 8, ["class"])) : createCommentVNode("v-if", true)], 10, _hoisted_1);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

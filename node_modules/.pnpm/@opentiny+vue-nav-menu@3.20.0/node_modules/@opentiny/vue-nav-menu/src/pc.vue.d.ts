declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    data?: any;
    overflow?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    fields?: any;
    parentKey?: any;
    fetchMenuData?: any;
    beforeSkip?: any;
    prevent?: any;
    allowFullUrl?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    data?: any;
    overflow?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    fields?: any;
    parentKey?: any;
    fetchMenuData?: any;
    beforeSkip?: any;
    prevent?: any;
    allowFullUrl?: any;
}>>>, {
    readonly data?: any;
    readonly overflow?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly fields?: any;
    readonly parentKey?: any;
    readonly fetchMenuData?: any;
    readonly beforeSkip?: any;
    readonly prevent?: any;
    readonly allowFullUrl?: any;
}, {}>;
export default _default;

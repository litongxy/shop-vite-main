function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/nav-menu/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var navMenuProps = _extends({}, $props, {
  data: Array,
  overflow: {
    type: String,
    default: "auto",
    validator: function validator(value) {
      return /^(auto|retract|fixed|hidden)$/.test(value);
    }
  },
  parentKey: String,
  beforeSkip: Function,
  fetchMenuData: Function,
  fields: Object,
  prevent: {
    type: Boolean,
    default: false
  },
  allowFullUrl: {
    type: Boolean,
    default: false
  }
});
var NavMenu = defineComponent({
  name: $prefix + "NavMenu",
  props: navMenuProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
NavMenu.install = function(Vue) {
  Vue.component(NavMenu.name, NavMenu);
};
NavMenu.version = version;
export {
  NavMenu as default
};

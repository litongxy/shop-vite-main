import { renderless, api } from '@opentiny/vue-renderless/date-panel/vue';
import { directive, setup, props } from '@opentiny/vue-common';
import { language } from '@opentiny/vue-locale';
import Clickoutside from '@opentiny/vue-renderless/common/deps/clickoutside';
import Time from '@opentiny/vue-time';
import DateTable from '@opentiny/vue-date-table';
import YearTable from '@opentiny/vue-year-table';
import MonthTable from '@opentiny/vue-month-table';
import Input from '@opentiny/vue-input';
import Button from '@opentiny/vue-button';
import { IconDoubleRight, IconDoubleLeft, IconChevronLeft, IconChevronRight, IconChevronDown, IconChevronUp } from '@opentiny/vue-icon';
import Popup from '@opentiny/vue-popup';
import { resolveComponent, resolveDirective, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, renderSlot, createElementBlock, Fragment, renderList, toDisplayString, createCommentVNode, createVNode, vShow, resolveDynamicComponent, createTextVNode } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var classes = {
  "picker-panel": "w-96 text-color-text-primary text-xs shadow-md bg-color-bg-1 rounded leading-4 my-0.5 mx-0",
  "picker-panel-body": "after:content-[''] after:table after:clear-both",
  "content": "relative py-0 px-4",
  "header": "p-4 h-12 text-center",
  "bordered": "mb-0 pb-3",
  "disabled": "text-color-text-disabled",
  "icon-btn": "text-sm leading-4 fill-color-text-primary border-0 cursor-pointer outline-0 hover:fill-color-brand",
  "header-label": "text-xs font-medium py-0 px-1 text-center text-color-text-primary align-middle",
  "body-content": "float-left w-1/2 box-border m-0 pt-4 pr-4 pb-1.5 pl-4",
  "today": "border border-solid border-color-border-focus",
  "footer": "border-t border-t-color-bg-3 py-3 px-4 bg-color-bg-1 overflow-hidden rounded-b",
  "link-btn": "align-middle rounded",
  "time-header": "relative text-xs h-10 leading-10 table w-full box-border border-b border-b-color-bg-3",
  "editor-wrap": "relative table-cell px-1",
  "sidebar": "absolute top-0 bottom-0 w-28 border-r border-r-color-bg-3 box-border pt-5 bg-color-bg-1 overflow-auto",
  "sidebar-btn": "block w-24 my-0 mx-auto rounded border-0 bg-transparent leading-8 text-xs text-color-text-primary pl-4 text-left outline-0 cursor-pointer truncate hover:bg-color-bg-2"
};
var _sfc_main = {
  directives: directive({
    Clickoutside
  }),
  components: {
    TimePicker: Time,
    YearTable,
    MonthTable,
    DateTable,
    TinyInput: Input,
    TinyButton: Button,
    TinyPopup: Popup,
    IconDoubleRight: IconDoubleRight(),
    IconDoubleLeft: IconDoubleLeft(),
    IconChevronLeft: IconChevronLeft(),
    IconChevronRight: IconChevronRight(),
    IconChevronDown: IconChevronDown(),
    IconChevronUp: IconChevronUp()
  },
  props: _extends({}, props, {
    emitter: Object,
    step: {
      type: Object,
      default: function _default() {
        return {
          hour: 1,
          minute: 1,
          second: 1
        };
      }
    },
    showWeekNumber: {
      type: Boolean,
      default: false
    },
    formatWeeks: Function,
    nowClick: {
      type: Function
    }
  }),
  emits: ["pick", "select-change", "dodestroy"],
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api,
      classes,
      extendOptions: {
        language
      }
    });
  }
};
var _hoisted_1 = ["onClick"];
var _hoisted_2 = ["aria-label"];
var _hoisted_3 = ["aria-label"];
var _hoisted_4 = ["aria-label"];
var _hoisted_5 = ["aria-label"];
var _hoisted_6 = {
  key: 0,
  "data-tag": "tiny-picker-panel__timezone"
};
var _hoisted_7 = {
  "data-tag": "tiny-picker-panel__tzlist"
};
var _hoisted_8 = {
  "data-tag": "tzlist"
};
var _hoisted_9 = ["title", "onClick"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_time_picker = resolveComponent("time-picker");
  var _component_icon_double_left = resolveComponent("icon-double-left");
  var _component_icon_chevron_left = resolveComponent("icon-chevron-left");
  var _component_icon_double_right = resolveComponent("icon-double-right");
  var _component_icon_chevron_right = resolveComponent("icon-chevron-right");
  var _component_date_table = resolveComponent("date-table");
  var _component_year_table = resolveComponent("year-table");
  var _component_month_table = resolveComponent("month-table");
  var _component_tiny_popup = resolveComponent("tiny-popup");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _directive_clickoutside = resolveDirective("clickoutside");
  return openBlock(), createBlock(Transition, {
    onAfterEnter: _ctx.handleEnter,
    onAfterLeave: _ctx.handleLeave,
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        {
          "data-tag": "tiny-picker-panel tiny-date-picker tiny-popper",
          class: normalizeClass(_ctx.m([_ctx.gcls("picker-panel"), {
            "w-80": _ctx.state.currentView === "year"
          }, _ctx.state.popperClass]))
        },
        [createElementVNode(
          "div",
          {
            "data-tag": "tiny-picker-panel__body-wrapper",
            class: normalizeClass(_ctx.gcls("picker-panel-body"))
          },
          [renderSlot(_ctx.$slots, "sidebar", {
            dataTag: "tiny-picker-panel__sidebar",
            class: normalizeClass(_ctx.gcls("sidebar"))
          }), _ctx.state.shortcuts ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              "data-tag": "tiny-picker-panel__sidebar",
              class: normalizeClass(_ctx.gcls("sidebar"))
            },
            [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.state.shortcuts, function(shortcut, key) {
                return openBlock(), createElementBlock("button", {
                  type: "button",
                  "data-tag": "tiny-picker-panel__shortcut",
                  class: normalizeClass(_ctx.gcls("sidebar-btn")),
                  key,
                  onClick: function onClick($event) {
                    return _ctx.handleShortcutClick(shortcut);
                  }
                }, toDisplayString(shortcut.text), 11, _hoisted_1);
              }),
              128
              /* KEYED_FRAGMENT */
            ))],
            2
            /* CLASS */
          )) : createCommentVNode("v-if", true), createElementVNode(
            "div",
            {
              "data-tag": "tiny-picker-panel__body",
              class: normalizeClass([_ctx.gcls("picker-panel-body"), {
                "ml-28": _ctx.slots.sidebar || _ctx.state.shortcuts
              }])
            },
            [_ctx.state.showTime ? (openBlock(), createElementBlock(
              "div",
              {
                key: 0,
                "data-tag": "tiny-date-picker__time-header",
                class: normalizeClass(_ctx.gcls("time-header"))
              },
              [createElementVNode(
                "span",
                {
                  "data-tag": "tiny-date-picker__editor-wrap",
                  class: normalizeClass(_ctx.gcls("editor-wrap"))
                },
                [createVNode(_component_tiny_input, {
                  placeholder: _ctx.t("ui.datepicker.selectDate"),
                  modelValue: _ctx.state.visibleDate,
                  size: "small",
                  "onUpdate:modelValue": _cache[0] || (_cache[0] = function(val) {
                    return _ctx.state.userInputDate = val;
                  }),
                  onChange: _ctx.handleVisibleDateChange
                }, null, 8, ["placeholder", "modelValue", "onChange"])],
                2
                /* CLASS */
              ), withDirectives((openBlock(), createElementBlock(
                "span",
                {
                  "data-tag": "tiny-date-picker__editor-wrap",
                  class: normalizeClass(_ctx.gcls("editor-wrap"))
                },
                [createVNode(_component_tiny_input, {
                  ref: "input",
                  onFocus: _cache[1] || (_cache[1] = function($event) {
                    return _ctx.state.timePickerVisible = true;
                  }),
                  placeholder: _ctx.t("ui.datepicker.selectTime"),
                  modelValue: _ctx.state.visibleTime,
                  size: "small",
                  "onUpdate:modelValue": _cache[2] || (_cache[2] = function(val) {
                    return _ctx.state.userInputTime = val;
                  }),
                  onChange: _ctx.handleVisibleTimeChange
                }, null, 8, ["placeholder", "modelValue", "onChange"]), createVNode(_component_time_picker, {
                  ref: "timepicker",
                  step: $props.step,
                  "time-arrow-control": _ctx.state.arrowControl,
                  show: _ctx.state.timePickerVisible,
                  value: _ctx.state.date,
                  onPick: _ctx.handleTimePick
                }, null, 8, ["step", "time-arrow-control", "show", "value", "onPick"])],
                2
                /* CLASS */
              )), [[_directive_clickoutside, _ctx.handleTimePickClose]])],
              2
              /* CLASS */
            )) : createCommentVNode("v-if", true), withDirectives(createElementVNode(
              "div",
              {
                "data-tag": "tiny-date-picker__header",
                class: normalizeClass([_ctx.gcls("header"), ["month", "year", "years", "yearrange"].includes(_ctx.state.currentView) && _ctx.gcls("bordered")])
              },
              [createElementVNode("button", {
                type: "button",
                onClick: _cache[3] || (_cache[3] = function() {
                  return _ctx.cusPrevYear && _ctx.cusPrevYear.apply(_ctx, arguments);
                }),
                "aria-label": _ctx.t("ui.datepicker.prevYear"),
                "data-tag": "tiny-picker-panel__icon-btn tiny-date-picker__prev-btn tiny-icon-arrow-left",
                class: normalizeClass([_ctx.gcls("icon-btn"), "float-left"])
              }, [createVNode(_component_icon_double_left)], 10, _hoisted_2), withDirectives(createElementVNode("button", {
                type: "button",
                onClick: _cache[4] || (_cache[4] = function() {
                  return _ctx.cusPrevMonth && _ctx.cusPrevMonth.apply(_ctx, arguments);
                }),
                "aria-label": _ctx.t("ui.datepicker.prevMonth"),
                "data-tag": "tiny-picker-panel__icon-btn tiny-date-picker__prev-btn tiny-icon-arrow-left",
                class: normalizeClass([_ctx.gcls("icon-btn"), "float-left"])
              }, [createVNode(_component_icon_chevron_left)], 10, _hoisted_3), [[vShow, _ctx.state.currentView === "date"]]), createElementVNode(
                "span",
                {
                  role: "button",
                  onClick: _cache[5] || (_cache[5] = function() {
                    return _ctx.showYearPicker && _ctx.showYearPicker.apply(_ctx, arguments);
                  }),
                  "data-tag": "tiny-date-picker__header-label",
                  class: normalizeClass([_ctx.gcls("header-label")])
                },
                toDisplayString(_ctx.state.yearLabel),
                3
                /* TEXT, CLASS */
              ), withDirectives(createElementVNode(
                "span",
                {
                  role: "button",
                  onClick: _cache[6] || (_cache[6] = function() {
                    return _ctx.showMonthPicker && _ctx.showMonthPicker.apply(_ctx, arguments);
                  }),
                  "data-tag": "tiny-date-picker__header-label",
                  class: normalizeClass([_ctx.gcls("header-label"), {
                    "text-color-brand": _ctx.state.currentView === "month"
                  }])
                },
                toDisplayString(_ctx.t("ui.datepicker.month" + (_ctx.state.month + 1))),
                3
                /* TEXT, CLASS */
              ), [[vShow, _ctx.state.currentView === "date"]]), createElementVNode("button", {
                type: "button",
                onClick: _cache[7] || (_cache[7] = function() {
                  return _ctx.cusNextYear && _ctx.cusNextYear.apply(_ctx, arguments);
                }),
                "aria-label": _ctx.t("ui.datepicker.nextYear"),
                "data-tag": "tiny-picker-panel__icon-btn tiny-date-picker__next-btn tiny-icon-arrow-right",
                class: normalizeClass([_ctx.gcls("icon-btn"), "float-right"])
              }, [createVNode(_component_icon_double_right)], 10, _hoisted_4), withDirectives(createElementVNode("button", {
                type: "button",
                onClick: _cache[8] || (_cache[8] = function() {
                  return _ctx.cusNextMonth && _ctx.cusNextMonth.apply(_ctx, arguments);
                }),
                "aria-label": _ctx.t("ui.datepicker.nextMonth"),
                "data-tag": "tiny-picker-panel__icon-btn tiny-date-picker__next-btn tiny-icon-arrow-right",
                class: normalizeClass([_ctx.gcls("icon-btn"), "float-right"])
              }, [createVNode(_component_icon_chevron_right)], 10, _hoisted_5), [[vShow, _ctx.state.currentView === "date"]])],
              2
              /* CLASS */
            ), [[vShow, _ctx.state.currentView !== "time"]]), createElementVNode(
              "div",
              {
                "data-tag": "tiny-picker-panel__content",
                class: normalizeClass(_ctx.gcls("content"))
              },
              [_ctx.state.currentView === "date" ? (openBlock(), createBlock(_component_date_table, {
                key: 0,
                ref: "dateTable",
                onPick: _ctx.handleDatePick,
                "selection-mode": _ctx.state.selectionMode,
                "first-day-of-week": _ctx.state.firstDayOfWeek,
                value: _ctx.state.value,
                "default-value": _ctx.state.defaultValue ? new Date(_ctx.state.defaultValue) : null,
                date: _ctx.state.date,
                "cell-class-name": _ctx.state.cellClassName,
                "disabled-date": _ctx.state.disabledDate,
                "show-week-number": $props.showWeekNumber,
                "format-weeks": $props.formatWeeks
              }, null, 8, ["onPick", "selection-mode", "first-day-of-week", "value", "default-value", "date", "cell-class-name", "disabled-date", "show-week-number", "format-weeks"])) : createCommentVNode("v-if", true), ["year", "years", "yearrange"].includes(_ctx.state.currentView) ? (openBlock(), createBlock(_component_year_table, {
                key: 1,
                ref: "yearTable",
                value: _ctx.state.value,
                "default-value": _ctx.state.defaultValue ? new Date(_ctx.state.defaultValue) : null,
                date: _ctx.state.date,
                "disabled-date": _ctx.state.disabledDate,
                "selection-mode": _ctx.state.selectionMode,
                "start-year": _ctx.state.startYear,
                onPick: _ctx.handleYearPick
              }, null, 8, ["value", "default-value", "date", "disabled-date", "selection-mode", "start-year", "onPick"])) : createCommentVNode("v-if", true), _ctx.state.currentView === "month" ? (openBlock(), createBlock(_component_month_table, {
                key: 2,
                ref: "monthTable",
                onPick: _ctx.handleMonthPick,
                value: _ctx.state.value,
                "default-value": _ctx.state.defaultValue ? new Date(_ctx.state.defaultValue) : null,
                date: _ctx.state.date,
                "disabled-date": _ctx.state.disabledDate
              }, null, 8, ["onPick", "value", "default-value", "date", "disabled-date"])) : createCommentVNode("v-if", true)],
              2
              /* CLASS */
            )],
            2
            /* CLASS */
          )],
          2
          /* CLASS */
        ), _ctx.state.isShowTz || _ctx.state.timezone.isServiceTimezone ? withDirectives((openBlock(), createElementBlock("div", _hoisted_6, [createVNode(_component_tiny_input, {
          modelValue: _ctx.state.tz,
          "onUpdate:modelValue": [_cache[9] || (_cache[9] = function($event) {
            return _ctx.state.tz = $event;
          }), _ctx.searchTz],
          disabled: _ctx.state.timezone.isServiceTimezone,
          placeholder: _ctx.t("ui.datepicker.timezone")
        }, {
          suffix: withCtx(function() {
            return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.showpopup ? "IconChevronDown" : "IconChevronUp"), {
              fill: "#ccc",
              onClick: _ctx.toggleTz
            }, null, 8, ["onClick"]))];
          }),
          _: 1
          /* STABLE */
        }, 8, ["modelValue", "disabled", "onUpdate:modelValue", "placeholder"]), createElementVNode("div", _hoisted_7, [createVNode(_component_tiny_popup, {
          modelValue: _ctx.state.showpopup,
          "onUpdate:modelValue": _cache[10] || (_cache[10] = function($event) {
            return _ctx.state.showpopup = $event;
          }),
          overlay: false,
          aui_mode: "mobile",
          position: "bottom",
          duration: 0.2,
          closeable: false
        }, {
          default: withCtx(function() {
            return [createElementVNode("div", _hoisted_8, [createElementVNode("ul", null, [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.state.renderTzdata, function(tz, index) {
                return withDirectives((openBlock(), createElementBlock("li", {
                  "data-tag": "tiny-picker-panel__tzlist-li",
                  title: tz.name,
                  key: index,
                  onClick: function onClick($event) {
                    return _ctx.selectTz(tz);
                  }
                }, toDisplayString(tz.name), 9, _hoisted_9)), [[vShow, !tz.visible]]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))])])];
          }),
          _: 1
          /* STABLE */
        }, 8, ["modelValue"])])])), [[_directive_clickoutside, _ctx.handleTzPickClose]]) : createCommentVNode("v-if", true), withDirectives(createElementVNode(
          "div",
          {
            "data-tag": "tiny-picker-panel__footer",
            class: normalizeClass(_ctx.gcls("footer"))
          },
          [renderSlot(_ctx.$slots, "default", {}, function() {
            return [withDirectives(createVNode(_component_tiny_button, {
              size: "mini",
              type: "text",
              "data-tag": "tiny-picker-panel__link-btn",
              class: normalizeClass(_ctx.gcls("link-btn")),
              onClick: _ctx.changeToNow
            }, {
              default: withCtx(function() {
                return [createTextVNode(
                  toDisplayString(_ctx.t("ui.datepicker.now")),
                  1
                  /* TEXT */
                )];
              }),
              _: 1
              /* STABLE */
            }, 8, ["class", "onClick"]), [[vShow, !["dates", "years"].includes(_ctx.state.selectionMode)]])];
          }), createVNode(_component_tiny_button, {
            type: "primary",
            size: "mini",
            "data-tag": "tiny-picker-panel__link-btn",
            class: normalizeClass(["float-right", _ctx.gcls("link-btn")]),
            onClick: _ctx.confirm
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.datepicker.confirm")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          }, 8, ["class", "onClick"])],
          2
          /* CLASS */
        ), [[vShow, _ctx.state.isShowFooter]])],
        2
        /* CLASS */
      ), [[vShow, _ctx.state.visible]])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["onAfterEnter", "onAfterLeave"]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { mobileFirst as default };

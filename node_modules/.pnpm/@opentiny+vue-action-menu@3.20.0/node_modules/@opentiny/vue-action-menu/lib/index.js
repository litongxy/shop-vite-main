function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/action-menu/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var actionMenuProps = _extends({}, $props, {
  options: {
    type: Array,
    default: function _default() {
      return [];
    }
  },
  maxShowNum: Number,
  moreText: String,
  spacing: {
    type: [String, Number]
  },
  textField: {
    type: String,
    default: "label"
  },
  popperClass: {
    type: String,
    default: ""
  },
  popperAppendToBody: {
    type: Boolean,
    default: false
  },
  trigger: {
    type: String,
    default: "hover"
  },
  suffixIcon: Object,
  showIcon: {
    type: Boolean,
    default: true
  },
  mode: {
    type: String,
    default: "default"
  }
});
var ActionMenu = defineComponent({
  name: $prefix + "ActionMenu",
  props: actionMenuProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
ActionMenu.install = function(Vue) {
  Vue.component(ActionMenu.name, ActionMenu);
};
ActionMenu.version = version;
export {
  ActionMenu as default
};

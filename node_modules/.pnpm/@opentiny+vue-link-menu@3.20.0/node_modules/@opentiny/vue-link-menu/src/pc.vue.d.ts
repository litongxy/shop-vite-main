declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    props?: any;
    icon?: any;
    data?: any;
    ellipsis?: any;
    title?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    wrap?: any;
    defaultExpandAll?: any;
    expandIcon?: any;
    shrinkIcon?: any;
    expandIconColor?: any;
    shrinkIconColor?: any;
    maxItem?: any;
    searchIcon?: any;
    getMenuDataSync?: any;
    keepSelectedNodes?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    props?: any;
    icon?: any;
    data?: any;
    ellipsis?: any;
    title?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    wrap?: any;
    defaultExpandAll?: any;
    expandIcon?: any;
    shrinkIcon?: any;
    expandIconColor?: any;
    shrinkIconColor?: any;
    maxItem?: any;
    searchIcon?: any;
    getMenuDataSync?: any;
    keepSelectedNodes?: any;
}>>>, {
    readonly props?: any;
    readonly icon?: any;
    readonly data?: any;
    readonly ellipsis?: any;
    readonly title?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly wrap?: any;
    readonly defaultExpandAll?: any;
    readonly expandIcon?: any;
    readonly shrinkIcon?: any;
    readonly expandIconColor?: any;
    readonly shrinkIconColor?: any;
    readonly maxItem?: any;
    readonly searchIcon?: any;
    readonly getMenuDataSync?: any;
    readonly keepSelectedNodes?: any;
}, {}>;
export default _default;

import { renderless, api } from '@opentiny/vue-renderless/roles/vue';
import { defineComponent, props, setup } from '@opentiny/vue-common';
import Popover from '@opentiny/vue-popover';
import { IconChevronDown, IconChevronUp } from '@opentiny/vue-icon';
import { resolveComponent, openBlock, createElementBlock, createVNode, withCtx, createElementVNode, createTextVNode, toDisplayString, withDirectives, createBlock, resolveDynamicComponent, vShow, Fragment, renderList, normalizeClass } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["fetchRole", "getEnvInfoSync", "getChangeRoleUrl", "getCustomized", "pushCustomized", "popperAppendToBody"]),
  components: {
    TinyPopover: Popover,
    IconChevronDown: IconChevronDown(),
    IconChevronUp: IconChevronUp()
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-roles"
};
var _hoisted_2 = {
  class: "tiny-roles tiny-roles__selector-body"
};
var _hoisted_3 = {
  class: "tiny-roles__poplist"
};
var _hoisted_4 = ["data-value", "current-scope", "onClick"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_popover = resolveComponent("tiny-popover");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_popover, {
    "popper-class": "tiny-roles__selector",
    "append-to-body": _ctx.popperAppendToBody,
    disabled: _ctx.state.roleList.length === 1,
    modelValue: _ctx.state.showPopover,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
      return _ctx.state.showPopover = $event;
    }),
    placement: "bottom-start",
    trigger: "hover",
    onShow: _ctx.show,
    onHide: _ctx.hide
  }, {
    reference: withCtx(function() {
      return [createElementVNode("span", null, [createTextVNode(
        toDisplayString(_ctx.state.currentRole) + " ",
        1
        /* TEXT */
      ), withDirectives((openBlock(), createBlock(
        resolveDynamicComponent(_ctx.state.showIcon ? "icon-chevron-down" : "icon-chevron-up"),
        null,
        null,
        512
        /* NEED_PATCH */
      )), [[vShow, _ctx.state.roleList.length > 1]])])];
    }),
    default: withCtx(function() {
      return [createElementVNode("div", _hoisted_2, [createElementVNode("ul", _hoisted_3, [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.roleList, function(item, key) {
          return openBlock(), createElementBlock("li", {
            class: normalizeClass(["tiny-roles__poplist-item", [_ctx.state.currentId === item.roleId ? "is-selected" : ""]]),
            key,
            "data-value": item.roleId,
            "current-scope": item.currentScope,
            onClick: function onClick($event) {
              return _ctx.changeRole(item);
            }
          }, [createElementVNode(
            "span",
            null,
            toDisplayString(item.roleName),
            1
            /* TEXT */
          )], 10, _hoisted_4);
        }),
        128
        /* KEYED_FRAGMENT */
      ))])])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["append-to-body", "disabled", "modelValue", "onShow", "onHide"])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };

function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/roles/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var $constants = {
  AUTH: "authenticated",
  ANONYMOUS: "anonymous",
  GLOBAL: "global",
  ROLE: "role"
};
var Roles = defineComponent({
  name: $prefix + "Roles",
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    popperAppendToBody: {
      type: Boolean,
      default: true
    },
    fetchRole: Function,
    getEnvInfoSync: Function,
    getChangeRoleUrl: Function,
    getCustomized: Function,
    pushCustomized: Function
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.20.0";
Roles.install = function(Vue) {
  Vue.component(Roles.name, Roles);
};
Roles.version = version;
export {
  Roles as default
};

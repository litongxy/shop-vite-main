import PagerItem from '@opentiny/vue-pager-item';
import BaseSelect from '@opentiny/vue-base-select';
import Popover from '@opentiny/vue-popover';
import Loading from '@opentiny/vue-loading';
import { defineComponent, $prefix, props, setup } from '@opentiny/vue-common';
import { renderless, api } from '@opentiny/vue-renderless/pager/vue';
import { iconChevronLeft, iconChevronRight, iconTriangleDown } from '@opentiny/vue-icon';
import '@opentiny/vue-theme/pager/index.css';
import { resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, normalizeStyle, Fragment, renderList, toDisplayString, createBlock, createElementVNode, createCommentVNode, createVNode, withCtx, renderSlot, withDirectives } from 'vue';

function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t)
    return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  name: $prefix + "Pager",
  props: [].concat(props, ["accurateJumper", "appendToBody", "currentPage", "disabled", "hideOnSinglePage", "isBeforePageChange", "layout", "mode", "nextText", "pageCount", "pageSize", "pageSizes", "pagerCount", "popperAppendToBody", "showTotalLoading", "customTotal", "popperClass", "prevText", "total", "size", "align", "totalFixedLeft", "pageSizeText"]),
  directives: {
    loading: Loading.directive
  },
  setup: function setup$1(props2, context) {
    return setup({
      props: props2,
      context,
      renderless,
      api
    });
  },
  components: {
    TinyPopover: Popover,
    TinyBaseSelect: BaseSelect,
    ChevronLeft: iconChevronLeft(),
    ChevronRight: iconChevronRight(),
    TriangleDown: iconTriangleDown(),
    Pager: PagerItem
  }
});
var _hoisted_1 = ["disabled"];
var _hoisted_2 = {
  key: 0
};
var _hoisted_3 = {
  class: "tiny-pager__goto"
};
var _hoisted_4 = {
  class: "tiny-pager__goto-text"
};
var _hoisted_5 = ["value", "disabled"];
var _hoisted_6 = {
  key: 0,
  class: "tiny-pager__goto-text tiny-pager__goto-text-sufix"
};
var _hoisted_7 = {
  class: "tiny-pager__pages"
};
var _hoisted_8 = {
  class: "is-active"
};
var _hoisted_9 = ["disabled"];
var _hoisted_10 = {
  key: 0
};
var _hoisted_11 = {
  class: "sizes"
};
var _hoisted_12 = {
  class: "tiny-pager__page-size-btn"
};
var _hoisted_13 = {
  class: "tiny-pager__selector-body"
};
var _hoisted_14 = {
  class: "tiny-pager__selector-poplist"
};
var _hoisted_15 = ["title", "onClick"];
var _hoisted_16 = {
  class: "tiny-pager__total-loading"
};
var _hoisted_17 = {
  class: "tiny-pager__loading-text"
};
var _hoisted_18 = {
  class: "tiny-pager__total-allpage"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_chevron_left = resolveComponent("chevron-left");
  var _component_pager = resolveComponent("pager");
  var _component_tiny_base_select = resolveComponent("tiny-base-select");
  var _component_chevron_right = resolveComponent("chevron-right");
  var _component_triangle_down = resolveComponent("triangle-down");
  var _component_tiny_popover = resolveComponent("tiny-popover");
  var _directive_loading = resolveDirective("loading");
  return _ctx.state.showPager ? (openBlock(), createElementBlock(
    "div",
    {
      key: 0,
      class: normalizeClass(["tiny-pager tiny-pager__number", _ctx.size ? "tiny-pager--" + _ctx.size : "", _ctx.disabled ? "is-disabled" : ""]),
      style: normalizeStyle({
        textAlign: _ctx.state.align
      })
    },
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.internalLayout, function(item, index) {
        return openBlock(), createElementBlock(
          Fragment,
          null,
          [item === "prev" ? (openBlock(), createElementBlock("button", {
            key: "prev" + index,
            type: "button",
            class: "tiny-pager__btn-prev",
            disabled: _ctx.disabled || _ctx.state.internalCurrentPage <= 1,
            onClick: _cache[0] || (_cache[0] = function() {
              return _ctx.prev && _ctx.prev.apply(_ctx, arguments);
            })
          }, [_ctx.prevText ? (openBlock(), createElementBlock(
            "span",
            _hoisted_2,
            toDisplayString(_ctx.prevText),
            1
            /* TEXT */
          )) : (openBlock(), createBlock(_component_chevron_left, {
            key: 1,
            class: "tiny-svg-size"
          }))], 8, _hoisted_1)) : item === "jumper" ? (openBlock(), createElementBlock("div", {
            key: "jumper" + index,
            class: "tiny-pager__group"
          }, [createElementVNode("div", _hoisted_3, [createElementVNode(
            "span",
            _hoisted_4,
            toDisplayString(_ctx.t("ui.page.jump")),
            1
            /* TEXT */
          ), createElementVNode("input", {
            type: "text",
            ref_for: true,
            ref: "jumperInput",
            value: _ctx.state.jumperValue,
            disabled: _ctx.disabled,
            onFocus: _cache[1] || (_cache[1] = function() {
              return _ctx.handleJumperFocus && _ctx.handleJumperFocus.apply(_ctx, arguments);
            }),
            onInput: _cache[2] || (_cache[2] = function() {
              return _ctx.handleJumperInput && _ctx.handleJumperInput.apply(_ctx, arguments);
            }),
            onChange: _cache[3] || (_cache[3] = function() {
              return _ctx.handleJumperChange && _ctx.handleJumperChange.apply(_ctx, arguments);
            })
          }, null, 40, _hoisted_5), _ctx.state.showJumperSuffix ? (openBlock(), createElementBlock(
            "span",
            _hoisted_6,
            toDisplayString(_ctx.t("ui.page.pageClassifier")),
            1
            /* TEXT */
          )) : createCommentVNode("v-if", true)])])) : item === "current" ? (openBlock(), createElementBlock("div", {
            key: "current" + index,
            class: "tiny-pager__group tiny-unselect"
          }, [createElementVNode("ul", _hoisted_7, [createElementVNode(
            "li",
            _hoisted_8,
            toDisplayString(_ctx.state.internalCurrentPage),
            1
            /* TEXT */
          )])])) : item === "pager" ? (openBlock(), createBlock(_component_pager, {
            key: "pager" + index,
            "is-before-page-change": _ctx.isBeforePageChange,
            "current-page": _ctx.state.internalCurrentPage,
            "page-count": _ctx.state.internalPageCount,
            "pager-count": _ctx.pagerCount,
            disabled: _ctx.disabled,
            onChange: _ctx.handleCurrentChange,
            onBeforePageChange: _ctx.beforePagerChangeHandler
          }, null, 8, ["is-before-page-change", "current-page", "page-count", "pager-count", "disabled", "onChange", "onBeforePageChange"])) : item === "simplest-pager" ? (openBlock(), createBlock(_component_tiny_base_select, {
            style: normalizeStyle({
              width: _ctx.state.simplestPagerWidth + "px"
            }),
            size: _ctx.size,
            key: "simplest-pager" + index,
            modelValue: _ctx.state.internalCurrentPage,
            "onUpdate:modelValue": _cache[4] || (_cache[4] = function($event) {
              return _ctx.state.internalCurrentPage = $event;
            }),
            disabled: _ctx.disabled,
            options: _ctx.state.simplestPagerOption,
            "popper-class": "tiny-pager__simplest-pager-popover",
            optimization: _ctx.state.simplestPagerOption.length > 30,
            onChange: _ctx.handleCurrentChange
          }, null, 8, ["style", "size", "modelValue", "disabled", "options", "optimization", "onChange"])) : item === "next" ? (openBlock(), createElementBlock("button", {
            key: "next" + index,
            type: "button",
            class: "tiny-pager__btn-next",
            disabled: _ctx.disabled || _ctx.state.internalCurrentPage === _ctx.state.internalPageCount || _ctx.state.internalPageCount === 0,
            onClick: _cache[5] || (_cache[5] = function() {
              return _ctx.next && _ctx.next.apply(_ctx, arguments);
            })
          }, [_ctx.nextText ? (openBlock(), createElementBlock(
            "span",
            _hoisted_10,
            toDisplayString(_ctx.nextText),
            1
            /* TEXT */
          )) : (openBlock(), createBlock(_component_chevron_right, {
            key: 1,
            class: "tiny-svg-size"
          }))], 8, _hoisted_9)) : item === "sizes" ? (openBlock(), createElementBlock("div", {
            key: "sizes" + index,
            class: "tiny-pager__group tiny-pager__sizes"
          }, [createVNode(_component_tiny_popover, {
            ref_for: true,
            ref: "sizesList",
            placement: "bottom-start",
            "append-to-body": _ctx.popperAppendToBody === false ? false : _ctx.appendToBody,
            trigger: "click",
            "popper-class": "tiny-pager__selector " + (_ctx.popperClass ? "" + _ctx.popperClass : ""),
            "visible-arrow": false,
            disabled: _ctx.disabled,
            onShow: _ctx.handleSizeShowPopover,
            onHide: _ctx.handleSizeHidePopover
          }, {
            reference: withCtx(function() {
              var _ctx$state$pageSizeTe;
              return [createElementVNode("div", {
                class: "tiny-pager__popover",
                onClick: _cache[6] || (_cache[6] = function() {
                  return _ctx.clickSizes && _ctx.clickSizes.apply(_ctx, arguments);
                })
              }, [createElementVNode(
                "div",
                {
                  ref_for: true,
                  ref: "pageSize",
                  class: normalizeClass(["tiny-pager__page-size", {
                    disabled: _ctx.disabled
                  }])
                },
                [createElementVNode(
                  "span",
                  _hoisted_11,
                  toDisplayString(_ctx.state.internalPageSize),
                  1
                  /* TEXT */
                ), createElementVNode(
                  "span",
                  null,
                  toDisplayString((_ctx$state$pageSizeTe = _ctx.state.pageSizeText) != null ? _ctx$state$pageSizeTe : _ctx.t("ui.page.page")),
                  1
                  /* TEXT */
                ), createElementVNode("div", _hoisted_12, [createVNode(_component_triangle_down, {
                  class: normalizeClass(["tiny-svg-size", _ctx.state.showSizes ? "tiny-svg-size__reverse-180" : ""])
                }, null, 8, ["class"])])],
                2
                /* CLASS */
              )])];
            }),
            default: withCtx(function() {
              return [createElementVNode("div", _hoisted_13, [createElementVNode("ul", _hoisted_14, [(openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList(_ctx.pageSizes, function(sizeItem, sizeIndex) {
                  return openBlock(), createElementBlock("li", {
                    key: sizeIndex,
                    class: normalizeClass(["list-item", sizeItem === _ctx.state.internalPageSize ? "is-selected select-pre" : ""]),
                    title: String(sizeItem),
                    onClick: function onClick($event) {
                      return _ctx.handleSizeChange(sizeItem);
                    }
                  }, toDisplayString(sizeItem), 11, _hoisted_15);
                }),
                128
                /* KEYED_FRAGMENT */
              ))])])];
            }),
            _: 1
            /* STABLE */
          }, 8, ["append-to-body", "popper-class", "disabled", "onShow", "onHide"])])) : item === "slot" ? renderSlot(_ctx.$slots, "default", {
            key: 7
          }) : item === "total" && typeof _ctx.state.internalTotal === "number" ? (openBlock(), createElementBlock(
            "div",
            {
              key: "total" + index,
              class: normalizeClass(["tiny-pager__group", {
                "is-disabled": _ctx.disabled,
                "tiny-pager__loading": _ctx.showTotalLoading,
                "tiny-pager__pull-left": _ctx.state.totalFixedLeft
              }])
            },
            [createElementVNode(
              "div",
              {
                class: normalizeClass(["tiny-pager__total", _ctx.size ? "tiny-pager--" + _ctx.size : ""])
              },
              [_ctx.showTotalLoading ? (openBlock(), createElementBlock(
                Fragment,
                {
                  key: 0
                },
                [withDirectives(createElementVNode(
                  "div",
                  _hoisted_16,
                  null,
                  512
                  /* NEED_PATCH */
                ), [[_directive_loading, _ctx.showTotalLoading]]), createElementVNode(
                  "span",
                  _hoisted_17,
                  toDisplayString(_ctx.t("ui.page.loadingTotals")),
                  1
                  /* TEXT */
                )],
                64
                /* STABLE_FRAGMENT */
              )) : _ctx.state.totalI18n === "total" ? (openBlock(), createElementBlock(
                Fragment,
                {
                  key: 1
                },
                [createElementVNode(
                  "span",
                  null,
                  toDisplayString(_ctx.t("ui.page.total")),
                  1
                  /* TEXT */
                ), createElementVNode(
                  "span",
                  _hoisted_18,
                  toDisplayString(_ctx.customTotal ? _ctx.state.totalText : _ctx.state.internalTotal),
                  1
                  /* TEXT */
                ), createElementVNode(
                  "span",
                  null,
                  toDisplayString(_ctx.t("ui.page.item")),
                  1
                  /* TEXT */
                )],
                64
                /* STABLE_FRAGMENT */
              )) : (openBlock(), createElementBlock(
                Fragment,
                {
                  key: 2
                },
                [createElementVNode(
                  "span",
                  null,
                  toDisplayString(_ctx.t("ui.page.totals")),
                  1
                  /* TEXT */
                ), createElementVNode(
                  "span",
                  {
                    class: normalizeClass({
                      "tiny-pager__total-num": !_ctx.customTotal
                    })
                  },
                  toDisplayString(_ctx.customTotal ? _ctx.state.totalText : _ctx.state.internalTotal),
                  3
                  /* TEXT, CLASS */
                )],
                64
                /* STABLE_FRAGMENT */
              ))],
              2
              /* CLASS */
            )],
            2
            /* CLASS */
          )) : createCommentVNode("v-if", true)],
          64
          /* STABLE_FRAGMENT */
        );
      }),
      256
      /* UNKEYED_FRAGMENT */
    ))],
    6
    /* CLASS, STYLE */
  )) : createCommentVNode("v-if", true);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);

export { pc as default };
